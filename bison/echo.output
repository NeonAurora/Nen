Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT


Rules useless in parser due to conflicts

   90 pre_block: /* empty */

   93 body_block: /* empty */

   96 post_block: /* empty */

   99 always_block: /* empty */


State 57 conflicts: 14 shift/reduce
State 137 conflicts: 11 shift/reduce
State 140 conflicts: 1 reduce/reduce
State 141 conflicts: 1 reduce/reduce
State 142 conflicts: 1 reduce/reduce
State 143 conflicts: 1 reduce/reduce
State 144 conflicts: 4 reduce/reduce
State 162 conflicts: 3 reduce/reduce
State 176 conflicts: 11 shift/reduce
State 179 conflicts: 2 reduce/reduce
State 180 conflicts: 11 shift/reduce
State 182 conflicts: 11 shift/reduce
State 184 conflicts: 11 shift/reduce
State 188 conflicts: 11 shift/reduce
State 190 conflicts: 1 reduce/reduce
State 197 conflicts: 11 shift/reduce
State 204 conflicts: 11 shift/reduce
State 207 conflicts: 11 shift/reduce
State 216 conflicts: 11 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement

    3 statement: import_statement
    4          | print_statement
    5          | input_statement
    6          | var_declaration
    7          | assignment_statement
    8          | function_declaration
    9          | return_statement
   10          | conditional_statement
   11          | for_statement
   12          | while_statement
   13          | break_statement
   14          | increment_statement
   15          | decrement_statement
   16          | function_call_statement

   17 import_statement: IMPORT PATH

   18 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   19                | PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   21 var_declaration: VAR var_declaration_list SEMICOLON

   22 var_declaration_list: var_decl
   23                     | var_declaration_list COMMA var_decl

   24 var_decl: IDENTIFIER
   25         | IDENTIFIER COLON TYPE
   26         | IDENTIFIER COLON TYPE EQUALS NUMBER
   27         | IDENTIFIER COLON TYPE LBRACKET NUMBER RBRACKET
   28         | IDENTIFIER EQUALS NUMBER

   29 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON

   30 return_statement: RETURN expression SEMICOLON

   31 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   32                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   33 else_if_clauses: /* empty */
   34                | else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

   35 condition: expression EQUALS_EQUALS expression
   36          | expression NOT_EQUAL expression
   37          | expression LESS_THAN expression
   38          | expression LESS_THAN_EQUAL expression
   39          | expression GREATER_THAN expression
   40          | expression GREATER_THAN_EQUAL expression

   41 expression: NUMBER
   42           | STRING_LITERAL
   43           | IDENTIFIER
   44           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   45           | expression EQUALS expression
   46           | expression OR_OP expression
   47           | expression AND_OP expression
   48           | expression EQUALS_EQUALS expression
   49           | expression NOT_EQUAL expression
   50           | expression LESS_THAN expression
   51           | expression LESS_THAN_EQUAL expression
   52           | expression GREATER_THAN expression
   53           | expression GREATER_THAN_EQUAL expression
   54           | expression PLUS expression
   55           | expression MINUS expression
   56           | expression MULT expression
   57           | expression DIV expression
   58           | expression MOD expression
   59           | NOT_OP expression
   60           | OPEN_PAREN expression CLOSE_PAREN
   61           | IDENTIFIER INCREMENT
   62           | IDENTIFIER DECREMENT

   63 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   64                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   65 param_list: /* empty */
   66           | param_list COMMA param
   67           | param

   68 param: IDENTIFIER COLON TYPE

   69 function_body: /* empty */
   70              | function_body statement
   71              | statement

   72 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   73 argument_list: /* empty */
   74              | expression
   75              | argument_list COMMA expression

   76 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   77 for_init: var_declaration
   78         | IDENTIFIER EQUALS expression SEMICOLON
   79         | SEMICOLON

   80 for_condition: condition SEMICOLON
   81              | SEMICOLON

   82 for_increment: IDENTIFIER EQUALS expression
   83              | IDENTIFIER INCREMENT
   84              | IDENTIFIER DECREMENT
   85              | /* empty */

   86 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

   87 while_body: pre_block body_block post_block always_block

   88 pre_block: /* empty */
   89          | PRE LBRACE function_body RBRACE
   90          | /* empty */

   91 body_block: /* empty */
   92           | BODY LBRACE function_body RBRACE
   93           | /* empty */

   94 post_block: /* empty */
   95           | POST LBRACE function_body RBRACE
   96           | /* empty */

   97 always_block: /* empty */
   98             | ALWAYS LBRACE function_body RBRACE
   99             | /* empty */

  100 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  101 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  102 break_statement: BREAK SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 26 28 29 45 78 82
OR_OP (259) 46
AND_OP (260) 47
NOT_EQUAL (261) 36 49
EQUALS_EQUALS (262) 35 48
GREATER_THAN_EQUAL (263) 40 53
GREATER_THAN (264) 39 52 86
LESS_THAN_EQUAL (265) 38 51
LESS_THAN (266) 37 50 86
MINUS (267) 55
PLUS (268) 54
MOD (269) 58
DIV (270) 57
MULT (271) 56
IMPORT (272) 17
PRINT (273) 18 19
VAR (274) 21
RETURN (275) 30
FUNCTION (276) 63 64
IF (277) 31 32 34
ELSE (278) 32 34
WHILE (279) 86
MAIN (280) 64
END_PROGRAM (281)
FOR (282) 76
PRE (283) 89
POST (284) 95
BODY (285) 92
ALWAYS (286) 98
BREAK (287) 102
INPUT_OP (288) 20
NOT_OP (289) 59
INCREMENT (290) 61 83 100
DECREMENT (291) 62 84 101
OPEN_PAREN (292) 18 19 20 31 32 34 44 60 63 64 72 76
CLOSE_PAREN (293) 18 19 20 31 32 34 44 60 63 64 72 76
LBRACKET (294) 27
RBRACKET (295) 27
LBRACE (296) 31 32 34 63 64 76 86 89 92 95 98
RBRACE (297) 31 32 34 63 64 76 86 89 92 95 98
SEMICOLON (298) 18 19 20 21 29 30 72 78 79 80 81 100 101 102
COMMA (299) 23 66 75
INVERTED_COMMA (300)
DOUBLE_QUOTE (301)
COLON (302) 25 26 27 63 64 68
BODY_START (303)
BODY_END (304)
STRING_LITERAL (305) 18 20 42
IDENTIFIER (306) 19 20 24 25 26 27 28 29 43 44 61 62 63 68 72 78 82
    83 84 100 101
PATH (307) 17
TYPE (308) 25 26 27 63 64 68
NUMBER (309) 26 27 28 41
SINGLE_LINE_COMMENT_START (310)
MULTI_LINE_COMMENT_START (311)
MULTI_LINE_COMMENT_END (312)
ARRAY_INIT (313)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1 2, on right: 0 2
statement (61)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 70 71
import_statement (62)
    on left: 17, on right: 3
print_statement (63)
    on left: 18 19, on right: 4
input_statement (64)
    on left: 20, on right: 5
var_declaration (65)
    on left: 21, on right: 6 77
var_declaration_list (66)
    on left: 22 23, on right: 21 23
var_decl (67)
    on left: 24 25 26 27 28, on right: 22 23
assignment_statement (68)
    on left: 29, on right: 7
return_statement (69)
    on left: 30, on right: 9
conditional_statement (70)
    on left: 31 32, on right: 10
else_if_clauses (71)
    on left: 33 34, on right: 31 32 34
condition (72)
    on left: 35 36 37 38 39 40, on right: 31 32 34 80 86
expression (73)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
    59 60 61 62, on right: 29 30 35 36 37 38 39 40 45 46 47 48 49 50
    51 52 53 54 55 56 57 58 59 60 74 75 78 82
function_declaration (74)
    on left: 63 64, on right: 8
param_list (75)
    on left: 65 66 67, on right: 63 66
param (76)
    on left: 68, on right: 66 67
function_body (77)
    on left: 69 70 71, on right: 31 32 34 63 64 70 76 89 92 95 98
function_call_statement (78)
    on left: 72, on right: 16
argument_list (79)
    on left: 73 74 75, on right: 44 72 75
for_statement (80)
    on left: 76, on right: 11
for_init (81)
    on left: 77 78 79, on right: 76
for_condition (82)
    on left: 80 81, on right: 76
for_increment (83)
    on left: 82 83 84 85, on right: 76
while_statement (84)
    on left: 86, on right: 12
while_body (85)
    on left: 87, on right: 86
pre_block (86)
    on left: 88 89 90, on right: 87
body_block (87)
    on left: 91 92 93, on right: 87
post_block (88)
    on left: 94 95 96, on right: 87
always_block (89)
    on left: 97 98 99, on right: 87
increment_statement (90)
    on left: 100, on right: 14
decrement_statement (91)
    on left: 101, on right: 15
break_statement (92)
    on left: 102, on right: 13


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 2
    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    statement                go to state 14
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 2

    0 $accept: program $end .

    $default  accept


state 3

   17 import_statement: IMPORT . PATH

    PATH  shift, and go to state 29


state 4

   18 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   19                | PRINT . OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 30


state 5

   21 var_declaration: VAR . var_declaration_list SEMICOLON

    IDENTIFIER  shift, and go to state 31

    var_declaration_list  go to state 32
    var_decl              go to state 33


state 6

   30 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 39


state 7

   63 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 40


state 8

   31 conditional_statement: IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   32                      | IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 41


state 9

   86 while_statement: WHILE . LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 42


state 10

   64 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 43


state 11

   76 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 44


state 12

  102 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 45


state 13

   20 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   29 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   72 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  100 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  101 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 46
    INPUT_OP    shift, and go to state 47
    INCREMENT   shift, and go to state 48
    DECREMENT   shift, and go to state 49
    OPEN_PAREN  shift, and go to state 50


state 14

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 15

    3 statement: import_statement .

    $default  reduce using rule 3 (statement)


state 16

    4 statement: print_statement .

    $default  reduce using rule 4 (statement)


state 17

    5 statement: input_statement .

    $default  reduce using rule 5 (statement)


state 18

    6 statement: var_declaration .

    $default  reduce using rule 6 (statement)


state 19

    7 statement: assignment_statement .

    $default  reduce using rule 7 (statement)


state 20

    9 statement: return_statement .

    $default  reduce using rule 9 (statement)


state 21

   10 statement: conditional_statement .

    $default  reduce using rule 10 (statement)


state 22

    8 statement: function_declaration .

    $default  reduce using rule 8 (statement)


state 23

   16 statement: function_call_statement .

    $default  reduce using rule 16 (statement)


state 24

   11 statement: for_statement .

    $default  reduce using rule 11 (statement)


state 25

   12 statement: while_statement .

    $default  reduce using rule 12 (statement)


state 26

   14 statement: increment_statement .

    $default  reduce using rule 14 (statement)


state 27

   15 statement: decrement_statement .

    $default  reduce using rule 15 (statement)


state 28

   13 statement: break_statement .

    $default  reduce using rule 13 (statement)


state 29

   17 import_statement: IMPORT PATH .

    $default  reduce using rule 17 (import_statement)


state 30

   18 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   19                | PRINT OPEN_PAREN . IDENTIFIER CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 51
    IDENTIFIER      shift, and go to state 52


state 31

   24 var_decl: IDENTIFIER .
   25         | IDENTIFIER . COLON TYPE
   26         | IDENTIFIER . COLON TYPE EQUALS NUMBER
   27         | IDENTIFIER . COLON TYPE LBRACKET NUMBER RBRACKET
   28         | IDENTIFIER . EQUALS NUMBER

    EQUALS  shift, and go to state 53
    COLON   shift, and go to state 54

    $default  reduce using rule 24 (var_decl)


state 32

   21 var_declaration: VAR var_declaration_list . SEMICOLON
   23 var_declaration_list: var_declaration_list . COMMA var_decl

    SEMICOLON  shift, and go to state 55
    COMMA      shift, and go to state 56


state 33

   22 var_declaration_list: var_decl .

    $default  reduce using rule 22 (var_declaration_list)


state 34

   59 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 57


state 35

   60 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 58


state 36

   42 expression: STRING_LITERAL .

    $default  reduce using rule 42 (expression)


state 37

   43 expression: IDENTIFIER .
   44           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   61           | IDENTIFIER . INCREMENT
   62           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 59
    DECREMENT   shift, and go to state 60
    OPEN_PAREN  shift, and go to state 61

    $default  reduce using rule 43 (expression)


state 38

   41 expression: NUMBER .

    $default  reduce using rule 41 (expression)


state 39

   30 return_statement: RETURN expression . SEMICOLON
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75
    SEMICOLON           shift, and go to state 76


state 40

   63 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 77


state 41

   31 conditional_statement: IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   32                      | IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    condition   go to state 78
    expression  go to state 79


state 42

   86 while_statement: WHILE LESS_THAN . condition GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    condition   go to state 80
    expression  go to state 79


state 43

   64 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 81


state 44

   76 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 5
    SEMICOLON   shift, and go to state 82
    IDENTIFIER  shift, and go to state 83

    var_declaration  go to state 84
    for_init         go to state 85


state 45

  102 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 102 (break_statement)


state 46

   29 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 86


state 47

   20 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 87


state 48

  100 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 49

  101 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 89


state 50

   72 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    $default  reduce using rule 73 (argument_list)

    expression     go to state 90
    argument_list  go to state 91


state 51

   18 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 92


state 52

   19 print_statement: PRINT OPEN_PAREN IDENTIFIER . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 93


state 53

   28 var_decl: IDENTIFIER EQUALS . NUMBER

    NUMBER  shift, and go to state 94


state 54

   25 var_decl: IDENTIFIER COLON . TYPE
   26         | IDENTIFIER COLON . TYPE EQUALS NUMBER
   27         | IDENTIFIER COLON . TYPE LBRACKET NUMBER RBRACKET

    TYPE  shift, and go to state 95


state 55

   21 var_declaration: VAR var_declaration_list SEMICOLON .

    $default  reduce using rule 21 (var_declaration)


state 56

   23 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 31

    var_decl  go to state 96


state 57

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression
   59           | NOT_OP expression .

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    EQUALS              [reduce using rule 59 (expression)]
    OR_OP               [reduce using rule 59 (expression)]
    AND_OP              [reduce using rule 59 (expression)]
    NOT_EQUAL           [reduce using rule 59 (expression)]
    EQUALS_EQUALS       [reduce using rule 59 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 59 (expression)]
    GREATER_THAN        [reduce using rule 59 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 59 (expression)]
    LESS_THAN           [reduce using rule 59 (expression)]
    MINUS               [reduce using rule 59 (expression)]
    PLUS                [reduce using rule 59 (expression)]
    MOD                 [reduce using rule 59 (expression)]
    DIV                 [reduce using rule 59 (expression)]
    MULT                [reduce using rule 59 (expression)]
    $default            reduce using rule 59 (expression)


state 58

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression
   60           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75
    CLOSE_PAREN         shift, and go to state 97


state 59

   61 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 61 (expression)


state 60

   62 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 62 (expression)


state 61

   44 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    $default  reduce using rule 73 (argument_list)

    expression     go to state 90
    argument_list  go to state 98


state 62

   45 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 99


state 63

   46 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 100


state 64

   47 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 101


state 65

   49 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 102


state 66

   48 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 103


state 67

   53 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 104


state 68

   52 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 105


state 69

   51 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 106


state 70

   50 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 107


state 71

   55 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 108


state 72

   54 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 109


state 73

   58 expression: expression MOD . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 110


state 74

   57 expression: expression DIV . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 111


state 75

   56 expression: expression MULT . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 112


state 76

   30 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 30 (return_statement)


state 77

   63 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 113


state 78

   31 conditional_statement: IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   32                      | IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 114


state 79

   35 condition: expression . EQUALS_EQUALS expression
   36          | expression . NOT_EQUAL expression
   37          | expression . LESS_THAN expression
   38          | expression . LESS_THAN_EQUAL expression
   39          | expression . GREATER_THAN expression
   40          | expression . GREATER_THAN_EQUAL expression
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 115
    EQUALS_EQUALS       shift, and go to state 116
    GREATER_THAN_EQUAL  shift, and go to state 117
    GREATER_THAN        shift, and go to state 118
    LESS_THAN_EQUAL     shift, and go to state 119
    LESS_THAN           shift, and go to state 120
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75


state 80

   86 while_statement: WHILE LESS_THAN condition . GREATER_THAN LBRACE while_body RBRACE

    GREATER_THAN  shift, and go to state 121


state 81

   64 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 122


state 82

   79 for_init: SEMICOLON .

    $default  reduce using rule 79 (for_init)


state 83

   78 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 123


state 84

   77 for_init: var_declaration .

    $default  reduce using rule 77 (for_init)


state 85

   76 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    SEMICOLON       shift, and go to state 124
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    condition      go to state 125
    expression     go to state 79
    for_condition  go to state 126


state 86

   29 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75
    SEMICOLON           shift, and go to state 127


state 87

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 128


state 88

  100 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 100 (increment_statement)


state 89

  101 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 101 (decrement_statement)


state 90

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression
   74 argument_list: expression .

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 74 (argument_list)


state 91

   72 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   75 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 129
    COMMA        shift, and go to state 130


state 92

   18 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 131


state 93

   19 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 132


state 94

   28 var_decl: IDENTIFIER EQUALS NUMBER .

    $default  reduce using rule 28 (var_decl)


state 95

   25 var_decl: IDENTIFIER COLON TYPE .
   26         | IDENTIFIER COLON TYPE . EQUALS NUMBER
   27         | IDENTIFIER COLON TYPE . LBRACKET NUMBER RBRACKET

    EQUALS    shift, and go to state 133
    LBRACKET  shift, and go to state 134

    $default  reduce using rule 25 (var_decl)


state 96

   23 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 23 (var_declaration_list)


state 97

   60 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 60 (expression)


state 98

   44 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   75 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 135
    COMMA        shift, and go to state 130


state 99

   45 expression: expression . EQUALS expression
   45           | expression EQUALS expression .
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 45 (expression)


state 100

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   46           | expression OR_OP expression .
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 46 (expression)


state 101

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   47           | expression AND_OP expression .
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 47 (expression)


state 102

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   49           | expression NOT_EQUAL expression .
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 49 (expression)


state 103

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   48           | expression EQUALS_EQUALS expression .
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 48 (expression)


state 104

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   53           | expression GREATER_THAN_EQUAL expression .
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    $default  reduce using rule 53 (expression)


state 105

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   52           | expression GREATER_THAN expression .
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    $default  reduce using rule 52 (expression)


state 106

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   51           | expression LESS_THAN_EQUAL expression .
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    $default  reduce using rule 51 (expression)


state 107

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   50           | expression LESS_THAN expression .
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    $default  reduce using rule 50 (expression)


state 108

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   55           | expression MINUS expression .
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MOD   shift, and go to state 73
    DIV   shift, and go to state 74
    MULT  shift, and go to state 75

    $default  reduce using rule 55 (expression)


state 109

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   54           | expression PLUS expression .
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MOD   shift, and go to state 73
    DIV   shift, and go to state 74
    MULT  shift, and go to state 75

    $default  reduce using rule 54 (expression)


state 110

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression
   58           | expression MOD expression .

    $default  reduce using rule 58 (expression)


state 111

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   57           | expression DIV expression .
   58           | expression . MOD expression

    $default  reduce using rule 57 (expression)


state 112

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   56           | expression MULT expression .
   57           | expression . DIV expression
   58           | expression . MOD expression

    $default  reduce using rule 56 (expression)


state 113

   63 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 136


state 114

   31 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   32                      | IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 137


state 115

   36 condition: expression NOT_EQUAL . expression
   49 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 138


state 116

   35 condition: expression EQUALS_EQUALS . expression
   48 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 139


state 117

   40 condition: expression GREATER_THAN_EQUAL . expression
   53 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 140


state 118

   39 condition: expression GREATER_THAN . expression
   52 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 141


state 119

   38 condition: expression LESS_THAN_EQUAL . expression
   51 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 142


state 120

   37 condition: expression LESS_THAN . expression
   50 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 143


state 121

   86 while_statement: WHILE LESS_THAN condition GREATER_THAN . LBRACE while_body RBRACE

    LBRACE  shift, and go to state 144


state 122

   64 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 145


state 123

   78 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 146


state 124

   81 for_condition: SEMICOLON .

    $default  reduce using rule 81 (for_condition)


state 125

   80 for_condition: condition . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 126

   76 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 148

    $default  reduce using rule 85 (for_increment)

    for_increment  go to state 149


state 127

   29 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 29 (assignment_statement)


state 128

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 150


state 129

   72 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 151


state 130

   75 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 152


state 131

   18 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 18 (print_statement)


state 132

   19 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 19 (print_statement)


state 133

   26 var_decl: IDENTIFIER COLON TYPE EQUALS . NUMBER

    NUMBER  shift, and go to state 153


state 134

   27 var_decl: IDENTIFIER COLON TYPE LBRACKET . NUMBER RBRACKET

    NUMBER  shift, and go to state 154


state 135

   44 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 44 (expression)


state 136

   63 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 155

    $default  reduce using rule 65 (param_list)

    param_list  go to state 156
    param       go to state 157


state 137

   31 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   32                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 159
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 138

   36 condition: expression NOT_EQUAL expression .
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   49           | expression NOT_EQUAL expression .
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    CLOSE_PAREN  reduce using rule 36 (condition)
    SEMICOLON    reduce using rule 36 (condition)
    $default     reduce using rule 49 (expression)


state 139

   35 condition: expression EQUALS_EQUALS expression .
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   48           | expression EQUALS_EQUALS expression .
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    CLOSE_PAREN  reduce using rule 35 (condition)
    SEMICOLON    reduce using rule 35 (condition)
    $default     reduce using rule 48 (expression)


state 140

   40 condition: expression GREATER_THAN_EQUAL expression .
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   53           | expression GREATER_THAN_EQUAL expression .
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    GREATER_THAN  reduce using rule 40 (condition)
    GREATER_THAN  [reduce using rule 53 (expression)]
    CLOSE_PAREN   reduce using rule 40 (condition)
    SEMICOLON     reduce using rule 40 (condition)
    $default      reduce using rule 53 (expression)


state 141

   39 condition: expression GREATER_THAN expression .
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   52           | expression GREATER_THAN expression .
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    GREATER_THAN  reduce using rule 39 (condition)
    GREATER_THAN  [reduce using rule 52 (expression)]
    CLOSE_PAREN   reduce using rule 39 (condition)
    SEMICOLON     reduce using rule 39 (condition)
    $default      reduce using rule 52 (expression)


state 142

   38 condition: expression LESS_THAN_EQUAL expression .
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   51           | expression LESS_THAN_EQUAL expression .
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    GREATER_THAN  reduce using rule 38 (condition)
    GREATER_THAN  [reduce using rule 51 (expression)]
    CLOSE_PAREN   reduce using rule 38 (condition)
    SEMICOLON     reduce using rule 38 (condition)
    $default      reduce using rule 51 (expression)


state 143

   37 condition: expression LESS_THAN expression .
   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   50           | expression LESS_THAN expression .
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    GREATER_THAN  reduce using rule 37 (condition)
    GREATER_THAN  [reduce using rule 50 (expression)]
    CLOSE_PAREN   reduce using rule 37 (condition)
    SEMICOLON     reduce using rule 37 (condition)
    $default      reduce using rule 50 (expression)


state 144

   86 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 160

    POST      reduce using rule 88 (pre_block)
    POST      [reduce using rule 90 (pre_block)]
    BODY      reduce using rule 88 (pre_block)
    BODY      [reduce using rule 90 (pre_block)]
    ALWAYS    reduce using rule 88 (pre_block)
    ALWAYS    [reduce using rule 90 (pre_block)]
    RBRACE    reduce using rule 88 (pre_block)
    RBRACE    [reduce using rule 90 (pre_block)]
    $default  reduce using rule 88 (pre_block)

    while_body  go to state 161
    pre_block   go to state 162


state 145

   64 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 163


state 146

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression
   78 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75
    SEMICOLON           shift, and go to state 164


state 147

   80 for_condition: condition SEMICOLON .

    $default  reduce using rule 80 (for_condition)


state 148

   82 for_increment: IDENTIFIER . EQUALS expression
   83              | IDENTIFIER . INCREMENT
   84              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 165
    INCREMENT  shift, and go to state 166
    DECREMENT  shift, and go to state 167


state 149

   76 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 168


state 150

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 169


state 151

   72 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 72 (function_call_statement)


state 152

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression
   75 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 75 (argument_list)


state 153

   26 var_decl: IDENTIFIER COLON TYPE EQUALS NUMBER .

    $default  reduce using rule 26 (var_decl)


state 154

   27 var_decl: IDENTIFIER COLON TYPE LBRACKET NUMBER . RBRACKET

    RBRACKET  shift, and go to state 170


state 155

   68 param: IDENTIFIER . COLON TYPE

    COLON  shift, and go to state 171


state 156

   63 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   66 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 172
    COMMA        shift, and go to state 173


state 157

   67 param_list: param .

    $default  reduce using rule 67 (param_list)


state 158

   71 function_body: statement .

    $default  reduce using rule 71 (function_body)


state 159

   31 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   32                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   70 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 174
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 160

   89 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 176


state 161

   86 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 177


state 162

   87 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 178

    POST      reduce using rule 91 (body_block)
    POST      [reduce using rule 93 (body_block)]
    ALWAYS    reduce using rule 91 (body_block)
    ALWAYS    [reduce using rule 93 (body_block)]
    RBRACE    reduce using rule 91 (body_block)
    RBRACE    [reduce using rule 93 (body_block)]
    $default  reduce using rule 91 (body_block)

    body_block  go to state 179


state 163

   64 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 180


state 164

   78 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 78 (for_init)


state 165

   82 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 181


state 166

   83 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 83 (for_increment)


state 167

   84 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 84 (for_increment)


state 168

   76 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 182


state 169

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 20 (input_statement)


state 170

   27 var_decl: IDENTIFIER COLON TYPE LBRACKET NUMBER RBRACKET .

    $default  reduce using rule 27 (var_decl)


state 171

   68 param: IDENTIFIER COLON . TYPE

    TYPE  shift, and go to state 183


state 172

   63 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 184


state 173

   66 param_list: param_list COMMA . param

    IDENTIFIER  shift, and go to state 155

    param  go to state 185


state 174

   31 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   32                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 33 (else_if_clauses)

    else_if_clauses  go to state 186


state 175

   70 function_body: function_body statement .

    $default  reduce using rule 70 (function_body)


state 176

   89 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 187
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 177

   86 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 86 (while_statement)


state 178

   92 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 188


state 179

   87 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 189

    ALWAYS    reduce using rule 94 (post_block)
    ALWAYS    [reduce using rule 96 (post_block)]
    RBRACE    reduce using rule 94 (post_block)
    RBRACE    [reduce using rule 96 (post_block)]
    $default  reduce using rule 94 (post_block)

    post_block  go to state 190


state 180

   64 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 191
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 181

   45 expression: expression . EQUALS expression
   46           | expression . OR_OP expression
   47           | expression . AND_OP expression
   48           | expression . EQUALS_EQUALS expression
   49           | expression . NOT_EQUAL expression
   50           | expression . LESS_THAN expression
   51           | expression . LESS_THAN_EQUAL expression
   52           | expression . GREATER_THAN expression
   53           | expression . GREATER_THAN_EQUAL expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MULT expression
   57           | expression . DIV expression
   58           | expression . MOD expression
   82 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 82 (for_increment)


state 182

   76 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 192
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 183

   68 param: IDENTIFIER COLON TYPE .

    $default  reduce using rule 68 (param)


state 184

   63 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 193
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 185

   66 param_list: param_list COMMA param .

    $default  reduce using rule 66 (param_list)


state 186

   31 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   32                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   34 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 194

    $default  reduce using rule 31 (conditional_statement)


state 187

   70 function_body: function_body . statement
   89 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 195
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 188

   92 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 196
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 189

   95 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 197


state 190

   87 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 198

    RBRACE    reduce using rule 97 (always_block)
    RBRACE    [reduce using rule 99 (always_block)]
    $default  reduce using rule 97 (always_block)

    always_block  go to state 199


state 191

   64 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   70 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 200
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 192

   70 function_body: function_body . statement
   76 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 201
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 193

   63 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   70 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 202
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 194

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   34 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 203
    LBRACE  shift, and go to state 204


state 195

   89 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 89 (pre_block)


state 196

   70 function_body: function_body . statement
   92 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 205
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 197

   95 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 206
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 198

   98 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 207


state 199

   87 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 87 (while_body)


state 200

   64 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 64 (function_declaration)


state 201

   76 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 76 (for_statement)


state 202

   63 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 63 (function_declaration)


state 203

   34 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 208


state 204

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 209
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 205

   92 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 92 (body_block)


state 206

   70 function_body: function_body . statement
   95 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 210
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 207

   98 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 211
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 208

   34 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    condition   go to state 212
    expression  go to state 79


state 209

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   70 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 213
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 210

   95 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 95 (post_block)


state 211

   70 function_body: function_body . statement
   98 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 214
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 212

   34 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 215


state 213

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 32 (conditional_statement)


state 214

   98 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 98 (always_block)


state 215

   34 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 216


state 216

   34 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 69 (function_body)]
    PRINT       [reduce using rule 69 (function_body)]
    VAR         [reduce using rule 69 (function_body)]
    RETURN      [reduce using rule 69 (function_body)]
    FUNCTION    [reduce using rule 69 (function_body)]
    IF          [reduce using rule 69 (function_body)]
    WHILE       [reduce using rule 69 (function_body)]
    MAIN        [reduce using rule 69 (function_body)]
    FOR         [reduce using rule 69 (function_body)]
    BREAK       [reduce using rule 69 (function_body)]
    IDENTIFIER  [reduce using rule 69 (function_body)]
    $default    reduce using rule 69 (function_body)

    statement                go to state 158
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 217
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 217

   34 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE
   70 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 218
    IDENTIFIER  shift, and go to state 13

    statement                go to state 175
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 218

   34 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 34 (else_if_clauses)
