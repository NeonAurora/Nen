Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT


Rules useless in parser due to conflicts

  100 pre_block: /* empty */

  103 body_block: /* empty */

  106 post_block: /* empty */

  109 always_block: /* empty */


State 63 conflicts: 14 shift/reduce
State 148 conflicts: 11 shift/reduce
State 151 conflicts: 1 reduce/reduce
State 152 conflicts: 1 reduce/reduce
State 153 conflicts: 1 reduce/reduce
State 154 conflicts: 1 reduce/reduce
State 155 conflicts: 4 reduce/reduce
State 173 conflicts: 3 reduce/reduce
State 187 conflicts: 11 shift/reduce
State 190 conflicts: 2 reduce/reduce
State 191 conflicts: 11 shift/reduce
State 193 conflicts: 11 shift/reduce
State 195 conflicts: 11 shift/reduce
State 199 conflicts: 11 shift/reduce
State 201 conflicts: 1 reduce/reduce
State 208 conflicts: 11 shift/reduce
State 215 conflicts: 11 shift/reduce
State 218 conflicts: 11 shift/reduce
State 227 conflicts: 11 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement
    3        | end_of_the_line

    4 statement: import_statement
    5          | print_statement
    6          | input_statement
    7          | var_declaration
    8          | assignment_statement
    9          | function_declaration
   10          | return_statement
   11          | conditional_statement
   12          | for_statement
   13          | while_statement
   14          | break_statement
   15          | increment_statement
   16          | decrement_statement
   17          | function_call_statement

   18 import_statement: IMPORT PATH

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   22 var_declaration: VAR var_declaration_list SEMICOLON

   23 var_declaration_list: var_decl
   24                     | var_declaration_list COMMA var_decl

   25 var_decl: IDENTIFIER
   26         | IDENTIFIER COLON TYPE
   27         | IDENTIFIER COLON TYPE EQUALS value
   28         | IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET
   29         | IDENTIFIER EQUALS value

   30 value: INTEGER
   31      | FLOAT
   32      | STRING_LITERAL
   33      | CHAR_LITERAL
   34      | DOUBLE

   35 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON

   36 return_statement: RETURN expression SEMICOLON

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   39 else_if_clauses: /* empty */
   40                | else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

   41 condition: expression EQUALS_EQUALS expression
   42          | expression NOT_EQUAL expression
   43          | expression LESS_THAN expression
   44          | expression LESS_THAN_EQUAL expression
   45          | expression GREATER_THAN expression
   46          | expression GREATER_THAN_EQUAL expression

   47 expression: INTEGER
   48           | FLOAT
   49           | STRING_LITERAL
   50           | CHAR_LITERAL
   51           | DOUBLE
   52           | BOOL
   53           | IDENTIFIER
   54           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   55           | expression EQUALS expression
   56           | expression OR_OP expression
   57           | expression AND_OP expression
   58           | expression EQUALS_EQUALS expression
   59           | expression NOT_EQUAL expression
   60           | expression LESS_THAN expression
   61           | expression LESS_THAN_EQUAL expression
   62           | expression GREATER_THAN expression
   63           | expression GREATER_THAN_EQUAL expression
   64           | expression PLUS expression
   65           | expression MINUS expression
   66           | expression MULT expression
   67           | expression DIV expression
   68           | expression MOD expression
   69           | NOT_OP expression
   70           | OPEN_PAREN expression CLOSE_PAREN
   71           | IDENTIFIER INCREMENT
   72           | IDENTIFIER DECREMENT

   73 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   74                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   75 param_list: /* empty */
   76           | param_list COMMA param
   77           | param

   78 param: IDENTIFIER COLON TYPE

   79 function_body: /* empty */
   80              | function_body statement
   81              | statement

   82 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   83 argument_list: /* empty */
   84              | expression
   85              | argument_list COMMA expression

   86 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   87 for_init: var_declaration
   88         | IDENTIFIER EQUALS expression SEMICOLON
   89         | SEMICOLON

   90 for_condition: condition SEMICOLON
   91              | SEMICOLON

   92 for_increment: IDENTIFIER EQUALS expression
   93              | IDENTIFIER INCREMENT
   94              | IDENTIFIER DECREMENT
   95              | /* empty */

   96 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

   97 while_body: pre_block body_block post_block always_block

   98 pre_block: /* empty */
   99          | PRE LBRACE function_body RBRACE
  100          | /* empty */

  101 body_block: /* empty */
  102           | BODY LBRACE function_body RBRACE
  103           | /* empty */

  104 post_block: /* empty */
  105           | POST LBRACE function_body RBRACE
  106           | /* empty */

  107 always_block: /* empty */
  108             | ALWAYS LBRACE function_body RBRACE
  109             | /* empty */

  110 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  111 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  112 break_statement: BREAK SEMICOLON

  113 end_of_the_line: END


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 27 29 35 55 88 92
OR_OP (259) 56
AND_OP (260) 57
NOT_EQUAL (261) 42 59
EQUALS_EQUALS (262) 41 58
GREATER_THAN_EQUAL (263) 46 63
GREATER_THAN (264) 45 62 96
LESS_THAN_EQUAL (265) 44 61
LESS_THAN (266) 43 60 96
MINUS (267) 65
PLUS (268) 64
MOD (269) 68
DIV (270) 67
MULT (271) 66
IMPORT (272) 18
PRINT (273) 19 20
VAR (274) 22
RETURN (275) 36
FUNCTION (276) 73 74
IF (277) 37 38 40
ELSE (278) 38 40
WHILE (279) 96
MAIN (280) 74
END_PROGRAM (281)
FOR (282) 86
PRE (283) 99
POST (284) 105
BODY (285) 102
ALWAYS (286) 108
BREAK (287) 112
INPUT_OP (288) 21
NOT_OP (289) 69
INCREMENT (290) 71 93 110
DECREMENT (291) 72 94 111
OPEN_PAREN (292) 19 20 21 37 38 40 54 70 73 74 82 86
CLOSE_PAREN (293) 19 20 21 37 38 40 54 70 73 74 82 86
LBRACKET (294) 28
RBRACKET (295) 28
LBRACE (296) 37 38 40 73 74 86 96 99 102 105 108
RBRACE (297) 37 38 40 73 74 86 96 99 102 105 108
SEMICOLON (298) 19 20 21 22 35 36 82 88 89 90 91 110 111 112
COMMA (299) 24 76 85
INVERTED_COMMA (300)
DOUBLE_QUOTE (301)
COLON (302) 26 27 28 73 74 78
BODY_START (303)
BODY_END (304)
DOUBLE (305) 34 51
FLOAT (306) 31 48
INTEGER (307) 28 30 47
BOOL (308) 52
CHAR_LITERAL (309) 33 50
STRING_LITERAL (310) 19 21 32 49
IDENTIFIER (311) 20 21 25 26 27 28 29 35 53 54 71 72 73 78 82 88 92
    93 94 110 111
PATH (312) 18
TYPE (313) 26 27 28 73 74 78
SINGLE_LINE_COMMENT_START (314)
MULTI_LINE_COMMENT_START (315)
MULTI_LINE_COMMENT_END (316)
ARRAY_INIT (317)
END (318) 113


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1 2 3, on right: 0 2
statement (66)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 80 81
import_statement (67)
    on left: 18, on right: 4
print_statement (68)
    on left: 19 20, on right: 5
input_statement (69)
    on left: 21, on right: 6
var_declaration (70)
    on left: 22, on right: 7 87
var_declaration_list (71)
    on left: 23 24, on right: 22 24
var_decl (72)
    on left: 25 26 27 28 29, on right: 23 24
value (73)
    on left: 30 31 32 33 34, on right: 27 29
assignment_statement (74)
    on left: 35, on right: 8
return_statement (75)
    on left: 36, on right: 10
conditional_statement (76)
    on left: 37 38, on right: 11
else_if_clauses (77)
    on left: 39 40, on right: 37 38 40
condition (78)
    on left: 41 42 43 44 45 46, on right: 37 38 40 90 96
expression (79)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72, on right: 35 36 41 42 43 44 45 46 55 56
    57 58 59 60 61 62 63 64 65 66 67 68 69 70 84 85 88 92
function_declaration (80)
    on left: 73 74, on right: 9
param_list (81)
    on left: 75 76 77, on right: 73 76
param (82)
    on left: 78, on right: 76 77
function_body (83)
    on left: 79 80 81, on right: 37 38 40 73 74 80 86 99 102 105 108
function_call_statement (84)
    on left: 82, on right: 17
argument_list (85)
    on left: 83 84 85, on right: 54 82 85
for_statement (86)
    on left: 86, on right: 12
for_init (87)
    on left: 87 88 89, on right: 86
for_condition (88)
    on left: 90 91, on right: 86
for_increment (89)
    on left: 92 93 94 95, on right: 86
while_statement (90)
    on left: 96, on right: 13
while_body (91)
    on left: 97, on right: 96
pre_block (92)
    on left: 98 99 100, on right: 97
body_block (93)
    on left: 101 102 103, on right: 97
post_block (94)
    on left: 104 105 106, on right: 97
always_block (95)
    on left: 107 108 109, on right: 97
increment_statement (96)
    on left: 110, on right: 15
decrement_statement (97)
    on left: 111, on right: 16
break_statement (98)
    on left: 112, on right: 14
end_of_the_line (99)
    on left: 113, on right: 3


state 0

    0 $accept: . program $end

    END  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program          go to state 2
    end_of_the_line  go to state 3


state 1

  113 end_of_the_line: END .

    $default  reduce using rule 113 (end_of_the_line)


state 2

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 4
    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    statement                go to state 16
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 3

    3 program: end_of_the_line .

    $default  reduce using rule 3 (program)


state 4

    0 $accept: program $end .

    $default  accept


state 5

   18 import_statement: IMPORT . PATH

    PATH  shift, and go to state 31


state 6

   19 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT . OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 32


state 7

   22 var_declaration: VAR . var_declaration_list SEMICOLON

    IDENTIFIER  shift, and go to state 33

    var_declaration_list  go to state 34
    var_decl              go to state 35


state 8

   36 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 45


state 9

   73 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 46


state 10

   37 conditional_statement: IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 47


state 11

   96 while_statement: WHILE . LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 48


state 12

   74 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 49


state 13

   86 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 50


state 14

  112 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


state 15

   21 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   35 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   82 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  110 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  111 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 52
    INPUT_OP    shift, and go to state 53
    INCREMENT   shift, and go to state 54
    DECREMENT   shift, and go to state 55
    OPEN_PAREN  shift, and go to state 56


state 16

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 17

    4 statement: import_statement .

    $default  reduce using rule 4 (statement)


state 18

    5 statement: print_statement .

    $default  reduce using rule 5 (statement)


state 19

    6 statement: input_statement .

    $default  reduce using rule 6 (statement)


state 20

    7 statement: var_declaration .

    $default  reduce using rule 7 (statement)


state 21

    8 statement: assignment_statement .

    $default  reduce using rule 8 (statement)


state 22

   10 statement: return_statement .

    $default  reduce using rule 10 (statement)


state 23

   11 statement: conditional_statement .

    $default  reduce using rule 11 (statement)


state 24

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 25

   17 statement: function_call_statement .

    $default  reduce using rule 17 (statement)


state 26

   12 statement: for_statement .

    $default  reduce using rule 12 (statement)


state 27

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


state 28

   15 statement: increment_statement .

    $default  reduce using rule 15 (statement)


state 29

   16 statement: decrement_statement .

    $default  reduce using rule 16 (statement)


state 30

   14 statement: break_statement .

    $default  reduce using rule 14 (statement)


state 31

   18 import_statement: IMPORT PATH .

    $default  reduce using rule 18 (import_statement)


state 32

   19 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN . IDENTIFIER CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 57
    IDENTIFIER      shift, and go to state 58


state 33

   25 var_decl: IDENTIFIER .
   26         | IDENTIFIER . COLON TYPE
   27         | IDENTIFIER . COLON TYPE EQUALS value
   28         | IDENTIFIER . COLON TYPE LBRACKET INTEGER RBRACKET
   29         | IDENTIFIER . EQUALS value

    EQUALS  shift, and go to state 59
    COLON   shift, and go to state 60

    $default  reduce using rule 25 (var_decl)


state 34

   22 var_declaration: VAR var_declaration_list . SEMICOLON
   24 var_declaration_list: var_declaration_list . COMMA var_decl

    SEMICOLON  shift, and go to state 61
    COMMA      shift, and go to state 62


state 35

   23 var_declaration_list: var_decl .

    $default  reduce using rule 23 (var_declaration_list)


state 36

   69 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 63


state 37

   70 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 64


state 38

   51 expression: DOUBLE .

    $default  reduce using rule 51 (expression)


state 39

   48 expression: FLOAT .

    $default  reduce using rule 48 (expression)


state 40

   47 expression: INTEGER .

    $default  reduce using rule 47 (expression)


state 41

   52 expression: BOOL .

    $default  reduce using rule 52 (expression)


state 42

   50 expression: CHAR_LITERAL .

    $default  reduce using rule 50 (expression)


state 43

   49 expression: STRING_LITERAL .

    $default  reduce using rule 49 (expression)


state 44

   53 expression: IDENTIFIER .
   54           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   71           | IDENTIFIER . INCREMENT
   72           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 65
    DECREMENT   shift, and go to state 66
    OPEN_PAREN  shift, and go to state 67

    $default  reduce using rule 53 (expression)


state 45

   36 return_statement: RETURN expression . SEMICOLON
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81
    SEMICOLON           shift, and go to state 82


state 46

   73 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 83


state 47

   37 conditional_statement: IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    condition   go to state 84
    expression  go to state 85


state 48

   96 while_statement: WHILE LESS_THAN . condition GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    condition   go to state 86
    expression  go to state 85


state 49

   74 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 87


state 50

   86 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 7
    SEMICOLON   shift, and go to state 88
    IDENTIFIER  shift, and go to state 89

    var_declaration  go to state 90
    for_init         go to state 91


state 51

  112 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 112 (break_statement)


state 52

   35 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 92


state 53

   21 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 93


state 54

  110 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 94


state 55

  111 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 95


state 56

   82 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    $default  reduce using rule 83 (argument_list)

    expression     go to state 96
    argument_list  go to state 97


state 57

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 98


state 58

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 99


state 59

   29 var_decl: IDENTIFIER EQUALS . value

    DOUBLE          shift, and go to state 100
    FLOAT           shift, and go to state 101
    INTEGER         shift, and go to state 102
    CHAR_LITERAL    shift, and go to state 103
    STRING_LITERAL  shift, and go to state 104

    value  go to state 105


state 60

   26 var_decl: IDENTIFIER COLON . TYPE
   27         | IDENTIFIER COLON . TYPE EQUALS value
   28         | IDENTIFIER COLON . TYPE LBRACKET INTEGER RBRACKET

    TYPE  shift, and go to state 106


state 61

   22 var_declaration: VAR var_declaration_list SEMICOLON .

    $default  reduce using rule 22 (var_declaration)


state 62

   24 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 33

    var_decl  go to state 107


state 63

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression
   69           | NOT_OP expression .

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    EQUALS              [reduce using rule 69 (expression)]
    OR_OP               [reduce using rule 69 (expression)]
    AND_OP              [reduce using rule 69 (expression)]
    NOT_EQUAL           [reduce using rule 69 (expression)]
    EQUALS_EQUALS       [reduce using rule 69 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 69 (expression)]
    GREATER_THAN        [reduce using rule 69 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 69 (expression)]
    LESS_THAN           [reduce using rule 69 (expression)]
    MINUS               [reduce using rule 69 (expression)]
    PLUS                [reduce using rule 69 (expression)]
    MOD                 [reduce using rule 69 (expression)]
    DIV                 [reduce using rule 69 (expression)]
    MULT                [reduce using rule 69 (expression)]
    $default            reduce using rule 69 (expression)


state 64

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression
   70           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81
    CLOSE_PAREN         shift, and go to state 108


state 65

   71 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 71 (expression)


state 66

   72 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 72 (expression)


state 67

   54 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    $default  reduce using rule 83 (argument_list)

    expression     go to state 96
    argument_list  go to state 109


state 68

   55 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 110


state 69

   56 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 111


state 70

   57 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 112


state 71

   59 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 113


state 72

   58 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 114


state 73

   63 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 115


state 74

   62 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 116


state 75

   61 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 117


state 76

   60 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 118


state 77

   65 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 119


state 78

   64 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 120


state 79

   68 expression: expression MOD . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 121


state 80

   67 expression: expression DIV . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 122


state 81

   66 expression: expression MULT . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 123


state 82

   36 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 36 (return_statement)


state 83

   73 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 124


state 84

   37 conditional_statement: IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 125


state 85

   41 condition: expression . EQUALS_EQUALS expression
   42          | expression . NOT_EQUAL expression
   43          | expression . LESS_THAN expression
   44          | expression . LESS_THAN_EQUAL expression
   45          | expression . GREATER_THAN expression
   46          | expression . GREATER_THAN_EQUAL expression
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 126
    EQUALS_EQUALS       shift, and go to state 127
    GREATER_THAN_EQUAL  shift, and go to state 128
    GREATER_THAN        shift, and go to state 129
    LESS_THAN_EQUAL     shift, and go to state 130
    LESS_THAN           shift, and go to state 131
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81


state 86

   96 while_statement: WHILE LESS_THAN condition . GREATER_THAN LBRACE while_body RBRACE

    GREATER_THAN  shift, and go to state 132


state 87

   74 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 133


state 88

   89 for_init: SEMICOLON .

    $default  reduce using rule 89 (for_init)


state 89

   88 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 134


state 90

   87 for_init: var_declaration .

    $default  reduce using rule 87 (for_init)


state 91

   86 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    SEMICOLON       shift, and go to state 135
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    condition      go to state 136
    expression     go to state 85
    for_condition  go to state 137


state 92

   35 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81
    SEMICOLON           shift, and go to state 138


state 93

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 139


state 94

  110 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 110 (increment_statement)


state 95

  111 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 111 (decrement_statement)


state 96

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression
   84 argument_list: expression .

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    $default  reduce using rule 84 (argument_list)


state 97

   82 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   85 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 140
    COMMA        shift, and go to state 141


state 98

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 142


state 99

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 143


state 100

   34 value: DOUBLE .

    $default  reduce using rule 34 (value)


state 101

   31 value: FLOAT .

    $default  reduce using rule 31 (value)


state 102

   30 value: INTEGER .

    $default  reduce using rule 30 (value)


state 103

   33 value: CHAR_LITERAL .

    $default  reduce using rule 33 (value)


state 104

   32 value: STRING_LITERAL .

    $default  reduce using rule 32 (value)


state 105

   29 var_decl: IDENTIFIER EQUALS value .

    $default  reduce using rule 29 (var_decl)


state 106

   26 var_decl: IDENTIFIER COLON TYPE .
   27         | IDENTIFIER COLON TYPE . EQUALS value
   28         | IDENTIFIER COLON TYPE . LBRACKET INTEGER RBRACKET

    EQUALS    shift, and go to state 144
    LBRACKET  shift, and go to state 145

    $default  reduce using rule 26 (var_decl)


state 107

   24 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 24 (var_declaration_list)


state 108

   70 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 70 (expression)


state 109

   54 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   85 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 146
    COMMA        shift, and go to state 141


state 110

   55 expression: expression . EQUALS expression
   55           | expression EQUALS expression .
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    $default  reduce using rule 55 (expression)


state 111

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   56           | expression OR_OP expression .
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    $default  reduce using rule 56 (expression)


state 112

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   57           | expression AND_OP expression .
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    $default  reduce using rule 57 (expression)


state 113

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   59           | expression NOT_EQUAL expression .
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    $default  reduce using rule 59 (expression)


state 114

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   58           | expression EQUALS_EQUALS expression .
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    $default  reduce using rule 58 (expression)


state 115

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   63           | expression GREATER_THAN_EQUAL expression .
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80
    MULT   shift, and go to state 81

    $default  reduce using rule 63 (expression)


state 116

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   62           | expression GREATER_THAN expression .
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80
    MULT   shift, and go to state 81

    $default  reduce using rule 62 (expression)


state 117

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   61           | expression LESS_THAN_EQUAL expression .
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80
    MULT   shift, and go to state 81

    $default  reduce using rule 61 (expression)


state 118

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   60           | expression LESS_THAN expression .
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80
    MULT   shift, and go to state 81

    $default  reduce using rule 60 (expression)


state 119

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   65           | expression MINUS expression .
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MOD   shift, and go to state 79
    DIV   shift, and go to state 80
    MULT  shift, and go to state 81

    $default  reduce using rule 65 (expression)


state 120

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   64           | expression PLUS expression .
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MOD   shift, and go to state 79
    DIV   shift, and go to state 80
    MULT  shift, and go to state 81

    $default  reduce using rule 64 (expression)


state 121

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression
   68           | expression MOD expression .

    $default  reduce using rule 68 (expression)


state 122

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   67           | expression DIV expression .
   68           | expression . MOD expression

    $default  reduce using rule 67 (expression)


state 123

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   66           | expression MULT expression .
   67           | expression . DIV expression
   68           | expression . MOD expression

    $default  reduce using rule 66 (expression)


state 124

   73 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 147


state 125

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 148


state 126

   42 condition: expression NOT_EQUAL . expression
   59 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 149


state 127

   41 condition: expression EQUALS_EQUALS . expression
   58 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 150


state 128

   46 condition: expression GREATER_THAN_EQUAL . expression
   63 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 151


state 129

   45 condition: expression GREATER_THAN . expression
   62 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 152


state 130

   44 condition: expression LESS_THAN_EQUAL . expression
   61 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 153


state 131

   43 condition: expression LESS_THAN . expression
   60 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 154


state 132

   96 while_statement: WHILE LESS_THAN condition GREATER_THAN . LBRACE while_body RBRACE

    LBRACE  shift, and go to state 155


state 133

   74 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 156


state 134

   88 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 157


state 135

   91 for_condition: SEMICOLON .

    $default  reduce using rule 91 (for_condition)


state 136

   90 for_condition: condition . SEMICOLON

    SEMICOLON  shift, and go to state 158


state 137

   86 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 159

    $default  reduce using rule 95 (for_increment)

    for_increment  go to state 160


state 138

   35 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 35 (assignment_statement)


state 139

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 161


state 140

   82 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 162


state 141

   85 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 163


state 142

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 19 (print_statement)


state 143

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 20 (print_statement)


state 144

   27 var_decl: IDENTIFIER COLON TYPE EQUALS . value

    DOUBLE          shift, and go to state 100
    FLOAT           shift, and go to state 101
    INTEGER         shift, and go to state 102
    CHAR_LITERAL    shift, and go to state 103
    STRING_LITERAL  shift, and go to state 104

    value  go to state 164


state 145

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 165


state 146

   54 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 54 (expression)


state 147

   73 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 166

    $default  reduce using rule 75 (param_list)

    param_list  go to state 167
    param       go to state 168


state 148

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 170
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 149

   42 condition: expression NOT_EQUAL expression .
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   59           | expression NOT_EQUAL expression .
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    CLOSE_PAREN  reduce using rule 42 (condition)
    SEMICOLON    reduce using rule 42 (condition)
    $default     reduce using rule 59 (expression)


state 150

   41 condition: expression EQUALS_EQUALS expression .
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   58           | expression EQUALS_EQUALS expression .
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    CLOSE_PAREN  reduce using rule 41 (condition)
    SEMICOLON    reduce using rule 41 (condition)
    $default     reduce using rule 58 (expression)


state 151

   46 condition: expression GREATER_THAN_EQUAL expression .
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   63           | expression GREATER_THAN_EQUAL expression .
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80
    MULT   shift, and go to state 81

    GREATER_THAN  reduce using rule 46 (condition)
    GREATER_THAN  [reduce using rule 63 (expression)]
    CLOSE_PAREN   reduce using rule 46 (condition)
    SEMICOLON     reduce using rule 46 (condition)
    $default      reduce using rule 63 (expression)


state 152

   45 condition: expression GREATER_THAN expression .
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   62           | expression GREATER_THAN expression .
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80
    MULT   shift, and go to state 81

    GREATER_THAN  reduce using rule 45 (condition)
    GREATER_THAN  [reduce using rule 62 (expression)]
    CLOSE_PAREN   reduce using rule 45 (condition)
    SEMICOLON     reduce using rule 45 (condition)
    $default      reduce using rule 62 (expression)


state 153

   44 condition: expression LESS_THAN_EQUAL expression .
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   61           | expression LESS_THAN_EQUAL expression .
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80
    MULT   shift, and go to state 81

    GREATER_THAN  reduce using rule 44 (condition)
    GREATER_THAN  [reduce using rule 61 (expression)]
    CLOSE_PAREN   reduce using rule 44 (condition)
    SEMICOLON     reduce using rule 44 (condition)
    $default      reduce using rule 61 (expression)


state 154

   43 condition: expression LESS_THAN expression .
   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   60           | expression LESS_THAN expression .
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    MOD    shift, and go to state 79
    DIV    shift, and go to state 80
    MULT   shift, and go to state 81

    GREATER_THAN  reduce using rule 43 (condition)
    GREATER_THAN  [reduce using rule 60 (expression)]
    CLOSE_PAREN   reduce using rule 43 (condition)
    SEMICOLON     reduce using rule 43 (condition)
    $default      reduce using rule 60 (expression)


state 155

   96 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 171

    POST      reduce using rule 98 (pre_block)
    POST      [reduce using rule 100 (pre_block)]
    BODY      reduce using rule 98 (pre_block)
    BODY      [reduce using rule 100 (pre_block)]
    ALWAYS    reduce using rule 98 (pre_block)
    ALWAYS    [reduce using rule 100 (pre_block)]
    RBRACE    reduce using rule 98 (pre_block)
    RBRACE    [reduce using rule 100 (pre_block)]
    $default  reduce using rule 98 (pre_block)

    while_body  go to state 172
    pre_block   go to state 173


state 156

   74 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 174


state 157

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression
   88 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81
    SEMICOLON           shift, and go to state 175


state 158

   90 for_condition: condition SEMICOLON .

    $default  reduce using rule 90 (for_condition)


state 159

   92 for_increment: IDENTIFIER . EQUALS expression
   93              | IDENTIFIER . INCREMENT
   94              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 176
    INCREMENT  shift, and go to state 177
    DECREMENT  shift, and go to state 178


state 160

   86 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 179


state 161

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 180


state 162

   82 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 82 (function_call_statement)


state 163

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression
   85 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    $default  reduce using rule 85 (argument_list)


state 164

   27 var_decl: IDENTIFIER COLON TYPE EQUALS value .

    $default  reduce using rule 27 (var_decl)


state 165

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 181


state 166

   78 param: IDENTIFIER . COLON TYPE

    COLON  shift, and go to state 182


state 167

   73 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   76 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 183
    COMMA        shift, and go to state 184


state 168

   77 param_list: param .

    $default  reduce using rule 77 (param_list)


state 169

   81 function_body: statement .

    $default  reduce using rule 81 (function_body)


state 170

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   80 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 185
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 171

   99 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 187


state 172

   96 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 188


state 173

   97 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 189

    POST      reduce using rule 101 (body_block)
    POST      [reduce using rule 103 (body_block)]
    ALWAYS    reduce using rule 101 (body_block)
    ALWAYS    [reduce using rule 103 (body_block)]
    RBRACE    reduce using rule 101 (body_block)
    RBRACE    [reduce using rule 103 (body_block)]
    $default  reduce using rule 101 (body_block)

    body_block  go to state 190


state 174

   74 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 191


state 175

   88 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 88 (for_init)


state 176

   92 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    expression  go to state 192


state 177

   93 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 93 (for_increment)


state 178

   94 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 94 (for_increment)


state 179

   86 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 193


state 180

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 21 (input_statement)


state 181

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 28 (var_decl)


state 182

   78 param: IDENTIFIER COLON . TYPE

    TYPE  shift, and go to state 194


state 183

   73 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 195


state 184

   76 param_list: param_list COMMA . param

    IDENTIFIER  shift, and go to state 166

    param  go to state 196


state 185

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 39 (else_if_clauses)

    else_if_clauses  go to state 197


state 186

   80 function_body: function_body statement .

    $default  reduce using rule 80 (function_body)


state 187

   99 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 198
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 188

   96 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 96 (while_statement)


state 189

  102 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 199


state 190

   97 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 200

    ALWAYS    reduce using rule 104 (post_block)
    ALWAYS    [reduce using rule 106 (post_block)]
    RBRACE    reduce using rule 104 (post_block)
    RBRACE    [reduce using rule 106 (post_block)]
    $default  reduce using rule 104 (post_block)

    post_block  go to state 201


state 191

   74 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 202
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 192

   55 expression: expression . EQUALS expression
   56           | expression . OR_OP expression
   57           | expression . AND_OP expression
   58           | expression . EQUALS_EQUALS expression
   59           | expression . NOT_EQUAL expression
   60           | expression . LESS_THAN expression
   61           | expression . LESS_THAN_EQUAL expression
   62           | expression . GREATER_THAN expression
   63           | expression . GREATER_THAN_EQUAL expression
   64           | expression . PLUS expression
   65           | expression . MINUS expression
   66           | expression . MULT expression
   67           | expression . DIV expression
   68           | expression . MOD expression
   92 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 68
    OR_OP               shift, and go to state 69
    AND_OP              shift, and go to state 70
    NOT_EQUAL           shift, and go to state 71
    EQUALS_EQUALS       shift, and go to state 72
    GREATER_THAN_EQUAL  shift, and go to state 73
    GREATER_THAN        shift, and go to state 74
    LESS_THAN_EQUAL     shift, and go to state 75
    LESS_THAN           shift, and go to state 76
    MINUS               shift, and go to state 77
    PLUS                shift, and go to state 78
    MOD                 shift, and go to state 79
    DIV                 shift, and go to state 80
    MULT                shift, and go to state 81

    $default  reduce using rule 92 (for_increment)


state 193

   86 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 203
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 194

   78 param: IDENTIFIER COLON TYPE .

    $default  reduce using rule 78 (param)


state 195

   73 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 204
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 196

   76 param_list: param_list COMMA param .

    $default  reduce using rule 76 (param_list)


state 197

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   40 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 205

    $default  reduce using rule 37 (conditional_statement)


state 198

   80 function_body: function_body . statement
   99 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 206
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 199

  102 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 207
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 200

  105 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 208


state 201

   97 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 209

    RBRACE    reduce using rule 107 (always_block)
    RBRACE    [reduce using rule 109 (always_block)]
    $default  reduce using rule 107 (always_block)

    always_block  go to state 210


state 202

   74 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   80 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 211
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 203

   80 function_body: function_body . statement
   86 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 212
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 204

   73 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   80 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 213
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 205

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   40 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 214
    LBRACE  shift, and go to state 215


state 206

   99 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 99 (pre_block)


state 207

   80 function_body: function_body . statement
  102 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 216
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 208

  105 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 217
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 209

  108 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 218


state 210

   97 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 97 (while_body)


state 211

   74 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 74 (function_declaration)


state 212

   86 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 86 (for_statement)


state 213

   73 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 73 (function_declaration)


state 214

   40 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 219


state 215

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 220
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 216

  102 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 102 (body_block)


state 217

   80 function_body: function_body . statement
  105 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 221
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 218

  108 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 222
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 219

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    BOOL            shift, and go to state 41
    CHAR_LITERAL    shift, and go to state 42
    STRING_LITERAL  shift, and go to state 43
    IDENTIFIER      shift, and go to state 44

    condition   go to state 223
    expression  go to state 85


state 220

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   80 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 224
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 221

  105 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 105 (post_block)


state 222

   80 function_body: function_body . statement
  108 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 225
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 223

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 226


state 224

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 38 (conditional_statement)


state 225

  108 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 108 (always_block)


state 226

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 227


state 227

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 79 (function_body)]
    PRINT       [reduce using rule 79 (function_body)]
    VAR         [reduce using rule 79 (function_body)]
    RETURN      [reduce using rule 79 (function_body)]
    FUNCTION    [reduce using rule 79 (function_body)]
    IF          [reduce using rule 79 (function_body)]
    WHILE       [reduce using rule 79 (function_body)]
    MAIN        [reduce using rule 79 (function_body)]
    FOR         [reduce using rule 79 (function_body)]
    BREAK       [reduce using rule 79 (function_body)]
    IDENTIFIER  [reduce using rule 79 (function_body)]
    $default    reduce using rule 79 (function_body)

    statement                go to state 169
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 228
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 228

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE
   80 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 229
    IDENTIFIER  shift, and go to state 15

    statement                go to state 186
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 229

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 40 (else_if_clauses)
