Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT


Rules useless in parser due to conflicts

   91 pre_block: /* empty */

   94 body_block: /* empty */

   97 post_block: /* empty */

  100 always_block: /* empty */


State 57 conflicts: 14 shift/reduce
State 137 conflicts: 11 shift/reduce
State 140 conflicts: 1 reduce/reduce
State 141 conflicts: 1 reduce/reduce
State 142 conflicts: 1 reduce/reduce
State 143 conflicts: 1 reduce/reduce
State 144 conflicts: 4 reduce/reduce
State 163 conflicts: 3 reduce/reduce
State 177 conflicts: 11 shift/reduce
State 180 conflicts: 2 reduce/reduce
State 181 conflicts: 11 shift/reduce
State 183 conflicts: 11 shift/reduce
State 185 conflicts: 11 shift/reduce
State 189 conflicts: 11 shift/reduce
State 191 conflicts: 1 reduce/reduce
State 198 conflicts: 11 shift/reduce
State 205 conflicts: 11 shift/reduce
State 208 conflicts: 11 shift/reduce
State 217 conflicts: 11 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement

    3 statement: import_statement
    4          | print_statement
    5          | input_statement
    6          | var_declaration
    7          | assignment_statement
    8          | function_declaration
    9          | return_statement
   10          | conditional_statement
   11          | for_statement
   12          | while_statement
   13          | break_statement
   14          | increment_statement
   15          | decrement_statement
   16          | function_call_statement

   17 import_statement: IMPORT PATH

   18 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   19                | PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   21 var_declaration: VAR var_declaration_list SEMICOLON

   22 var_declaration_list: var_decl
   23                     | var_declaration_list COMMA var_decl

   24 var_decl: IDENTIFIER
   25         | IDENTIFIER COLON TYPE
   26         | IDENTIFIER COLON TYPE EQUALS value
   27         | IDENTIFIER COLON TYPE LBRACKET NUMBER RBRACKET
   28         | IDENTIFIER EQUALS NUMBER

   29 value: NUMBER

   30 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON

   31 return_statement: RETURN expression SEMICOLON

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   33                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   34 else_if_clauses: /* empty */
   35                | else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

   36 condition: expression EQUALS_EQUALS expression
   37          | expression NOT_EQUAL expression
   38          | expression LESS_THAN expression
   39          | expression LESS_THAN_EQUAL expression
   40          | expression GREATER_THAN expression
   41          | expression GREATER_THAN_EQUAL expression

   42 expression: NUMBER
   43           | STRING_LITERAL
   44           | IDENTIFIER
   45           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   46           | expression EQUALS expression
   47           | expression OR_OP expression
   48           | expression AND_OP expression
   49           | expression EQUALS_EQUALS expression
   50           | expression NOT_EQUAL expression
   51           | expression LESS_THAN expression
   52           | expression LESS_THAN_EQUAL expression
   53           | expression GREATER_THAN expression
   54           | expression GREATER_THAN_EQUAL expression
   55           | expression PLUS expression
   56           | expression MINUS expression
   57           | expression MULT expression
   58           | expression DIV expression
   59           | expression MOD expression
   60           | NOT_OP expression
   61           | OPEN_PAREN expression CLOSE_PAREN
   62           | IDENTIFIER INCREMENT
   63           | IDENTIFIER DECREMENT

   64 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   65                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   66 param_list: /* empty */
   67           | param_list COMMA param
   68           | param

   69 param: IDENTIFIER COLON TYPE

   70 function_body: /* empty */
   71              | function_body statement
   72              | statement

   73 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   74 argument_list: /* empty */
   75              | expression
   76              | argument_list COMMA expression

   77 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   78 for_init: var_declaration
   79         | IDENTIFIER EQUALS expression SEMICOLON
   80         | SEMICOLON

   81 for_condition: condition SEMICOLON
   82              | SEMICOLON

   83 for_increment: IDENTIFIER EQUALS expression
   84              | IDENTIFIER INCREMENT
   85              | IDENTIFIER DECREMENT
   86              | /* empty */

   87 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

   88 while_body: pre_block body_block post_block always_block

   89 pre_block: /* empty */
   90          | PRE LBRACE function_body RBRACE
   91          | /* empty */

   92 body_block: /* empty */
   93           | BODY LBRACE function_body RBRACE
   94           | /* empty */

   95 post_block: /* empty */
   96           | POST LBRACE function_body RBRACE
   97           | /* empty */

   98 always_block: /* empty */
   99             | ALWAYS LBRACE function_body RBRACE
  100             | /* empty */

  101 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  102 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  103 break_statement: BREAK SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 26 28 30 46 79 83
OR_OP (259) 47
AND_OP (260) 48
NOT_EQUAL (261) 37 50
EQUALS_EQUALS (262) 36 49
GREATER_THAN_EQUAL (263) 41 54
GREATER_THAN (264) 40 53 87
LESS_THAN_EQUAL (265) 39 52
LESS_THAN (266) 38 51 87
MINUS (267) 56
PLUS (268) 55
MOD (269) 59
DIV (270) 58
MULT (271) 57
IMPORT (272) 17
PRINT (273) 18 19
VAR (274) 21
RETURN (275) 31
FUNCTION (276) 64 65
IF (277) 32 33 35
ELSE (278) 33 35
WHILE (279) 87
MAIN (280) 65
END_PROGRAM (281)
FOR (282) 77
PRE (283) 90
POST (284) 96
BODY (285) 93
ALWAYS (286) 99
BREAK (287) 103
INPUT_OP (288) 20
NOT_OP (289) 60
INCREMENT (290) 62 84 101
DECREMENT (291) 63 85 102
OPEN_PAREN (292) 18 19 20 32 33 35 45 61 64 65 73 77
CLOSE_PAREN (293) 18 19 20 32 33 35 45 61 64 65 73 77
LBRACKET (294) 27
RBRACKET (295) 27
LBRACE (296) 32 33 35 64 65 77 87 90 93 96 99
RBRACE (297) 32 33 35 64 65 77 87 90 93 96 99
SEMICOLON (298) 18 19 20 21 30 31 73 79 80 81 82 101 102 103
COMMA (299) 23 67 76
INVERTED_COMMA (300)
DOUBLE_QUOTE (301)
COLON (302) 25 26 27 64 65 69
BODY_START (303)
BODY_END (304)
STRING_LITERAL (305) 18 20 43
IDENTIFIER (306) 19 20 24 25 26 27 28 30 44 45 62 63 64 69 73 79 83
    84 85 101 102
PATH (307) 17
TYPE (308) 25 26 27 64 65 69
NUMBER (309) 27 28 29 42
SINGLE_LINE_COMMENT_START (310)
MULTI_LINE_COMMENT_START (311)
MULTI_LINE_COMMENT_END (312)
ARRAY_INIT (313)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1 2, on right: 0 2
statement (61)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 71 72
import_statement (62)
    on left: 17, on right: 3
print_statement (63)
    on left: 18 19, on right: 4
input_statement (64)
    on left: 20, on right: 5
var_declaration (65)
    on left: 21, on right: 6 78
var_declaration_list (66)
    on left: 22 23, on right: 21 23
var_decl (67)
    on left: 24 25 26 27 28, on right: 22 23
value (68)
    on left: 29, on right: 26
assignment_statement (69)
    on left: 30, on right: 7
return_statement (70)
    on left: 31, on right: 9
conditional_statement (71)
    on left: 32 33, on right: 10
else_if_clauses (72)
    on left: 34 35, on right: 32 33 35
condition (73)
    on left: 36 37 38 39 40 41, on right: 32 33 35 81 87
expression (74)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63, on right: 30 31 36 37 38 39 40 41 46 47 48 49 50 51
    52 53 54 55 56 57 58 59 60 61 75 76 79 83
function_declaration (75)
    on left: 64 65, on right: 8
param_list (76)
    on left: 66 67 68, on right: 64 67
param (77)
    on left: 69, on right: 67 68
function_body (78)
    on left: 70 71 72, on right: 32 33 35 64 65 71 77 90 93 96 99
function_call_statement (79)
    on left: 73, on right: 16
argument_list (80)
    on left: 74 75 76, on right: 45 73 76
for_statement (81)
    on left: 77, on right: 11
for_init (82)
    on left: 78 79 80, on right: 77
for_condition (83)
    on left: 81 82, on right: 77
for_increment (84)
    on left: 83 84 85 86, on right: 77
while_statement (85)
    on left: 87, on right: 12
while_body (86)
    on left: 88, on right: 87
pre_block (87)
    on left: 89 90 91, on right: 88
body_block (88)
    on left: 92 93 94, on right: 88
post_block (89)
    on left: 95 96 97, on right: 88
always_block (90)
    on left: 98 99 100, on right: 88
increment_statement (91)
    on left: 101, on right: 14
decrement_statement (92)
    on left: 102, on right: 15
break_statement (93)
    on left: 103, on right: 13


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 2
    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    statement                go to state 14
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 2

    0 $accept: program $end .

    $default  accept


state 3

   17 import_statement: IMPORT . PATH

    PATH  shift, and go to state 29


state 4

   18 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   19                | PRINT . OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 30


state 5

   21 var_declaration: VAR . var_declaration_list SEMICOLON

    IDENTIFIER  shift, and go to state 31

    var_declaration_list  go to state 32
    var_decl              go to state 33


state 6

   31 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 39


state 7

   64 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 40


state 8

   32 conditional_statement: IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   33                      | IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 41


state 9

   87 while_statement: WHILE . LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 42


state 10

   65 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 43


state 11

   77 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 44


state 12

  103 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 45


state 13

   20 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   30 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   73 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  101 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  102 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 46
    INPUT_OP    shift, and go to state 47
    INCREMENT   shift, and go to state 48
    DECREMENT   shift, and go to state 49
    OPEN_PAREN  shift, and go to state 50


state 14

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 15

    3 statement: import_statement .

    $default  reduce using rule 3 (statement)


state 16

    4 statement: print_statement .

    $default  reduce using rule 4 (statement)


state 17

    5 statement: input_statement .

    $default  reduce using rule 5 (statement)


state 18

    6 statement: var_declaration .

    $default  reduce using rule 6 (statement)


state 19

    7 statement: assignment_statement .

    $default  reduce using rule 7 (statement)


state 20

    9 statement: return_statement .

    $default  reduce using rule 9 (statement)


state 21

   10 statement: conditional_statement .

    $default  reduce using rule 10 (statement)


state 22

    8 statement: function_declaration .

    $default  reduce using rule 8 (statement)


state 23

   16 statement: function_call_statement .

    $default  reduce using rule 16 (statement)


state 24

   11 statement: for_statement .

    $default  reduce using rule 11 (statement)


state 25

   12 statement: while_statement .

    $default  reduce using rule 12 (statement)


state 26

   14 statement: increment_statement .

    $default  reduce using rule 14 (statement)


state 27

   15 statement: decrement_statement .

    $default  reduce using rule 15 (statement)


state 28

   13 statement: break_statement .

    $default  reduce using rule 13 (statement)


state 29

   17 import_statement: IMPORT PATH .

    $default  reduce using rule 17 (import_statement)


state 30

   18 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   19                | PRINT OPEN_PAREN . IDENTIFIER CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 51
    IDENTIFIER      shift, and go to state 52


state 31

   24 var_decl: IDENTIFIER .
   25         | IDENTIFIER . COLON TYPE
   26         | IDENTIFIER . COLON TYPE EQUALS value
   27         | IDENTIFIER . COLON TYPE LBRACKET NUMBER RBRACKET
   28         | IDENTIFIER . EQUALS NUMBER

    EQUALS  shift, and go to state 53
    COLON   shift, and go to state 54

    $default  reduce using rule 24 (var_decl)


state 32

   21 var_declaration: VAR var_declaration_list . SEMICOLON
   23 var_declaration_list: var_declaration_list . COMMA var_decl

    SEMICOLON  shift, and go to state 55
    COMMA      shift, and go to state 56


state 33

   22 var_declaration_list: var_decl .

    $default  reduce using rule 22 (var_declaration_list)


state 34

   60 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 57


state 35

   61 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 58


state 36

   43 expression: STRING_LITERAL .

    $default  reduce using rule 43 (expression)


state 37

   44 expression: IDENTIFIER .
   45           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   62           | IDENTIFIER . INCREMENT
   63           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 59
    DECREMENT   shift, and go to state 60
    OPEN_PAREN  shift, and go to state 61

    $default  reduce using rule 44 (expression)


state 38

   42 expression: NUMBER .

    $default  reduce using rule 42 (expression)


state 39

   31 return_statement: RETURN expression . SEMICOLON
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75
    SEMICOLON           shift, and go to state 76


state 40

   64 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 77


state 41

   32 conditional_statement: IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   33                      | IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    condition   go to state 78
    expression  go to state 79


state 42

   87 while_statement: WHILE LESS_THAN . condition GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    condition   go to state 80
    expression  go to state 79


state 43

   65 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 81


state 44

   77 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 5
    SEMICOLON   shift, and go to state 82
    IDENTIFIER  shift, and go to state 83

    var_declaration  go to state 84
    for_init         go to state 85


state 45

  103 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 103 (break_statement)


state 46

   30 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 86


state 47

   20 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 87


state 48

  101 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 49

  102 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 89


state 50

   73 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    $default  reduce using rule 74 (argument_list)

    expression     go to state 90
    argument_list  go to state 91


state 51

   18 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 92


state 52

   19 print_statement: PRINT OPEN_PAREN IDENTIFIER . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 93


state 53

   28 var_decl: IDENTIFIER EQUALS . NUMBER

    NUMBER  shift, and go to state 94


state 54

   25 var_decl: IDENTIFIER COLON . TYPE
   26         | IDENTIFIER COLON . TYPE EQUALS value
   27         | IDENTIFIER COLON . TYPE LBRACKET NUMBER RBRACKET

    TYPE  shift, and go to state 95


state 55

   21 var_declaration: VAR var_declaration_list SEMICOLON .

    $default  reduce using rule 21 (var_declaration)


state 56

   23 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 31

    var_decl  go to state 96


state 57

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression
   60           | NOT_OP expression .

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    EQUALS              [reduce using rule 60 (expression)]
    OR_OP               [reduce using rule 60 (expression)]
    AND_OP              [reduce using rule 60 (expression)]
    NOT_EQUAL           [reduce using rule 60 (expression)]
    EQUALS_EQUALS       [reduce using rule 60 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 60 (expression)]
    GREATER_THAN        [reduce using rule 60 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 60 (expression)]
    LESS_THAN           [reduce using rule 60 (expression)]
    MINUS               [reduce using rule 60 (expression)]
    PLUS                [reduce using rule 60 (expression)]
    MOD                 [reduce using rule 60 (expression)]
    DIV                 [reduce using rule 60 (expression)]
    MULT                [reduce using rule 60 (expression)]
    $default            reduce using rule 60 (expression)


state 58

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression
   61           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75
    CLOSE_PAREN         shift, and go to state 97


state 59

   62 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 62 (expression)


state 60

   63 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 63 (expression)


state 61

   45 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    $default  reduce using rule 74 (argument_list)

    expression     go to state 90
    argument_list  go to state 98


state 62

   46 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 99


state 63

   47 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 100


state 64

   48 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 101


state 65

   50 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 102


state 66

   49 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 103


state 67

   54 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 104


state 68

   53 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 105


state 69

   52 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 106


state 70

   51 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 107


state 71

   56 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 108


state 72

   55 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 109


state 73

   59 expression: expression MOD . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 110


state 74

   58 expression: expression DIV . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 111


state 75

   57 expression: expression MULT . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 112


state 76

   31 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 31 (return_statement)


state 77

   64 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 113


state 78

   32 conditional_statement: IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   33                      | IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 114


state 79

   36 condition: expression . EQUALS_EQUALS expression
   37          | expression . NOT_EQUAL expression
   38          | expression . LESS_THAN expression
   39          | expression . LESS_THAN_EQUAL expression
   40          | expression . GREATER_THAN expression
   41          | expression . GREATER_THAN_EQUAL expression
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 115
    EQUALS_EQUALS       shift, and go to state 116
    GREATER_THAN_EQUAL  shift, and go to state 117
    GREATER_THAN        shift, and go to state 118
    LESS_THAN_EQUAL     shift, and go to state 119
    LESS_THAN           shift, and go to state 120
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75


state 80

   87 while_statement: WHILE LESS_THAN condition . GREATER_THAN LBRACE while_body RBRACE

    GREATER_THAN  shift, and go to state 121


state 81

   65 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 122


state 82

   80 for_init: SEMICOLON .

    $default  reduce using rule 80 (for_init)


state 83

   79 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 123


state 84

   78 for_init: var_declaration .

    $default  reduce using rule 78 (for_init)


state 85

   77 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    SEMICOLON       shift, and go to state 124
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    condition      go to state 125
    expression     go to state 79
    for_condition  go to state 126


state 86

   30 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75
    SEMICOLON           shift, and go to state 127


state 87

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 128


state 88

  101 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 101 (increment_statement)


state 89

  102 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 102 (decrement_statement)


state 90

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression
   75 argument_list: expression .

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 75 (argument_list)


state 91

   73 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   76 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 129
    COMMA        shift, and go to state 130


state 92

   18 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 131


state 93

   19 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 132


state 94

   28 var_decl: IDENTIFIER EQUALS NUMBER .

    $default  reduce using rule 28 (var_decl)


state 95

   25 var_decl: IDENTIFIER COLON TYPE .
   26         | IDENTIFIER COLON TYPE . EQUALS value
   27         | IDENTIFIER COLON TYPE . LBRACKET NUMBER RBRACKET

    EQUALS    shift, and go to state 133
    LBRACKET  shift, and go to state 134

    $default  reduce using rule 25 (var_decl)


state 96

   23 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 23 (var_declaration_list)


state 97

   61 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 61 (expression)


state 98

   45 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   76 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 135
    COMMA        shift, and go to state 130


state 99

   46 expression: expression . EQUALS expression
   46           | expression EQUALS expression .
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 46 (expression)


state 100

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   47           | expression OR_OP expression .
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 47 (expression)


state 101

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   48           | expression AND_OP expression .
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 48 (expression)


state 102

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   50           | expression NOT_EQUAL expression .
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 50 (expression)


state 103

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   49           | expression EQUALS_EQUALS expression .
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 49 (expression)


state 104

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   54           | expression GREATER_THAN_EQUAL expression .
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    $default  reduce using rule 54 (expression)


state 105

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   53           | expression GREATER_THAN expression .
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    $default  reduce using rule 53 (expression)


state 106

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   52           | expression LESS_THAN_EQUAL expression .
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    $default  reduce using rule 52 (expression)


state 107

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   51           | expression LESS_THAN expression .
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    $default  reduce using rule 51 (expression)


state 108

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   56           | expression MINUS expression .
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MOD   shift, and go to state 73
    DIV   shift, and go to state 74
    MULT  shift, and go to state 75

    $default  reduce using rule 56 (expression)


state 109

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   55           | expression PLUS expression .
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MOD   shift, and go to state 73
    DIV   shift, and go to state 74
    MULT  shift, and go to state 75

    $default  reduce using rule 55 (expression)


state 110

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression
   59           | expression MOD expression .

    $default  reduce using rule 59 (expression)


state 111

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   58           | expression DIV expression .
   59           | expression . MOD expression

    $default  reduce using rule 58 (expression)


state 112

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   57           | expression MULT expression .
   58           | expression . DIV expression
   59           | expression . MOD expression

    $default  reduce using rule 57 (expression)


state 113

   64 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 136


state 114

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   33                      | IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 137


state 115

   37 condition: expression NOT_EQUAL . expression
   50 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 138


state 116

   36 condition: expression EQUALS_EQUALS . expression
   49 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 139


state 117

   41 condition: expression GREATER_THAN_EQUAL . expression
   54 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 140


state 118

   40 condition: expression GREATER_THAN . expression
   53 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 141


state 119

   39 condition: expression LESS_THAN_EQUAL . expression
   52 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 142


state 120

   38 condition: expression LESS_THAN . expression
   51 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 143


state 121

   87 while_statement: WHILE LESS_THAN condition GREATER_THAN . LBRACE while_body RBRACE

    LBRACE  shift, and go to state 144


state 122

   65 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 145


state 123

   79 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 146


state 124

   82 for_condition: SEMICOLON .

    $default  reduce using rule 82 (for_condition)


state 125

   81 for_condition: condition . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 126

   77 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 148

    $default  reduce using rule 86 (for_increment)

    for_increment  go to state 149


state 127

   30 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 30 (assignment_statement)


state 128

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 150


state 129

   73 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 151


state 130

   76 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 152


state 131

   18 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 18 (print_statement)


state 132

   19 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 19 (print_statement)


state 133

   26 var_decl: IDENTIFIER COLON TYPE EQUALS . value

    NUMBER  shift, and go to state 153

    value  go to state 154


state 134

   27 var_decl: IDENTIFIER COLON TYPE LBRACKET . NUMBER RBRACKET

    NUMBER  shift, and go to state 155


state 135

   45 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 45 (expression)


state 136

   64 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 156

    $default  reduce using rule 66 (param_list)

    param_list  go to state 157
    param       go to state 158


state 137

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   33                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 160
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 138

   37 condition: expression NOT_EQUAL expression .
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   50           | expression NOT_EQUAL expression .
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    CLOSE_PAREN  reduce using rule 37 (condition)
    SEMICOLON    reduce using rule 37 (condition)
    $default     reduce using rule 50 (expression)


state 139

   36 condition: expression EQUALS_EQUALS expression .
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   49           | expression EQUALS_EQUALS expression .
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    CLOSE_PAREN  reduce using rule 36 (condition)
    SEMICOLON    reduce using rule 36 (condition)
    $default     reduce using rule 49 (expression)


state 140

   41 condition: expression GREATER_THAN_EQUAL expression .
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   54           | expression GREATER_THAN_EQUAL expression .
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    GREATER_THAN  reduce using rule 41 (condition)
    GREATER_THAN  [reduce using rule 54 (expression)]
    CLOSE_PAREN   reduce using rule 41 (condition)
    SEMICOLON     reduce using rule 41 (condition)
    $default      reduce using rule 54 (expression)


state 141

   40 condition: expression GREATER_THAN expression .
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   53           | expression GREATER_THAN expression .
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    GREATER_THAN  reduce using rule 40 (condition)
    GREATER_THAN  [reduce using rule 53 (expression)]
    CLOSE_PAREN   reduce using rule 40 (condition)
    SEMICOLON     reduce using rule 40 (condition)
    $default      reduce using rule 53 (expression)


state 142

   39 condition: expression LESS_THAN_EQUAL expression .
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   52           | expression LESS_THAN_EQUAL expression .
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    GREATER_THAN  reduce using rule 39 (condition)
    GREATER_THAN  [reduce using rule 52 (expression)]
    CLOSE_PAREN   reduce using rule 39 (condition)
    SEMICOLON     reduce using rule 39 (condition)
    $default      reduce using rule 52 (expression)


state 143

   38 condition: expression LESS_THAN expression .
   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   51           | expression LESS_THAN expression .
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression

    MINUS  shift, and go to state 71
    PLUS   shift, and go to state 72
    MOD    shift, and go to state 73
    DIV    shift, and go to state 74
    MULT   shift, and go to state 75

    GREATER_THAN  reduce using rule 38 (condition)
    GREATER_THAN  [reduce using rule 51 (expression)]
    CLOSE_PAREN   reduce using rule 38 (condition)
    SEMICOLON     reduce using rule 38 (condition)
    $default      reduce using rule 51 (expression)


state 144

   87 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 161

    POST      reduce using rule 89 (pre_block)
    POST      [reduce using rule 91 (pre_block)]
    BODY      reduce using rule 89 (pre_block)
    BODY      [reduce using rule 91 (pre_block)]
    ALWAYS    reduce using rule 89 (pre_block)
    ALWAYS    [reduce using rule 91 (pre_block)]
    RBRACE    reduce using rule 89 (pre_block)
    RBRACE    [reduce using rule 91 (pre_block)]
    $default  reduce using rule 89 (pre_block)

    while_body  go to state 162
    pre_block   go to state 163


state 145

   65 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 164


state 146

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression
   79 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75
    SEMICOLON           shift, and go to state 165


state 147

   81 for_condition: condition SEMICOLON .

    $default  reduce using rule 81 (for_condition)


state 148

   83 for_increment: IDENTIFIER . EQUALS expression
   84              | IDENTIFIER . INCREMENT
   85              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 166
    INCREMENT  shift, and go to state 167
    DECREMENT  shift, and go to state 168


state 149

   77 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 169


state 150

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 170


state 151

   73 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 73 (function_call_statement)


state 152

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression
   76 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 76 (argument_list)


state 153

   29 value: NUMBER .

    $default  reduce using rule 29 (value)


state 154

   26 var_decl: IDENTIFIER COLON TYPE EQUALS value .

    $default  reduce using rule 26 (var_decl)


state 155

   27 var_decl: IDENTIFIER COLON TYPE LBRACKET NUMBER . RBRACKET

    RBRACKET  shift, and go to state 171


state 156

   69 param: IDENTIFIER . COLON TYPE

    COLON  shift, and go to state 172


state 157

   64 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   67 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 173
    COMMA        shift, and go to state 174


state 158

   68 param_list: param .

    $default  reduce using rule 68 (param_list)


state 159

   72 function_body: statement .

    $default  reduce using rule 72 (function_body)


state 160

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   33                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   71 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 175
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 161

   90 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 177


state 162

   87 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 178


state 163

   88 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 179

    POST      reduce using rule 92 (body_block)
    POST      [reduce using rule 94 (body_block)]
    ALWAYS    reduce using rule 92 (body_block)
    ALWAYS    [reduce using rule 94 (body_block)]
    RBRACE    reduce using rule 92 (body_block)
    RBRACE    [reduce using rule 94 (body_block)]
    $default  reduce using rule 92 (body_block)

    body_block  go to state 180


state 164

   65 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 181


state 165

   79 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 79 (for_init)


state 166

   83 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    expression  go to state 182


state 167

   84 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 84 (for_increment)


state 168

   85 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 85 (for_increment)


state 169

   77 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 183


state 170

   20 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 20 (input_statement)


state 171

   27 var_decl: IDENTIFIER COLON TYPE LBRACKET NUMBER RBRACKET .

    $default  reduce using rule 27 (var_decl)


state 172

   69 param: IDENTIFIER COLON . TYPE

    TYPE  shift, and go to state 184


state 173

   64 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 185


state 174

   67 param_list: param_list COMMA . param

    IDENTIFIER  shift, and go to state 156

    param  go to state 186


state 175

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   33                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 34 (else_if_clauses)

    else_if_clauses  go to state 187


state 176

   71 function_body: function_body statement .

    $default  reduce using rule 71 (function_body)


state 177

   90 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 188
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 178

   87 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 87 (while_statement)


state 179

   93 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 189


state 180

   88 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 190

    ALWAYS    reduce using rule 95 (post_block)
    ALWAYS    [reduce using rule 97 (post_block)]
    RBRACE    reduce using rule 95 (post_block)
    RBRACE    [reduce using rule 97 (post_block)]
    $default  reduce using rule 95 (post_block)

    post_block  go to state 191


state 181

   65 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 192
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 182

   46 expression: expression . EQUALS expression
   47           | expression . OR_OP expression
   48           | expression . AND_OP expression
   49           | expression . EQUALS_EQUALS expression
   50           | expression . NOT_EQUAL expression
   51           | expression . LESS_THAN expression
   52           | expression . LESS_THAN_EQUAL expression
   53           | expression . GREATER_THAN expression
   54           | expression . GREATER_THAN_EQUAL expression
   55           | expression . PLUS expression
   56           | expression . MINUS expression
   57           | expression . MULT expression
   58           | expression . DIV expression
   59           | expression . MOD expression
   83 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 62
    OR_OP               shift, and go to state 63
    AND_OP              shift, and go to state 64
    NOT_EQUAL           shift, and go to state 65
    EQUALS_EQUALS       shift, and go to state 66
    GREATER_THAN_EQUAL  shift, and go to state 67
    GREATER_THAN        shift, and go to state 68
    LESS_THAN_EQUAL     shift, and go to state 69
    LESS_THAN           shift, and go to state 70
    MINUS               shift, and go to state 71
    PLUS                shift, and go to state 72
    MOD                 shift, and go to state 73
    DIV                 shift, and go to state 74
    MULT                shift, and go to state 75

    $default  reduce using rule 83 (for_increment)


state 183

   77 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 193
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 184

   69 param: IDENTIFIER COLON TYPE .

    $default  reduce using rule 69 (param)


state 185

   64 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 194
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 186

   67 param_list: param_list COMMA param .

    $default  reduce using rule 67 (param_list)


state 187

   32 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   33                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   35 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 195

    $default  reduce using rule 32 (conditional_statement)


state 188

   71 function_body: function_body . statement
   90 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 196
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 189

   93 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 197
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 190

   96 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 198


state 191

   88 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 199

    RBRACE    reduce using rule 98 (always_block)
    RBRACE    [reduce using rule 100 (always_block)]
    $default  reduce using rule 98 (always_block)

    always_block  go to state 200


state 192

   65 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   71 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 201
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 193

   71 function_body: function_body . statement
   77 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 202
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 194

   64 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   71 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 203
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 195

   33 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   35 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 204
    LBRACE  shift, and go to state 205


state 196

   90 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 90 (pre_block)


state 197

   71 function_body: function_body . statement
   93 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 206
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 198

   96 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 207
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 199

   99 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 208


state 200

   88 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 88 (while_body)


state 201

   65 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 65 (function_declaration)


state 202

   77 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 77 (for_statement)


state 203

   64 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 64 (function_declaration)


state 204

   35 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 209


state 205

   33 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 210
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 206

   93 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 93 (body_block)


state 207

   71 function_body: function_body . statement
   96 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 211
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 208

   99 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 212
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 209

   35 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 34
    OPEN_PAREN      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    IDENTIFIER      shift, and go to state 37
    NUMBER          shift, and go to state 38

    condition   go to state 213
    expression  go to state 79


state 210

   33 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   71 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 214
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 211

   96 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 96 (post_block)


state 212

   71 function_body: function_body . statement
   99 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 215
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 213

   35 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 216


state 214

   33 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 33 (conditional_statement)


state 215

   99 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 99 (always_block)


state 216

   35 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 217


state 217

   35 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13

    IMPORT      [reduce using rule 70 (function_body)]
    PRINT       [reduce using rule 70 (function_body)]
    VAR         [reduce using rule 70 (function_body)]
    RETURN      [reduce using rule 70 (function_body)]
    FUNCTION    [reduce using rule 70 (function_body)]
    IF          [reduce using rule 70 (function_body)]
    WHILE       [reduce using rule 70 (function_body)]
    MAIN        [reduce using rule 70 (function_body)]
    FOR         [reduce using rule 70 (function_body)]
    BREAK       [reduce using rule 70 (function_body)]
    IDENTIFIER  [reduce using rule 70 (function_body)]
    $default    reduce using rule 70 (function_body)

    statement                go to state 159
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_body            go to state 218
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 218

   35 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE
   71 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    RBRACE      shift, and go to state 219
    IDENTIFIER  shift, and go to state 13

    statement                go to state 176
    import_statement         go to state 15
    print_statement          go to state 16
    input_statement          go to state 17
    var_declaration          go to state 18
    assignment_statement     go to state 19
    return_statement         go to state 20
    conditional_statement    go to state 21
    function_declaration     go to state 22
    function_call_statement  go to state 23
    for_statement            go to state 24
    while_statement          go to state 25
    increment_statement      go to state 26
    decrement_statement      go to state 27
    break_statement          go to state 28


state 219

   35 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 35 (else_if_clauses)
