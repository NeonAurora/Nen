Nonterminals useless in grammar

   value_list


Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT


Rules useless in grammar

  111 value_list: INTEGER
  112           | value_list COMMA INTEGER


Rules useless in parser due to conflicts

   97 pre_block: /* empty */

  100 body_block: /* empty */

  103 post_block: /* empty */

  106 always_block: /* empty */


State 59 conflicts: 1 shift/reduce
State 64 conflicts: 14 shift/reduce
State 147 conflicts: 11 shift/reduce
State 148 conflicts: 4 reduce/reduce
State 166 conflicts: 3 reduce/reduce
State 180 conflicts: 11 shift/reduce
State 183 conflicts: 2 reduce/reduce
State 184 conflicts: 11 shift/reduce
State 186 conflicts: 11 shift/reduce
State 188 conflicts: 11 shift/reduce
State 192 conflicts: 11 shift/reduce
State 194 conflicts: 1 reduce/reduce
State 201 conflicts: 11 shift/reduce
State 208 conflicts: 11 shift/reduce
State 211 conflicts: 11 shift/reduce
State 220 conflicts: 11 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement
    3        | end_of_the_line

    4 statement: import_statement
    5          | print_statement
    6          | input_statement
    7          | var_declaration
    8          | assignment_statement
    9          | function_declaration
   10          | return_statement
   11          | conditional_statement
   12          | for_statement
   13          | while_statement
   14          | break_statement
   15          | increment_statement
   16          | decrement_statement
   17          | function_call_statement

   18 import_statement: IMPORT PATH

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN expression CLOSE_PAREN SEMICOLON

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   22 var_declaration: var_declaration_without_semicolon SEMICOLON

   23 var_declaration_without_semicolon: VAR var_declaration_list

   24 var_declaration_list: var_decl
   25                     | var_declaration_list COMMA var_decl

   26 var_decl: IDENTIFIER
   27         | IDENTIFIER COLON TYPE
   28         | IDENTIFIER COLON TYPE EQUALS value
   29         | IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET
   30         | IDENTIFIER EQUALS value

   31 value: INTEGER
   32      | FLOAT
   33      | STRING_LITERAL
   34      | CHAR_LITERAL
   35      | DOUBLE

   36 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON
   37                     | IDENTIFIER EQUALS ARRAY_LITERAL SEMICOLON

   38 return_statement: RETURN expression SEMICOLON

   39 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   40                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   41 else_if_clauses: /* empty */
   42                | else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

   43 expression: INTEGER
   44           | FLOAT
   45           | STRING_LITERAL
   46           | CHAR_LITERAL
   47           | DOUBLE
   48           | BOOL
   49           | IDENTIFIER
   50           | IDENTIFIER LBRACKET expression RBRACKET
   51           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   52           | expression EQUALS expression
   53           | expression OR_OP expression
   54           | expression AND_OP expression
   55           | expression EQUALS_EQUALS expression
   56           | expression NOT_EQUAL expression
   57           | expression LESS_THAN expression
   58           | expression LESS_THAN_EQUAL expression
   59           | expression GREATER_THAN expression
   60           | expression GREATER_THAN_EQUAL expression
   61           | expression PLUS expression
   62           | expression MINUS expression
   63           | expression MULT expression
   64           | expression DIV expression
   65           | expression MOD expression
   66           | NOT_OP expression
   67           | OPEN_PAREN expression CLOSE_PAREN
   68           | IDENTIFIER INCREMENT
   69           | IDENTIFIER DECREMENT

   70 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   71                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   72 param_list: /* empty */
   73           | param_list COMMA param
   74           | param

   75 param: LESS_THAN var_declaration_without_semicolon GREATER_THAN

   76 function_body: /* empty */
   77              | function_body statement
   78              | statement

   79 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   80 argument_list: /* empty */
   81              | expression
   82              | argument_list COMMA expression

   83 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   84 for_init: var_declaration
   85         | IDENTIFIER EQUALS expression SEMICOLON
   86         | SEMICOLON

   87 for_condition: expression SEMICOLON
   88              | SEMICOLON

   89 for_increment: IDENTIFIER EQUALS expression
   90              | IDENTIFIER INCREMENT
   91              | IDENTIFIER DECREMENT
   92              | /* empty */

   93 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE

   94 while_body: pre_block body_block post_block always_block

   95 pre_block: /* empty */
   96          | PRE LBRACE function_body RBRACE
   97          | /* empty */

   98 body_block: /* empty */
   99           | BODY LBRACE function_body RBRACE
  100           | /* empty */

  101 post_block: /* empty */
  102           | POST LBRACE function_body RBRACE
  103           | /* empty */

  104 always_block: /* empty */
  105             | ALWAYS LBRACE function_body RBRACE
  106             | /* empty */

  107 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  108 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  109 break_statement: BREAK SEMICOLON

  110 end_of_the_line: END


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 28 30 36 37 52 85 89
OR_OP (259) 53
AND_OP (260) 54
NOT_EQUAL (261) 56
EQUALS_EQUALS (262) 55
GREATER_THAN_EQUAL (263) 60
GREATER_THAN (264) 59 75 93
LESS_THAN_EQUAL (265) 58
LESS_THAN (266) 57 75 93
MINUS (267) 62
PLUS (268) 61
MOD (269) 65
DIV (270) 64
MULT (271) 63
IMPORT (272) 18
PRINT (273) 19 20
VAR (274) 23
RETURN (275) 38
FUNCTION (276) 70 71
IF (277) 39 40 42
ELSE (278) 40 42
WHILE (279) 93
MAIN (280) 71
END_PROGRAM (281)
FOR (282) 83
PRE (283) 96
POST (284) 102
BODY (285) 99
ALWAYS (286) 105
BREAK (287) 109
INPUT_OP (288) 21
NOT_OP (289) 66
INCREMENT (290) 68 90 107
DECREMENT (291) 69 91 108
OPEN_PAREN (292) 19 20 21 39 40 42 51 67 70 71 79 83
CLOSE_PAREN (293) 19 20 21 39 40 42 51 67 70 71 79 83
LBRACKET (294) 29 50
RBRACKET (295) 29 50
LBRACE (296) 39 40 42 70 71 83 93 96 99 102 105
RBRACE (297) 39 40 42 70 71 83 93 96 99 102 105
SEMICOLON (298) 19 20 21 22 36 37 38 79 85 86 87 88 107 108 109
COMMA (299) 25 73 82
INVERTED_COMMA (300)
DOUBLE_QUOTE (301)
COLON (302) 27 28 29 70 71
BODY_START (303)
BODY_END (304)
DOUBLE (305) 35 47
FLOAT (306) 32 44
INTEGER (307) 29 31 43
BOOL (308) 48
CHAR_LITERAL (309) 34 46
STRING_LITERAL (310) 19 21 33 45
IDENTIFIER (311) 21 26 27 28 29 30 36 37 49 50 51 68 69 70 79 85 89
    90 91 107 108
PATH (312) 18
TYPE (313) 27 28 29 70 71
ARRAY_LITERAL (314) 37
SINGLE_LINE_COMMENT_START (315)
MULTI_LINE_COMMENT_START (316)
MULTI_LINE_COMMENT_END (317)
ARRAY_INIT (318)
END (319) 110


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1 2 3, on right: 0 2
statement (67)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 77 78
import_statement (68)
    on left: 18, on right: 4
print_statement (69)
    on left: 19 20, on right: 5
input_statement (70)
    on left: 21, on right: 6
var_declaration (71)
    on left: 22, on right: 7 84
var_declaration_without_semicolon (72)
    on left: 23, on right: 22 75
var_declaration_list (73)
    on left: 24 25, on right: 23 25
var_decl (74)
    on left: 26 27 28 29 30, on right: 24 25
value (75)
    on left: 31 32 33 34 35, on right: 28 30
assignment_statement (76)
    on left: 36 37, on right: 8
return_statement (77)
    on left: 38, on right: 10
conditional_statement (78)
    on left: 39 40, on right: 11
else_if_clauses (79)
    on left: 41 42, on right: 39 40 42
expression (80)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67 68 69, on right: 20 36 38 39 40 42 50 52 53
    54 55 56 57 58 59 60 61 62 63 64 65 66 67 81 82 85 87 89 93
function_declaration (81)
    on left: 70 71, on right: 9
param_list (82)
    on left: 72 73 74, on right: 70 73
param (83)
    on left: 75, on right: 73 74
function_body (84)
    on left: 76 77 78, on right: 39 40 42 70 71 77 83 96 99 102 105
function_call_statement (85)
    on left: 79, on right: 17
argument_list (86)
    on left: 80 81 82, on right: 51 79 82
for_statement (87)
    on left: 83, on right: 12
for_init (88)
    on left: 84 85 86, on right: 83
for_condition (89)
    on left: 87 88, on right: 83
for_increment (90)
    on left: 89 90 91 92, on right: 83
while_statement (91)
    on left: 93, on right: 13
while_body (92)
    on left: 94, on right: 93
pre_block (93)
    on left: 95 96 97, on right: 94
body_block (94)
    on left: 98 99 100, on right: 94
post_block (95)
    on left: 101 102 103, on right: 94
always_block (96)
    on left: 104 105 106, on right: 94
increment_statement (97)
    on left: 107, on right: 15
decrement_statement (98)
    on left: 108, on right: 16
break_statement (99)
    on left: 109, on right: 14
end_of_the_line (100)
    on left: 110, on right: 3


state 0

    0 $accept: . program $end

    END  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program          go to state 2
    end_of_the_line  go to state 3


state 1

  110 end_of_the_line: END .

    $default  reduce using rule 110 (end_of_the_line)


state 2

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 4
    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 16
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 3

    3 program: end_of_the_line .

    $default  reduce using rule 3 (program)


state 4

    0 $accept: program $end .

    $default  accept


state 5

   18 import_statement: IMPORT . PATH

    PATH  shift, and go to state 32


state 6

   19 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT . OPEN_PAREN expression CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 33


state 7

   23 var_declaration_without_semicolon: VAR . var_declaration_list

    IDENTIFIER  shift, and go to state 34

    var_declaration_list  go to state 35
    var_decl              go to state 36


state 8

   38 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 46


state 9

   70 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 47


state 10

   39 conditional_statement: IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   40                      | IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 48


state 11

   93 while_statement: WHILE . LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 49


state 12

   71 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 50


state 13

   83 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 51


state 14

  109 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 52


state 15

   21 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   36 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   37                     | IDENTIFIER . EQUALS ARRAY_LITERAL SEMICOLON
   79 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  107 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  108 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 53
    INPUT_OP    shift, and go to state 54
    INCREMENT   shift, and go to state 55
    DECREMENT   shift, and go to state 56
    OPEN_PAREN  shift, and go to state 57


state 16

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 17

    4 statement: import_statement .

    $default  reduce using rule 4 (statement)


state 18

    5 statement: print_statement .

    $default  reduce using rule 5 (statement)


state 19

    6 statement: input_statement .

    $default  reduce using rule 6 (statement)


state 20

    7 statement: var_declaration .

    $default  reduce using rule 7 (statement)


state 21

   22 var_declaration: var_declaration_without_semicolon . SEMICOLON

    SEMICOLON  shift, and go to state 58


state 22

    8 statement: assignment_statement .

    $default  reduce using rule 8 (statement)


state 23

   10 statement: return_statement .

    $default  reduce using rule 10 (statement)


state 24

   11 statement: conditional_statement .

    $default  reduce using rule 11 (statement)


state 25

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 26

   17 statement: function_call_statement .

    $default  reduce using rule 17 (statement)


state 27

   12 statement: for_statement .

    $default  reduce using rule 12 (statement)


state 28

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


state 29

   15 statement: increment_statement .

    $default  reduce using rule 15 (statement)


state 30

   16 statement: decrement_statement .

    $default  reduce using rule 16 (statement)


state 31

   14 statement: break_statement .

    $default  reduce using rule 14 (statement)


state 32

   18 import_statement: IMPORT PATH .

    $default  reduce using rule 18 (import_statement)


state 33

   19 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN . expression CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 59
    IDENTIFIER      shift, and go to state 45

    expression  go to state 60


state 34

   26 var_decl: IDENTIFIER .
   27         | IDENTIFIER . COLON TYPE
   28         | IDENTIFIER . COLON TYPE EQUALS value
   29         | IDENTIFIER . COLON TYPE LBRACKET INTEGER RBRACKET
   30         | IDENTIFIER . EQUALS value

    EQUALS  shift, and go to state 61
    COLON   shift, and go to state 62

    $default  reduce using rule 26 (var_decl)


state 35

   23 var_declaration_without_semicolon: VAR var_declaration_list .
   25 var_declaration_list: var_declaration_list . COMMA var_decl

    COMMA  shift, and go to state 63

    $default  reduce using rule 23 (var_declaration_without_semicolon)


state 36

   24 var_declaration_list: var_decl .

    $default  reduce using rule 24 (var_declaration_list)


state 37

   66 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 64


state 38

   67 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 65


state 39

   47 expression: DOUBLE .

    $default  reduce using rule 47 (expression)


state 40

   44 expression: FLOAT .

    $default  reduce using rule 44 (expression)


state 41

   43 expression: INTEGER .

    $default  reduce using rule 43 (expression)


state 42

   48 expression: BOOL .

    $default  reduce using rule 48 (expression)


state 43

   46 expression: CHAR_LITERAL .

    $default  reduce using rule 46 (expression)


state 44

   45 expression: STRING_LITERAL .

    $default  reduce using rule 45 (expression)


state 45

   49 expression: IDENTIFIER .
   50           | IDENTIFIER . LBRACKET expression RBRACKET
   51           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   68           | IDENTIFIER . INCREMENT
   69           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 66
    DECREMENT   shift, and go to state 67
    OPEN_PAREN  shift, and go to state 68
    LBRACKET    shift, and go to state 69

    $default  reduce using rule 49 (expression)


state 46

   38 return_statement: RETURN expression . SEMICOLON
   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    SEMICOLON           shift, and go to state 84


state 47

   70 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 85


state 48

   39 conditional_statement: IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   40                      | IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 86


state 49

   93 while_statement: WHILE LESS_THAN . expression GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 87


state 50

   71 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 88


state 51

   83 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 7
    SEMICOLON   shift, and go to state 89
    IDENTIFIER  shift, and go to state 90

    var_declaration                    go to state 91
    var_declaration_without_semicolon  go to state 21
    for_init                           go to state 92


state 52

  109 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 109 (break_statement)


state 53

   36 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON
   37                     | IDENTIFIER EQUALS . ARRAY_LITERAL SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45
    ARRAY_LITERAL   shift, and go to state 93

    expression  go to state 94


state 54

   21 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 95


state 55

  107 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 96


state 56

  108 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 97


state 57

   79 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    $default  reduce using rule 80 (argument_list)

    expression     go to state 98
    argument_list  go to state 99


state 58

   22 var_declaration: var_declaration_without_semicolon SEMICOLON .

    $default  reduce using rule 22 (var_declaration)


state 59

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON
   45 expression: STRING_LITERAL .

    CLOSE_PAREN  shift, and go to state 100

    CLOSE_PAREN  [reduce using rule 45 (expression)]
    $default     reduce using rule 45 (expression)


state 60

   20 print_statement: PRINT OPEN_PAREN expression . CLOSE_PAREN SEMICOLON
   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    CLOSE_PAREN         shift, and go to state 101


state 61

   30 var_decl: IDENTIFIER EQUALS . value

    DOUBLE          shift, and go to state 102
    FLOAT           shift, and go to state 103
    INTEGER         shift, and go to state 104
    CHAR_LITERAL    shift, and go to state 105
    STRING_LITERAL  shift, and go to state 106

    value  go to state 107


state 62

   27 var_decl: IDENTIFIER COLON . TYPE
   28         | IDENTIFIER COLON . TYPE EQUALS value
   29         | IDENTIFIER COLON . TYPE LBRACKET INTEGER RBRACKET

    TYPE  shift, and go to state 108


state 63

   25 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 34

    var_decl  go to state 109


state 64

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   66           | NOT_OP expression .

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    EQUALS              [reduce using rule 66 (expression)]
    OR_OP               [reduce using rule 66 (expression)]
    AND_OP              [reduce using rule 66 (expression)]
    NOT_EQUAL           [reduce using rule 66 (expression)]
    EQUALS_EQUALS       [reduce using rule 66 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 66 (expression)]
    GREATER_THAN        [reduce using rule 66 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 66 (expression)]
    LESS_THAN           [reduce using rule 66 (expression)]
    MINUS               [reduce using rule 66 (expression)]
    PLUS                [reduce using rule 66 (expression)]
    MOD                 [reduce using rule 66 (expression)]
    DIV                 [reduce using rule 66 (expression)]
    MULT                [reduce using rule 66 (expression)]
    $default            reduce using rule 66 (expression)


state 65

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   67           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    CLOSE_PAREN         shift, and go to state 110


state 66

   68 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 68 (expression)


state 67

   69 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 69 (expression)


state 68

   51 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    $default  reduce using rule 80 (argument_list)

    expression     go to state 98
    argument_list  go to state 111


state 69

   50 expression: IDENTIFIER LBRACKET . expression RBRACKET

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 112


state 70

   52 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 113


state 71

   53 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 114


state 72

   54 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 115


state 73

   56 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 116


state 74

   55 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 117


state 75

   60 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 118


state 76

   59 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 119


state 77

   58 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 120


state 78

   57 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 121


state 79

   62 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 122


state 80

   61 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 123


state 81

   65 expression: expression MOD . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 124


state 82

   64 expression: expression DIV . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 125


state 83

   63 expression: expression MULT . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 126


state 84

   38 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 38 (return_statement)


state 85

   70 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 127


state 86

   39 conditional_statement: IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   40                      | IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    CLOSE_PAREN         shift, and go to state 128


state 87

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   93 while_statement: WHILE LESS_THAN expression . GREATER_THAN LBRACE while_body RBRACE

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 129
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83


state 88

   71 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 130


state 89

   86 for_init: SEMICOLON .

    $default  reduce using rule 86 (for_init)


state 90

   85 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 131


state 91

   84 for_init: var_declaration .

    $default  reduce using rule 84 (for_init)


state 92

   83 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    SEMICOLON       shift, and go to state 132
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression     go to state 133
    for_condition  go to state 134


state 93

   37 assignment_statement: IDENTIFIER EQUALS ARRAY_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 135


state 94

   36 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    SEMICOLON           shift, and go to state 136


state 95

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 137


state 96

  107 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 107 (increment_statement)


state 97

  108 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 108 (decrement_statement)


state 98

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   81 argument_list: expression .

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    $default  reduce using rule 81 (argument_list)


state 99

   79 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   82 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 138
    COMMA        shift, and go to state 139


state 100

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 140


state 101

   20 print_statement: PRINT OPEN_PAREN expression CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 141


state 102

   35 value: DOUBLE .

    $default  reduce using rule 35 (value)


state 103

   32 value: FLOAT .

    $default  reduce using rule 32 (value)


state 104

   31 value: INTEGER .

    $default  reduce using rule 31 (value)


state 105

   34 value: CHAR_LITERAL .

    $default  reduce using rule 34 (value)


state 106

   33 value: STRING_LITERAL .

    $default  reduce using rule 33 (value)


state 107

   30 var_decl: IDENTIFIER EQUALS value .

    $default  reduce using rule 30 (var_decl)


state 108

   27 var_decl: IDENTIFIER COLON TYPE .
   28         | IDENTIFIER COLON TYPE . EQUALS value
   29         | IDENTIFIER COLON TYPE . LBRACKET INTEGER RBRACKET

    EQUALS    shift, and go to state 142
    LBRACKET  shift, and go to state 143

    $default  reduce using rule 27 (var_decl)


state 109

   25 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 25 (var_declaration_list)


state 110

   67 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 67 (expression)


state 111

   51 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   82 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 144
    COMMA        shift, and go to state 139


state 112

   50 expression: IDENTIFIER LBRACKET expression . RBRACKET
   52           | expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    RBRACKET            shift, and go to state 145


state 113

   52 expression: expression . EQUALS expression
   52           | expression EQUALS expression .
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    $default  reduce using rule 52 (expression)


state 114

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   53           | expression OR_OP expression .
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    $default  reduce using rule 53 (expression)


state 115

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   54           | expression AND_OP expression .
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    $default  reduce using rule 54 (expression)


state 116

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   56           | expression NOT_EQUAL expression .
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    $default  reduce using rule 56 (expression)


state 117

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   55           | expression EQUALS_EQUALS expression .
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    $default  reduce using rule 55 (expression)


state 118

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   60           | expression GREATER_THAN_EQUAL expression .
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MOD    shift, and go to state 81
    DIV    shift, and go to state 82
    MULT   shift, and go to state 83

    $default  reduce using rule 60 (expression)


state 119

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   59           | expression GREATER_THAN expression .
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MOD    shift, and go to state 81
    DIV    shift, and go to state 82
    MULT   shift, and go to state 83

    $default  reduce using rule 59 (expression)


state 120

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   58           | expression LESS_THAN_EQUAL expression .
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MOD    shift, and go to state 81
    DIV    shift, and go to state 82
    MULT   shift, and go to state 83

    $default  reduce using rule 58 (expression)


state 121

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   57           | expression LESS_THAN expression .
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MOD    shift, and go to state 81
    DIV    shift, and go to state 82
    MULT   shift, and go to state 83

    $default  reduce using rule 57 (expression)


state 122

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   62           | expression MINUS expression .
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    MOD   shift, and go to state 81
    DIV   shift, and go to state 82
    MULT  shift, and go to state 83

    $default  reduce using rule 62 (expression)


state 123

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   61           | expression PLUS expression .
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    MOD   shift, and go to state 81
    DIV   shift, and go to state 82
    MULT  shift, and go to state 83

    $default  reduce using rule 61 (expression)


state 124

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   65           | expression MOD expression .

    $default  reduce using rule 65 (expression)


state 125

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   64           | expression DIV expression .
   65           | expression . MOD expression

    $default  reduce using rule 64 (expression)


state 126

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   63           | expression MULT expression .
   64           | expression . DIV expression
   65           | expression . MOD expression

    $default  reduce using rule 63 (expression)


state 127

   70 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 146


state 128

   39 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   40                      | IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 147


state 129

   59 expression: expression GREATER_THAN . expression
   93 while_statement: WHILE LESS_THAN expression GREATER_THAN . LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    LBRACE          shift, and go to state 148
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 119


state 130

   71 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 149


state 131

   85 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 150


state 132

   88 for_condition: SEMICOLON .

    $default  reduce using rule 88 (for_condition)


state 133

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   87 for_condition: expression . SEMICOLON

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    SEMICOLON           shift, and go to state 151


state 134

   83 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 152

    $default  reduce using rule 92 (for_increment)

    for_increment  go to state 153


state 135

   37 assignment_statement: IDENTIFIER EQUALS ARRAY_LITERAL SEMICOLON .

    $default  reduce using rule 37 (assignment_statement)


state 136

   36 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 36 (assignment_statement)


state 137

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 154


state 138

   79 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 155


state 139

   82 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 156


state 140

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 19 (print_statement)


state 141

   20 print_statement: PRINT OPEN_PAREN expression CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 20 (print_statement)


state 142

   28 var_decl: IDENTIFIER COLON TYPE EQUALS . value

    DOUBLE          shift, and go to state 102
    FLOAT           shift, and go to state 103
    INTEGER         shift, and go to state 104
    CHAR_LITERAL    shift, and go to state 105
    STRING_LITERAL  shift, and go to state 106

    value  go to state 157


state 143

   29 var_decl: IDENTIFIER COLON TYPE LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 158


state 144

   51 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 51 (expression)


state 145

   50 expression: IDENTIFIER LBRACKET expression RBRACKET .

    $default  reduce using rule 50 (expression)


state 146

   70 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    LESS_THAN  shift, and go to state 159

    $default  reduce using rule 72 (param_list)

    param_list  go to state 160
    param       go to state 161


state 147

   39 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   40                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 163
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 148

   93 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 164

    POST      reduce using rule 95 (pre_block)
    POST      [reduce using rule 97 (pre_block)]
    BODY      reduce using rule 95 (pre_block)
    BODY      [reduce using rule 97 (pre_block)]
    ALWAYS    reduce using rule 95 (pre_block)
    ALWAYS    [reduce using rule 97 (pre_block)]
    RBRACE    reduce using rule 95 (pre_block)
    RBRACE    [reduce using rule 97 (pre_block)]
    $default  reduce using rule 95 (pre_block)

    while_body  go to state 165
    pre_block   go to state 166


state 149

   71 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 167


state 150

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   85 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    SEMICOLON           shift, and go to state 168


state 151

   87 for_condition: expression SEMICOLON .

    $default  reduce using rule 87 (for_condition)


state 152

   89 for_increment: IDENTIFIER . EQUALS expression
   90              | IDENTIFIER . INCREMENT
   91              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 169
    INCREMENT  shift, and go to state 170
    DECREMENT  shift, and go to state 171


state 153

   83 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 172


state 154

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 173


state 155

   79 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 79 (function_call_statement)


state 156

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   82 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    $default  reduce using rule 82 (argument_list)


state 157

   28 var_decl: IDENTIFIER COLON TYPE EQUALS value .

    $default  reduce using rule 28 (var_decl)


state 158

   29 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 174


state 159

   75 param: LESS_THAN . var_declaration_without_semicolon GREATER_THAN

    VAR  shift, and go to state 7

    var_declaration_without_semicolon  go to state 175


state 160

   70 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   73 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 176
    COMMA        shift, and go to state 177


state 161

   74 param_list: param .

    $default  reduce using rule 74 (param_list)


state 162

   78 function_body: statement .

    $default  reduce using rule 78 (function_body)


state 163

   39 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   40                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   77 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 178
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 164

   96 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 180


state 165

   93 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 181


state 166

   94 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 182

    POST      reduce using rule 98 (body_block)
    POST      [reduce using rule 100 (body_block)]
    ALWAYS    reduce using rule 98 (body_block)
    ALWAYS    [reduce using rule 100 (body_block)]
    RBRACE    reduce using rule 98 (body_block)
    RBRACE    [reduce using rule 100 (body_block)]
    $default  reduce using rule 98 (body_block)

    body_block  go to state 183


state 167

   71 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 184


state 168

   85 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 85 (for_init)


state 169

   89 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 185


state 170

   90 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 90 (for_increment)


state 171

   91 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 91 (for_increment)


state 172

   83 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 186


state 173

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 21 (input_statement)


state 174

   29 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 29 (var_decl)


state 175

   75 param: LESS_THAN var_declaration_without_semicolon . GREATER_THAN

    GREATER_THAN  shift, and go to state 187


state 176

   70 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 188


state 177

   73 param_list: param_list COMMA . param

    LESS_THAN  shift, and go to state 159

    param  go to state 189


state 178

   39 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   40                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 41 (else_if_clauses)

    else_if_clauses  go to state 190


state 179

   77 function_body: function_body statement .

    $default  reduce using rule 77 (function_body)


state 180

   96 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 191
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 181

   93 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 93 (while_statement)


state 182

   99 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 192


state 183

   94 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 193

    ALWAYS    reduce using rule 101 (post_block)
    ALWAYS    [reduce using rule 103 (post_block)]
    RBRACE    reduce using rule 101 (post_block)
    RBRACE    [reduce using rule 103 (post_block)]
    $default  reduce using rule 101 (post_block)

    post_block  go to state 194


state 184

   71 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 195
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 185

   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression
   89 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83

    $default  reduce using rule 89 (for_increment)


state 186

   83 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 196
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 187

   75 param: LESS_THAN var_declaration_without_semicolon GREATER_THAN .

    $default  reduce using rule 75 (param)


state 188

   70 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 197
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 189

   73 param_list: param_list COMMA param .

    $default  reduce using rule 73 (param_list)


state 190

   39 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   40                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   42 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 198

    $default  reduce using rule 39 (conditional_statement)


state 191

   77 function_body: function_body . statement
   96 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 199
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 192

   99 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 200
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 193

  102 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 201


state 194

   94 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 202

    RBRACE    reduce using rule 104 (always_block)
    RBRACE    [reduce using rule 106 (always_block)]
    $default  reduce using rule 104 (always_block)

    always_block  go to state 203


state 195

   71 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   77 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 204
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 196

   77 function_body: function_body . statement
   83 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 205
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 197

   70 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   77 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 206
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 198

   40 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   42 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 207
    LBRACE  shift, and go to state 208


state 199

   96 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 96 (pre_block)


state 200

   77 function_body: function_body . statement
   99 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 209
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 201

  102 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 210
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 202

  105 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 211


state 203

   94 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 94 (while_body)


state 204

   71 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 71 (function_declaration)


state 205

   83 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 83 (for_statement)


state 206

   70 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 70 (function_declaration)


state 207

   42 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 212


state 208

   40 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 213
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 209

   99 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 99 (body_block)


state 210

   77 function_body: function_body . statement
  102 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 214
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 211

  105 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 215
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 212

   42 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 216


state 213

   40 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   77 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 217
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 214

  102 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 102 (post_block)


state 215

   77 function_body: function_body . statement
  105 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 218
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 216

   42 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE
   52 expression: expression . EQUALS expression
   53           | expression . OR_OP expression
   54           | expression . AND_OP expression
   55           | expression . EQUALS_EQUALS expression
   56           | expression . NOT_EQUAL expression
   57           | expression . LESS_THAN expression
   58           | expression . LESS_THAN_EQUAL expression
   59           | expression . GREATER_THAN expression
   60           | expression . GREATER_THAN_EQUAL expression
   61           | expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . MULT expression
   64           | expression . DIV expression
   65           | expression . MOD expression

    EQUALS              shift, and go to state 70
    OR_OP               shift, and go to state 71
    AND_OP              shift, and go to state 72
    NOT_EQUAL           shift, and go to state 73
    EQUALS_EQUALS       shift, and go to state 74
    GREATER_THAN_EQUAL  shift, and go to state 75
    GREATER_THAN        shift, and go to state 76
    LESS_THAN_EQUAL     shift, and go to state 77
    LESS_THAN           shift, and go to state 78
    MINUS               shift, and go to state 79
    PLUS                shift, and go to state 80
    MOD                 shift, and go to state 81
    DIV                 shift, and go to state 82
    MULT                shift, and go to state 83
    CLOSE_PAREN         shift, and go to state 219


state 217

   40 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 40 (conditional_statement)


state 218

  105 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 105 (always_block)


state 219

   42 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 220


state 220

   42 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 76 (function_body)]
    PRINT       [reduce using rule 76 (function_body)]
    VAR         [reduce using rule 76 (function_body)]
    RETURN      [reduce using rule 76 (function_body)]
    FUNCTION    [reduce using rule 76 (function_body)]
    IF          [reduce using rule 76 (function_body)]
    WHILE       [reduce using rule 76 (function_body)]
    MAIN        [reduce using rule 76 (function_body)]
    FOR         [reduce using rule 76 (function_body)]
    BREAK       [reduce using rule 76 (function_body)]
    IDENTIFIER  [reduce using rule 76 (function_body)]
    $default    reduce using rule 76 (function_body)

    statement                          go to state 162
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 221
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 221

   42 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE
   77 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 222
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 179
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 222

   42 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 42 (else_if_clauses)
