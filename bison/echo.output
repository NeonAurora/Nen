Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT


Rules useless in parser due to conflicts

   99 pre_block: /* empty */

  102 body_block: /* empty */

  105 post_block: /* empty */

  108 always_block: /* empty */


State 62 conflicts: 14 shift/reduce
State 142 conflicts: 11 shift/reduce
State 145 conflicts: 1 reduce/reduce
State 146 conflicts: 1 reduce/reduce
State 147 conflicts: 1 reduce/reduce
State 148 conflicts: 1 reduce/reduce
State 149 conflicts: 4 reduce/reduce
State 172 conflicts: 3 reduce/reduce
State 186 conflicts: 11 shift/reduce
State 189 conflicts: 2 reduce/reduce
State 190 conflicts: 11 shift/reduce
State 192 conflicts: 11 shift/reduce
State 194 conflicts: 11 shift/reduce
State 198 conflicts: 11 shift/reduce
State 200 conflicts: 1 reduce/reduce
State 207 conflicts: 11 shift/reduce
State 214 conflicts: 11 shift/reduce
State 217 conflicts: 11 shift/reduce
State 226 conflicts: 11 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement
    3        | end_of_the_line

    4 statement: import_statement
    5          | print_statement
    6          | input_statement
    7          | var_declaration
    8          | assignment_statement
    9          | function_declaration
   10          | return_statement
   11          | conditional_statement
   12          | for_statement
   13          | while_statement
   14          | break_statement
   15          | increment_statement
   16          | decrement_statement
   17          | function_call_statement

   18 import_statement: IMPORT PATH

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   22 var_declaration: VAR var_declaration_list SEMICOLON

   23 var_declaration_list: var_decl
   24                     | var_declaration_list COMMA var_decl

   25 var_decl: IDENTIFIER
   26         | IDENTIFIER COLON TYPE
   27         | IDENTIFIER COLON TYPE EQUALS value
   28         | IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET
   29         | IDENTIFIER EQUALS INTEGER

   30 value: INTEGER
   31      | FLOAT
   32      | STRING_LITERAL
   33      | CHAR_LITERAL
   34      | DOUBLE

   35 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON

   36 return_statement: RETURN expression SEMICOLON

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   39 else_if_clauses: /* empty */
   40                | else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

   41 condition: expression EQUALS_EQUALS expression
   42          | expression NOT_EQUAL expression
   43          | expression LESS_THAN expression
   44          | expression LESS_THAN_EQUAL expression
   45          | expression GREATER_THAN expression
   46          | expression GREATER_THAN_EQUAL expression

   47 expression: INTEGER
   48           | STRING_LITERAL
   49           | CHAR_LITERAL
   50           | FLOAT
   51           | DOUBLE
   52           | IDENTIFIER
   53           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   54           | expression EQUALS expression
   55           | expression OR_OP expression
   56           | expression AND_OP expression
   57           | expression EQUALS_EQUALS expression
   58           | expression NOT_EQUAL expression
   59           | expression LESS_THAN expression
   60           | expression LESS_THAN_EQUAL expression
   61           | expression GREATER_THAN expression
   62           | expression GREATER_THAN_EQUAL expression
   63           | expression PLUS expression
   64           | expression MINUS expression
   65           | expression MULT expression
   66           | expression DIV expression
   67           | expression MOD expression
   68           | NOT_OP expression
   69           | OPEN_PAREN expression CLOSE_PAREN
   70           | IDENTIFIER INCREMENT
   71           | IDENTIFIER DECREMENT

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   73                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   74 param_list: /* empty */
   75           | param_list COMMA param
   76           | param

   77 param: IDENTIFIER COLON TYPE

   78 function_body: /* empty */
   79              | function_body statement
   80              | statement

   81 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   82 argument_list: /* empty */
   83              | expression
   84              | argument_list COMMA expression

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   86 for_init: var_declaration
   87         | IDENTIFIER EQUALS expression SEMICOLON
   88         | SEMICOLON

   89 for_condition: condition SEMICOLON
   90              | SEMICOLON

   91 for_increment: IDENTIFIER EQUALS expression
   92              | IDENTIFIER INCREMENT
   93              | IDENTIFIER DECREMENT
   94              | /* empty */

   95 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

   96 while_body: pre_block body_block post_block always_block

   97 pre_block: /* empty */
   98          | PRE LBRACE function_body RBRACE
   99          | /* empty */

  100 body_block: /* empty */
  101           | BODY LBRACE function_body RBRACE
  102           | /* empty */

  103 post_block: /* empty */
  104           | POST LBRACE function_body RBRACE
  105           | /* empty */

  106 always_block: /* empty */
  107             | ALWAYS LBRACE function_body RBRACE
  108             | /* empty */

  109 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  110 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  111 break_statement: BREAK SEMICOLON

  112 end_of_the_line: END


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 27 29 35 54 87 91
OR_OP (259) 55
AND_OP (260) 56
NOT_EQUAL (261) 42 58
EQUALS_EQUALS (262) 41 57
GREATER_THAN_EQUAL (263) 46 62
GREATER_THAN (264) 45 61 95
LESS_THAN_EQUAL (265) 44 60
LESS_THAN (266) 43 59 95
MINUS (267) 64
PLUS (268) 63
MOD (269) 67
DIV (270) 66
MULT (271) 65
IMPORT (272) 18
PRINT (273) 19 20
VAR (274) 22
RETURN (275) 36
FUNCTION (276) 72 73
IF (277) 37 38 40
ELSE (278) 38 40
WHILE (279) 95
MAIN (280) 73
END_PROGRAM (281)
FOR (282) 85
PRE (283) 98
POST (284) 104
BODY (285) 101
ALWAYS (286) 107
BREAK (287) 111
INPUT_OP (288) 21
NOT_OP (289) 68
INCREMENT (290) 70 92 109
DECREMENT (291) 71 93 110
OPEN_PAREN (292) 19 20 21 37 38 40 53 69 72 73 81 85
CLOSE_PAREN (293) 19 20 21 37 38 40 53 69 72 73 81 85
LBRACKET (294) 28
RBRACKET (295) 28
LBRACE (296) 37 38 40 72 73 85 95 98 101 104 107
RBRACE (297) 37 38 40 72 73 85 95 98 101 104 107
SEMICOLON (298) 19 20 21 22 35 36 81 87 88 89 90 109 110 111
COMMA (299) 24 75 84
INVERTED_COMMA (300)
DOUBLE_QUOTE (301)
COLON (302) 26 27 28 72 73 77
BODY_START (303)
BODY_END (304)
DOUBLE (305) 34 51
FLOAT (306) 31 50
INTEGER (307) 28 29 30 47
CHAR_LITERAL (308) 33 49
STRING_LITERAL (309) 19 21 32 48
IDENTIFIER (310) 20 21 25 26 27 28 29 35 52 53 70 71 72 77 81 87 91
    92 93 109 110
PATH (311) 18
TYPE (312) 26 27 28 72 73 77
SINGLE_LINE_COMMENT_START (313)
MULTI_LINE_COMMENT_START (314)
MULTI_LINE_COMMENT_END (315)
ARRAY_INIT (316)
END (317) 112


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
program (64)
    on left: 1 2 3, on right: 0 2
statement (65)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 79 80
import_statement (66)
    on left: 18, on right: 4
print_statement (67)
    on left: 19 20, on right: 5
input_statement (68)
    on left: 21, on right: 6
var_declaration (69)
    on left: 22, on right: 7 86
var_declaration_list (70)
    on left: 23 24, on right: 22 24
var_decl (71)
    on left: 25 26 27 28 29, on right: 23 24
value (72)
    on left: 30 31 32 33 34, on right: 27
assignment_statement (73)
    on left: 35, on right: 8
return_statement (74)
    on left: 36, on right: 10
conditional_statement (75)
    on left: 37 38, on right: 11
else_if_clauses (76)
    on left: 39 40, on right: 37 38 40
condition (77)
    on left: 41 42 43 44 45 46, on right: 37 38 40 89 95
expression (78)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71, on right: 35 36 41 42 43 44 45 46 54 55 56
    57 58 59 60 61 62 63 64 65 66 67 68 69 83 84 87 91
function_declaration (79)
    on left: 72 73, on right: 9
param_list (80)
    on left: 74 75 76, on right: 72 75
param (81)
    on left: 77, on right: 75 76
function_body (82)
    on left: 78 79 80, on right: 37 38 40 72 73 79 85 98 101 104 107
function_call_statement (83)
    on left: 81, on right: 17
argument_list (84)
    on left: 82 83 84, on right: 53 81 84
for_statement (85)
    on left: 85, on right: 12
for_init (86)
    on left: 86 87 88, on right: 85
for_condition (87)
    on left: 89 90, on right: 85
for_increment (88)
    on left: 91 92 93 94, on right: 85
while_statement (89)
    on left: 95, on right: 13
while_body (90)
    on left: 96, on right: 95
pre_block (91)
    on left: 97 98 99, on right: 96
body_block (92)
    on left: 100 101 102, on right: 96
post_block (93)
    on left: 103 104 105, on right: 96
always_block (94)
    on left: 106 107 108, on right: 96
increment_statement (95)
    on left: 109, on right: 15
decrement_statement (96)
    on left: 110, on right: 16
break_statement (97)
    on left: 111, on right: 14
end_of_the_line (98)
    on left: 112, on right: 3


state 0

    0 $accept: . program $end

    END  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program          go to state 2
    end_of_the_line  go to state 3


state 1

  112 end_of_the_line: END .

    $default  reduce using rule 112 (end_of_the_line)


state 2

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 4
    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    statement                go to state 16
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 3

    3 program: end_of_the_line .

    $default  reduce using rule 3 (program)


state 4

    0 $accept: program $end .

    $default  accept


state 5

   18 import_statement: IMPORT . PATH

    PATH  shift, and go to state 31


state 6

   19 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT . OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 32


state 7

   22 var_declaration: VAR . var_declaration_list SEMICOLON

    IDENTIFIER  shift, and go to state 33

    var_declaration_list  go to state 34
    var_decl              go to state 35


state 8

   36 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 44


state 9

   72 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 45


state 10

   37 conditional_statement: IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 46


state 11

   95 while_statement: WHILE . LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 47


state 12

   73 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 48


state 13

   85 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 49


state 14

  111 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


state 15

   21 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   35 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   81 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  109 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  110 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 51
    INPUT_OP    shift, and go to state 52
    INCREMENT   shift, and go to state 53
    DECREMENT   shift, and go to state 54
    OPEN_PAREN  shift, and go to state 55


state 16

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 17

    4 statement: import_statement .

    $default  reduce using rule 4 (statement)


state 18

    5 statement: print_statement .

    $default  reduce using rule 5 (statement)


state 19

    6 statement: input_statement .

    $default  reduce using rule 6 (statement)


state 20

    7 statement: var_declaration .

    $default  reduce using rule 7 (statement)


state 21

    8 statement: assignment_statement .

    $default  reduce using rule 8 (statement)


state 22

   10 statement: return_statement .

    $default  reduce using rule 10 (statement)


state 23

   11 statement: conditional_statement .

    $default  reduce using rule 11 (statement)


state 24

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 25

   17 statement: function_call_statement .

    $default  reduce using rule 17 (statement)


state 26

   12 statement: for_statement .

    $default  reduce using rule 12 (statement)


state 27

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


state 28

   15 statement: increment_statement .

    $default  reduce using rule 15 (statement)


state 29

   16 statement: decrement_statement .

    $default  reduce using rule 16 (statement)


state 30

   14 statement: break_statement .

    $default  reduce using rule 14 (statement)


state 31

   18 import_statement: IMPORT PATH .

    $default  reduce using rule 18 (import_statement)


state 32

   19 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN . IDENTIFIER CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 56
    IDENTIFIER      shift, and go to state 57


state 33

   25 var_decl: IDENTIFIER .
   26         | IDENTIFIER . COLON TYPE
   27         | IDENTIFIER . COLON TYPE EQUALS value
   28         | IDENTIFIER . COLON TYPE LBRACKET INTEGER RBRACKET
   29         | IDENTIFIER . EQUALS INTEGER

    EQUALS  shift, and go to state 58
    COLON   shift, and go to state 59

    $default  reduce using rule 25 (var_decl)


state 34

   22 var_declaration: VAR var_declaration_list . SEMICOLON
   24 var_declaration_list: var_declaration_list . COMMA var_decl

    SEMICOLON  shift, and go to state 60
    COMMA      shift, and go to state 61


state 35

   23 var_declaration_list: var_decl .

    $default  reduce using rule 23 (var_declaration_list)


state 36

   68 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 62


state 37

   69 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 63


state 38

   51 expression: DOUBLE .

    $default  reduce using rule 51 (expression)


state 39

   50 expression: FLOAT .

    $default  reduce using rule 50 (expression)


state 40

   47 expression: INTEGER .

    $default  reduce using rule 47 (expression)


state 41

   49 expression: CHAR_LITERAL .

    $default  reduce using rule 49 (expression)


state 42

   48 expression: STRING_LITERAL .

    $default  reduce using rule 48 (expression)


state 43

   52 expression: IDENTIFIER .
   53           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   70           | IDENTIFIER . INCREMENT
   71           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 64
    DECREMENT   shift, and go to state 65
    OPEN_PAREN  shift, and go to state 66

    $default  reduce using rule 52 (expression)


state 44

   36 return_statement: RETURN expression . SEMICOLON
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80
    SEMICOLON           shift, and go to state 81


state 45

   72 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 82


state 46

   37 conditional_statement: IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    condition   go to state 83
    expression  go to state 84


state 47

   95 while_statement: WHILE LESS_THAN . condition GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    condition   go to state 85
    expression  go to state 84


state 48

   73 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 86


state 49

   85 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 7
    SEMICOLON   shift, and go to state 87
    IDENTIFIER  shift, and go to state 88

    var_declaration  go to state 89
    for_init         go to state 90


state 50

  111 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 111 (break_statement)


state 51

   35 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 91


state 52

   21 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 92


state 53

  109 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 93


state 54

  110 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 94


state 55

   81 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    $default  reduce using rule 82 (argument_list)

    expression     go to state 95
    argument_list  go to state 96


state 56

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 97


state 57

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 98


state 58

   29 var_decl: IDENTIFIER EQUALS . INTEGER

    INTEGER  shift, and go to state 99


state 59

   26 var_decl: IDENTIFIER COLON . TYPE
   27         | IDENTIFIER COLON . TYPE EQUALS value
   28         | IDENTIFIER COLON . TYPE LBRACKET INTEGER RBRACKET

    TYPE  shift, and go to state 100


state 60

   22 var_declaration: VAR var_declaration_list SEMICOLON .

    $default  reduce using rule 22 (var_declaration)


state 61

   24 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 33

    var_decl  go to state 101


state 62

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   68           | NOT_OP expression .

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    EQUALS              [reduce using rule 68 (expression)]
    OR_OP               [reduce using rule 68 (expression)]
    AND_OP              [reduce using rule 68 (expression)]
    NOT_EQUAL           [reduce using rule 68 (expression)]
    EQUALS_EQUALS       [reduce using rule 68 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 68 (expression)]
    GREATER_THAN        [reduce using rule 68 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 68 (expression)]
    LESS_THAN           [reduce using rule 68 (expression)]
    MINUS               [reduce using rule 68 (expression)]
    PLUS                [reduce using rule 68 (expression)]
    MOD                 [reduce using rule 68 (expression)]
    DIV                 [reduce using rule 68 (expression)]
    MULT                [reduce using rule 68 (expression)]
    $default            reduce using rule 68 (expression)


state 63

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   69           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80
    CLOSE_PAREN         shift, and go to state 102


state 64

   70 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 70 (expression)


state 65

   71 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 71 (expression)


state 66

   53 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    $default  reduce using rule 82 (argument_list)

    expression     go to state 95
    argument_list  go to state 103


state 67

   54 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 104


state 68

   55 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 105


state 69

   56 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 106


state 70

   58 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 107


state 71

   57 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 108


state 72

   62 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 109


state 73

   61 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 110


state 74

   60 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 111


state 75

   59 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 112


state 76

   64 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 113


state 77

   63 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 114


state 78

   67 expression: expression MOD . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 115


state 79

   66 expression: expression DIV . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 116


state 80

   65 expression: expression MULT . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 117


state 81

   36 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 36 (return_statement)


state 82

   72 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 118


state 83

   37 conditional_statement: IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 119


state 84

   41 condition: expression . EQUALS_EQUALS expression
   42          | expression . NOT_EQUAL expression
   43          | expression . LESS_THAN expression
   44          | expression . LESS_THAN_EQUAL expression
   45          | expression . GREATER_THAN expression
   46          | expression . GREATER_THAN_EQUAL expression
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 120
    EQUALS_EQUALS       shift, and go to state 121
    GREATER_THAN_EQUAL  shift, and go to state 122
    GREATER_THAN        shift, and go to state 123
    LESS_THAN_EQUAL     shift, and go to state 124
    LESS_THAN           shift, and go to state 125
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80


state 85

   95 while_statement: WHILE LESS_THAN condition . GREATER_THAN LBRACE while_body RBRACE

    GREATER_THAN  shift, and go to state 126


state 86

   73 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 127


state 87

   88 for_init: SEMICOLON .

    $default  reduce using rule 88 (for_init)


state 88

   87 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 128


state 89

   86 for_init: var_declaration .

    $default  reduce using rule 86 (for_init)


state 90

   85 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    SEMICOLON       shift, and go to state 129
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    condition      go to state 130
    expression     go to state 84
    for_condition  go to state 131


state 91

   35 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80
    SEMICOLON           shift, and go to state 132


state 92

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 133


state 93

  109 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 109 (increment_statement)


state 94

  110 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 110 (decrement_statement)


state 95

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   83 argument_list: expression .

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    $default  reduce using rule 83 (argument_list)


state 96

   81 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   84 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 134
    COMMA        shift, and go to state 135


state 97

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 136


state 98

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 137


state 99

   29 var_decl: IDENTIFIER EQUALS INTEGER .

    $default  reduce using rule 29 (var_decl)


state 100

   26 var_decl: IDENTIFIER COLON TYPE .
   27         | IDENTIFIER COLON TYPE . EQUALS value
   28         | IDENTIFIER COLON TYPE . LBRACKET INTEGER RBRACKET

    EQUALS    shift, and go to state 138
    LBRACKET  shift, and go to state 139

    $default  reduce using rule 26 (var_decl)


state 101

   24 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 24 (var_declaration_list)


state 102

   69 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 69 (expression)


state 103

   53 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   84 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 140
    COMMA        shift, and go to state 135


state 104

   54 expression: expression . EQUALS expression
   54           | expression EQUALS expression .
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    $default  reduce using rule 54 (expression)


state 105

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   55           | expression OR_OP expression .
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    $default  reduce using rule 55 (expression)


state 106

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   56           | expression AND_OP expression .
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    $default  reduce using rule 56 (expression)


state 107

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   58           | expression NOT_EQUAL expression .
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    $default  reduce using rule 58 (expression)


state 108

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   57           | expression EQUALS_EQUALS expression .
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    $default  reduce using rule 57 (expression)


state 109

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   62           | expression GREATER_THAN_EQUAL expression .
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 76
    PLUS   shift, and go to state 77
    MOD    shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80

    $default  reduce using rule 62 (expression)


state 110

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   61           | expression GREATER_THAN expression .
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 76
    PLUS   shift, and go to state 77
    MOD    shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80

    $default  reduce using rule 61 (expression)


state 111

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   60           | expression LESS_THAN_EQUAL expression .
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 76
    PLUS   shift, and go to state 77
    MOD    shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80

    $default  reduce using rule 60 (expression)


state 112

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   59           | expression LESS_THAN expression .
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 76
    PLUS   shift, and go to state 77
    MOD    shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80

    $default  reduce using rule 59 (expression)


state 113

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   64           | expression MINUS expression .
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MOD   shift, and go to state 78
    DIV   shift, and go to state 79
    MULT  shift, and go to state 80

    $default  reduce using rule 64 (expression)


state 114

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   63           | expression PLUS expression .
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MOD   shift, and go to state 78
    DIV   shift, and go to state 79
    MULT  shift, and go to state 80

    $default  reduce using rule 63 (expression)


state 115

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   67           | expression MOD expression .

    $default  reduce using rule 67 (expression)


state 116

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   66           | expression DIV expression .
   67           | expression . MOD expression

    $default  reduce using rule 66 (expression)


state 117

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   65           | expression MULT expression .
   66           | expression . DIV expression
   67           | expression . MOD expression

    $default  reduce using rule 65 (expression)


state 118

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 141


state 119

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 142


state 120

   42 condition: expression NOT_EQUAL . expression
   58 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 143


state 121

   41 condition: expression EQUALS_EQUALS . expression
   57 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 144


state 122

   46 condition: expression GREATER_THAN_EQUAL . expression
   62 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 145


state 123

   45 condition: expression GREATER_THAN . expression
   61 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 146


state 124

   44 condition: expression LESS_THAN_EQUAL . expression
   60 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 147


state 125

   43 condition: expression LESS_THAN . expression
   59 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 148


state 126

   95 while_statement: WHILE LESS_THAN condition GREATER_THAN . LBRACE while_body RBRACE

    LBRACE  shift, and go to state 149


state 127

   73 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 150


state 128

   87 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 151


state 129

   90 for_condition: SEMICOLON .

    $default  reduce using rule 90 (for_condition)


state 130

   89 for_condition: condition . SEMICOLON

    SEMICOLON  shift, and go to state 152


state 131

   85 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 153

    $default  reduce using rule 94 (for_increment)

    for_increment  go to state 154


state 132

   35 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 35 (assignment_statement)


state 133

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 155


state 134

   81 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 156


state 135

   84 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 157


state 136

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 19 (print_statement)


state 137

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 20 (print_statement)


state 138

   27 var_decl: IDENTIFIER COLON TYPE EQUALS . value

    DOUBLE          shift, and go to state 158
    FLOAT           shift, and go to state 159
    INTEGER         shift, and go to state 160
    CHAR_LITERAL    shift, and go to state 161
    STRING_LITERAL  shift, and go to state 162

    value  go to state 163


state 139

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 164


state 140

   53 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 53 (expression)


state 141

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 165

    $default  reduce using rule 74 (param_list)

    param_list  go to state 166
    param       go to state 167


state 142

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 169
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 143

   42 condition: expression NOT_EQUAL expression .
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   58           | expression NOT_EQUAL expression .
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    CLOSE_PAREN  reduce using rule 42 (condition)
    SEMICOLON    reduce using rule 42 (condition)
    $default     reduce using rule 58 (expression)


state 144

   41 condition: expression EQUALS_EQUALS expression .
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   57           | expression EQUALS_EQUALS expression .
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    CLOSE_PAREN  reduce using rule 41 (condition)
    SEMICOLON    reduce using rule 41 (condition)
    $default     reduce using rule 57 (expression)


state 145

   46 condition: expression GREATER_THAN_EQUAL expression .
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   62           | expression GREATER_THAN_EQUAL expression .
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 76
    PLUS   shift, and go to state 77
    MOD    shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80

    GREATER_THAN  reduce using rule 46 (condition)
    GREATER_THAN  [reduce using rule 62 (expression)]
    CLOSE_PAREN   reduce using rule 46 (condition)
    SEMICOLON     reduce using rule 46 (condition)
    $default      reduce using rule 62 (expression)


state 146

   45 condition: expression GREATER_THAN expression .
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   61           | expression GREATER_THAN expression .
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 76
    PLUS   shift, and go to state 77
    MOD    shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80

    GREATER_THAN  reduce using rule 45 (condition)
    GREATER_THAN  [reduce using rule 61 (expression)]
    CLOSE_PAREN   reduce using rule 45 (condition)
    SEMICOLON     reduce using rule 45 (condition)
    $default      reduce using rule 61 (expression)


state 147

   44 condition: expression LESS_THAN_EQUAL expression .
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   60           | expression LESS_THAN_EQUAL expression .
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 76
    PLUS   shift, and go to state 77
    MOD    shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80

    GREATER_THAN  reduce using rule 44 (condition)
    GREATER_THAN  [reduce using rule 60 (expression)]
    CLOSE_PAREN   reduce using rule 44 (condition)
    SEMICOLON     reduce using rule 44 (condition)
    $default      reduce using rule 60 (expression)


state 148

   43 condition: expression LESS_THAN expression .
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   59           | expression LESS_THAN expression .
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 76
    PLUS   shift, and go to state 77
    MOD    shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80

    GREATER_THAN  reduce using rule 43 (condition)
    GREATER_THAN  [reduce using rule 59 (expression)]
    CLOSE_PAREN   reduce using rule 43 (condition)
    SEMICOLON     reduce using rule 43 (condition)
    $default      reduce using rule 59 (expression)


state 149

   95 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 170

    POST      reduce using rule 97 (pre_block)
    POST      [reduce using rule 99 (pre_block)]
    BODY      reduce using rule 97 (pre_block)
    BODY      [reduce using rule 99 (pre_block)]
    ALWAYS    reduce using rule 97 (pre_block)
    ALWAYS    [reduce using rule 99 (pre_block)]
    RBRACE    reduce using rule 97 (pre_block)
    RBRACE    [reduce using rule 99 (pre_block)]
    $default  reduce using rule 97 (pre_block)

    while_body  go to state 171
    pre_block   go to state 172


state 150

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 173


state 151

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   87 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80
    SEMICOLON           shift, and go to state 174


state 152

   89 for_condition: condition SEMICOLON .

    $default  reduce using rule 89 (for_condition)


state 153

   91 for_increment: IDENTIFIER . EQUALS expression
   92              | IDENTIFIER . INCREMENT
   93              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 175
    INCREMENT  shift, and go to state 176
    DECREMENT  shift, and go to state 177


state 154

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 178


state 155

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 179


state 156

   81 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 81 (function_call_statement)


state 157

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   84 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    $default  reduce using rule 84 (argument_list)


state 158

   34 value: DOUBLE .

    $default  reduce using rule 34 (value)


state 159

   31 value: FLOAT .

    $default  reduce using rule 31 (value)


state 160

   30 value: INTEGER .

    $default  reduce using rule 30 (value)


state 161

   33 value: CHAR_LITERAL .

    $default  reduce using rule 33 (value)


state 162

   32 value: STRING_LITERAL .

    $default  reduce using rule 32 (value)


state 163

   27 var_decl: IDENTIFIER COLON TYPE EQUALS value .

    $default  reduce using rule 27 (var_decl)


state 164

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 180


state 165

   77 param: IDENTIFIER . COLON TYPE

    COLON  shift, and go to state 181


state 166

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   75 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 182
    COMMA        shift, and go to state 183


state 167

   76 param_list: param .

    $default  reduce using rule 76 (param_list)


state 168

   80 function_body: statement .

    $default  reduce using rule 80 (function_body)


state 169

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 184
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 170

   98 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 186


state 171

   95 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 187


state 172

   96 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 188

    POST      reduce using rule 100 (body_block)
    POST      [reduce using rule 102 (body_block)]
    ALWAYS    reduce using rule 100 (body_block)
    ALWAYS    [reduce using rule 102 (body_block)]
    RBRACE    reduce using rule 100 (body_block)
    RBRACE    [reduce using rule 102 (body_block)]
    $default  reduce using rule 100 (body_block)

    body_block  go to state 189


state 173

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 190


state 174

   87 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 87 (for_init)


state 175

   91 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    expression  go to state 191


state 176

   92 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 92 (for_increment)


state 177

   93 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 93 (for_increment)


state 178

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 192


state 179

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 21 (input_statement)


state 180

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 28 (var_decl)


state 181

   77 param: IDENTIFIER COLON . TYPE

    TYPE  shift, and go to state 193


state 182

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 194


state 183

   75 param_list: param_list COMMA . param

    IDENTIFIER  shift, and go to state 165

    param  go to state 195


state 184

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 39 (else_if_clauses)

    else_if_clauses  go to state 196


state 185

   79 function_body: function_body statement .

    $default  reduce using rule 79 (function_body)


state 186

   98 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 197
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 187

   95 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 95 (while_statement)


state 188

  101 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 198


state 189

   96 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 199

    ALWAYS    reduce using rule 103 (post_block)
    ALWAYS    [reduce using rule 105 (post_block)]
    RBRACE    reduce using rule 103 (post_block)
    RBRACE    [reduce using rule 105 (post_block)]
    $default  reduce using rule 103 (post_block)

    post_block  go to state 200


state 190

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 201
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 191

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   91 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 67
    OR_OP               shift, and go to state 68
    AND_OP              shift, and go to state 69
    NOT_EQUAL           shift, and go to state 70
    EQUALS_EQUALS       shift, and go to state 71
    GREATER_THAN_EQUAL  shift, and go to state 72
    GREATER_THAN        shift, and go to state 73
    LESS_THAN_EQUAL     shift, and go to state 74
    LESS_THAN           shift, and go to state 75
    MINUS               shift, and go to state 76
    PLUS                shift, and go to state 77
    MOD                 shift, and go to state 78
    DIV                 shift, and go to state 79
    MULT                shift, and go to state 80

    $default  reduce using rule 91 (for_increment)


state 192

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 202
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 193

   77 param: IDENTIFIER COLON TYPE .

    $default  reduce using rule 77 (param)


state 194

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 203
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 195

   75 param_list: param_list COMMA param .

    $default  reduce using rule 75 (param_list)


state 196

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   40 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 204

    $default  reduce using rule 37 (conditional_statement)


state 197

   79 function_body: function_body . statement
   98 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 205
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 198

  101 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 206
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 199

  104 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 207


state 200

   96 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 208

    RBRACE    reduce using rule 106 (always_block)
    RBRACE    [reduce using rule 108 (always_block)]
    $default  reduce using rule 106 (always_block)

    always_block  go to state 209


state 201

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 210
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 202

   79 function_body: function_body . statement
   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 211
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 203

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 212
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 204

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   40 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 213
    LBRACE  shift, and go to state 214


state 205

   98 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 98 (pre_block)


state 206

   79 function_body: function_body . statement
  101 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 215
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 207

  104 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 216
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 208

  107 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 217


state 209

   96 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 96 (while_body)


state 210

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 73 (function_declaration)


state 211

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 85 (for_statement)


state 212

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 72 (function_declaration)


state 213

   40 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 218


state 214

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 219
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 215

  101 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 101 (body_block)


state 216

   79 function_body: function_body . statement
  104 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 220
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 217

  107 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 221
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 218

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    DOUBLE          shift, and go to state 38
    FLOAT           shift, and go to state 39
    INTEGER         shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    STRING_LITERAL  shift, and go to state 42
    IDENTIFIER      shift, and go to state 43

    condition   go to state 222
    expression  go to state 84


state 219

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 223
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 220

  104 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 104 (post_block)


state 221

   79 function_body: function_body . statement
  107 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 224
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 222

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 225


state 223

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 38 (conditional_statement)


state 224

  107 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 107 (always_block)


state 225

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 226


state 226

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                go to state 168
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 227
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 227

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 228
    IDENTIFIER  shift, and go to state 15

    statement                go to state 185
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 228

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 40 (else_if_clauses)
