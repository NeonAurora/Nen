Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT


Rules useless in parser due to conflicts

   96 pre_block: /* empty */

   99 body_block: /* empty */

  102 post_block: /* empty */

  105 always_block: /* empty */


State 59 conflicts: 14 shift/reduce
State 139 conflicts: 11 shift/reduce
State 142 conflicts: 1 reduce/reduce
State 143 conflicts: 1 reduce/reduce
State 144 conflicts: 1 reduce/reduce
State 145 conflicts: 1 reduce/reduce
State 146 conflicts: 4 reduce/reduce
State 169 conflicts: 3 reduce/reduce
State 183 conflicts: 11 shift/reduce
State 186 conflicts: 2 reduce/reduce
State 187 conflicts: 11 shift/reduce
State 189 conflicts: 11 shift/reduce
State 191 conflicts: 11 shift/reduce
State 195 conflicts: 11 shift/reduce
State 197 conflicts: 1 reduce/reduce
State 204 conflicts: 11 shift/reduce
State 211 conflicts: 11 shift/reduce
State 214 conflicts: 11 shift/reduce
State 223 conflicts: 11 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement
    3        | end_of_the_line

    4 statement: import_statement
    5          | print_statement
    6          | input_statement
    7          | var_declaration
    8          | assignment_statement
    9          | function_declaration
   10          | return_statement
   11          | conditional_statement
   12          | for_statement
   13          | while_statement
   14          | break_statement
   15          | increment_statement
   16          | decrement_statement
   17          | function_call_statement

   18 import_statement: IMPORT PATH

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   22 var_declaration: VAR var_declaration_list SEMICOLON

   23 var_declaration_list: var_decl
   24                     | var_declaration_list COMMA var_decl

   25 var_decl: IDENTIFIER
   26         | IDENTIFIER COLON TYPE
   27         | IDENTIFIER COLON TYPE EQUALS value
   28         | IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET
   29         | IDENTIFIER EQUALS INTEGER

   30 value: INTEGER
   31      | FLOAT
   32      | STRING_LITERAL
   33      | CHAR_LITERAL
   34      | DOUBLE

   35 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON

   36 return_statement: RETURN expression SEMICOLON

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   39 else_if_clauses: /* empty */
   40                | else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

   41 condition: expression EQUALS_EQUALS expression
   42          | expression NOT_EQUAL expression
   43          | expression LESS_THAN expression
   44          | expression LESS_THAN_EQUAL expression
   45          | expression GREATER_THAN expression
   46          | expression GREATER_THAN_EQUAL expression

   47 expression: INTEGER
   48           | STRING_LITERAL
   49           | IDENTIFIER
   50           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   51           | expression EQUALS expression
   52           | expression OR_OP expression
   53           | expression AND_OP expression
   54           | expression EQUALS_EQUALS expression
   55           | expression NOT_EQUAL expression
   56           | expression LESS_THAN expression
   57           | expression LESS_THAN_EQUAL expression
   58           | expression GREATER_THAN expression
   59           | expression GREATER_THAN_EQUAL expression
   60           | expression PLUS expression
   61           | expression MINUS expression
   62           | expression MULT expression
   63           | expression DIV expression
   64           | expression MOD expression
   65           | NOT_OP expression
   66           | OPEN_PAREN expression CLOSE_PAREN
   67           | IDENTIFIER INCREMENT
   68           | IDENTIFIER DECREMENT

   69 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   70                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   71 param_list: /* empty */
   72           | param_list COMMA param
   73           | param

   74 param: IDENTIFIER COLON TYPE

   75 function_body: /* empty */
   76              | function_body statement
   77              | statement

   78 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   79 argument_list: /* empty */
   80              | expression
   81              | argument_list COMMA expression

   82 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   83 for_init: var_declaration
   84         | IDENTIFIER EQUALS expression SEMICOLON
   85         | SEMICOLON

   86 for_condition: condition SEMICOLON
   87              | SEMICOLON

   88 for_increment: IDENTIFIER EQUALS expression
   89              | IDENTIFIER INCREMENT
   90              | IDENTIFIER DECREMENT
   91              | /* empty */

   92 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

   93 while_body: pre_block body_block post_block always_block

   94 pre_block: /* empty */
   95          | PRE LBRACE function_body RBRACE
   96          | /* empty */

   97 body_block: /* empty */
   98           | BODY LBRACE function_body RBRACE
   99           | /* empty */

  100 post_block: /* empty */
  101           | POST LBRACE function_body RBRACE
  102           | /* empty */

  103 always_block: /* empty */
  104             | ALWAYS LBRACE function_body RBRACE
  105             | /* empty */

  106 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  107 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  108 break_statement: BREAK SEMICOLON

  109 end_of_the_line: END


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 27 29 35 51 84 88
OR_OP (259) 52
AND_OP (260) 53
NOT_EQUAL (261) 42 55
EQUALS_EQUALS (262) 41 54
GREATER_THAN_EQUAL (263) 46 59
GREATER_THAN (264) 45 58 92
LESS_THAN_EQUAL (265) 44 57
LESS_THAN (266) 43 56 92
MINUS (267) 61
PLUS (268) 60
MOD (269) 64
DIV (270) 63
MULT (271) 62
IMPORT (272) 18
PRINT (273) 19 20
VAR (274) 22
RETURN (275) 36
FUNCTION (276) 69 70
IF (277) 37 38 40
ELSE (278) 38 40
WHILE (279) 92
MAIN (280) 70
END_PROGRAM (281)
FOR (282) 82
PRE (283) 95
POST (284) 101
BODY (285) 98
ALWAYS (286) 104
BREAK (287) 108
INPUT_OP (288) 21
NOT_OP (289) 65
INCREMENT (290) 67 89 106
DECREMENT (291) 68 90 107
OPEN_PAREN (292) 19 20 21 37 38 40 50 66 69 70 78 82
CLOSE_PAREN (293) 19 20 21 37 38 40 50 66 69 70 78 82
LBRACKET (294) 28
RBRACKET (295) 28
LBRACE (296) 37 38 40 69 70 82 92 95 98 101 104
RBRACE (297) 37 38 40 69 70 82 92 95 98 101 104
SEMICOLON (298) 19 20 21 22 35 36 78 84 85 86 87 106 107 108
COMMA (299) 24 72 81
INVERTED_COMMA (300)
DOUBLE_QUOTE (301)
COLON (302) 26 27 28 69 70 74
BODY_START (303)
BODY_END (304)
DOUBLE (305) 34
FLOAT (306) 31
INTEGER (307) 28 29 30 47
CHAR_LITERAL (308) 33
STRING_LITERAL (309) 19 21 32 48
IDENTIFIER (310) 20 21 25 26 27 28 29 35 49 50 67 68 69 74 78 84 88
    89 90 106 107
PATH (311) 18
TYPE (312) 26 27 28 69 70 74
SINGLE_LINE_COMMENT_START (313)
MULTI_LINE_COMMENT_START (314)
MULTI_LINE_COMMENT_END (315)
ARRAY_INIT (316)
END (317) 109


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
program (64)
    on left: 1 2 3, on right: 0 2
statement (65)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 76 77
import_statement (66)
    on left: 18, on right: 4
print_statement (67)
    on left: 19 20, on right: 5
input_statement (68)
    on left: 21, on right: 6
var_declaration (69)
    on left: 22, on right: 7 83
var_declaration_list (70)
    on left: 23 24, on right: 22 24
var_decl (71)
    on left: 25 26 27 28 29, on right: 23 24
value (72)
    on left: 30 31 32 33 34, on right: 27
assignment_statement (73)
    on left: 35, on right: 8
return_statement (74)
    on left: 36, on right: 10
conditional_statement (75)
    on left: 37 38, on right: 11
else_if_clauses (76)
    on left: 39 40, on right: 37 38 40
condition (77)
    on left: 41 42 43 44 45 46, on right: 37 38 40 86 92
expression (78)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68, on right: 35 36 41 42 43 44 45 46 51 52 53 54 55 56
    57 58 59 60 61 62 63 64 65 66 80 81 84 88
function_declaration (79)
    on left: 69 70, on right: 9
param_list (80)
    on left: 71 72 73, on right: 69 72
param (81)
    on left: 74, on right: 72 73
function_body (82)
    on left: 75 76 77, on right: 37 38 40 69 70 76 82 95 98 101 104
function_call_statement (83)
    on left: 78, on right: 17
argument_list (84)
    on left: 79 80 81, on right: 50 78 81
for_statement (85)
    on left: 82, on right: 12
for_init (86)
    on left: 83 84 85, on right: 82
for_condition (87)
    on left: 86 87, on right: 82
for_increment (88)
    on left: 88 89 90 91, on right: 82
while_statement (89)
    on left: 92, on right: 13
while_body (90)
    on left: 93, on right: 92
pre_block (91)
    on left: 94 95 96, on right: 93
body_block (92)
    on left: 97 98 99, on right: 93
post_block (93)
    on left: 100 101 102, on right: 93
always_block (94)
    on left: 103 104 105, on right: 93
increment_statement (95)
    on left: 106, on right: 15
decrement_statement (96)
    on left: 107, on right: 16
break_statement (97)
    on left: 108, on right: 14
end_of_the_line (98)
    on left: 109, on right: 3


state 0

    0 $accept: . program $end

    END  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program          go to state 2
    end_of_the_line  go to state 3


state 1

  109 end_of_the_line: END .

    $default  reduce using rule 109 (end_of_the_line)


state 2

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 4
    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    statement                go to state 16
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 3

    3 program: end_of_the_line .

    $default  reduce using rule 3 (program)


state 4

    0 $accept: program $end .

    $default  accept


state 5

   18 import_statement: IMPORT . PATH

    PATH  shift, and go to state 31


state 6

   19 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT . OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 32


state 7

   22 var_declaration: VAR . var_declaration_list SEMICOLON

    IDENTIFIER  shift, and go to state 33

    var_declaration_list  go to state 34
    var_decl              go to state 35


state 8

   36 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 41


state 9

   69 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 42


state 10

   37 conditional_statement: IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 43


state 11

   92 while_statement: WHILE . LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 44


state 12

   70 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 45


state 13

   82 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 46


state 14

  108 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 47


state 15

   21 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   35 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   78 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  106 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  107 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 48
    INPUT_OP    shift, and go to state 49
    INCREMENT   shift, and go to state 50
    DECREMENT   shift, and go to state 51
    OPEN_PAREN  shift, and go to state 52


state 16

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 17

    4 statement: import_statement .

    $default  reduce using rule 4 (statement)


state 18

    5 statement: print_statement .

    $default  reduce using rule 5 (statement)


state 19

    6 statement: input_statement .

    $default  reduce using rule 6 (statement)


state 20

    7 statement: var_declaration .

    $default  reduce using rule 7 (statement)


state 21

    8 statement: assignment_statement .

    $default  reduce using rule 8 (statement)


state 22

   10 statement: return_statement .

    $default  reduce using rule 10 (statement)


state 23

   11 statement: conditional_statement .

    $default  reduce using rule 11 (statement)


state 24

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 25

   17 statement: function_call_statement .

    $default  reduce using rule 17 (statement)


state 26

   12 statement: for_statement .

    $default  reduce using rule 12 (statement)


state 27

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


state 28

   15 statement: increment_statement .

    $default  reduce using rule 15 (statement)


state 29

   16 statement: decrement_statement .

    $default  reduce using rule 16 (statement)


state 30

   14 statement: break_statement .

    $default  reduce using rule 14 (statement)


state 31

   18 import_statement: IMPORT PATH .

    $default  reduce using rule 18 (import_statement)


state 32

   19 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN . IDENTIFIER CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 53
    IDENTIFIER      shift, and go to state 54


state 33

   25 var_decl: IDENTIFIER .
   26         | IDENTIFIER . COLON TYPE
   27         | IDENTIFIER . COLON TYPE EQUALS value
   28         | IDENTIFIER . COLON TYPE LBRACKET INTEGER RBRACKET
   29         | IDENTIFIER . EQUALS INTEGER

    EQUALS  shift, and go to state 55
    COLON   shift, and go to state 56

    $default  reduce using rule 25 (var_decl)


state 34

   22 var_declaration: VAR var_declaration_list . SEMICOLON
   24 var_declaration_list: var_declaration_list . COMMA var_decl

    SEMICOLON  shift, and go to state 57
    COMMA      shift, and go to state 58


state 35

   23 var_declaration_list: var_decl .

    $default  reduce using rule 23 (var_declaration_list)


state 36

   65 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 59


state 37

   66 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 60


state 38

   47 expression: INTEGER .

    $default  reduce using rule 47 (expression)


state 39

   48 expression: STRING_LITERAL .

    $default  reduce using rule 48 (expression)


state 40

   49 expression: IDENTIFIER .
   50           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   67           | IDENTIFIER . INCREMENT
   68           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 61
    DECREMENT   shift, and go to state 62
    OPEN_PAREN  shift, and go to state 63

    $default  reduce using rule 49 (expression)


state 41

   36 return_statement: RETURN expression . SEMICOLON
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77
    SEMICOLON           shift, and go to state 78


state 42

   69 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 79


state 43

   37 conditional_statement: IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    condition   go to state 80
    expression  go to state 81


state 44

   92 while_statement: WHILE LESS_THAN . condition GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    condition   go to state 82
    expression  go to state 81


state 45

   70 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 83


state 46

   82 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 7
    SEMICOLON   shift, and go to state 84
    IDENTIFIER  shift, and go to state 85

    var_declaration  go to state 86
    for_init         go to state 87


state 47

  108 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 108 (break_statement)


state 48

   35 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 88


state 49

   21 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 89


state 50

  106 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 90


state 51

  107 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 91


state 52

   78 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    $default  reduce using rule 79 (argument_list)

    expression     go to state 92
    argument_list  go to state 93


state 53

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 94


state 54

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 95


state 55

   29 var_decl: IDENTIFIER EQUALS . INTEGER

    INTEGER  shift, and go to state 96


state 56

   26 var_decl: IDENTIFIER COLON . TYPE
   27         | IDENTIFIER COLON . TYPE EQUALS value
   28         | IDENTIFIER COLON . TYPE LBRACKET INTEGER RBRACKET

    TYPE  shift, and go to state 97


state 57

   22 var_declaration: VAR var_declaration_list SEMICOLON .

    $default  reduce using rule 22 (var_declaration)


state 58

   24 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 33

    var_decl  go to state 98


state 59

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression
   65           | NOT_OP expression .

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    EQUALS              [reduce using rule 65 (expression)]
    OR_OP               [reduce using rule 65 (expression)]
    AND_OP              [reduce using rule 65 (expression)]
    NOT_EQUAL           [reduce using rule 65 (expression)]
    EQUALS_EQUALS       [reduce using rule 65 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 65 (expression)]
    GREATER_THAN        [reduce using rule 65 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 65 (expression)]
    LESS_THAN           [reduce using rule 65 (expression)]
    MINUS               [reduce using rule 65 (expression)]
    PLUS                [reduce using rule 65 (expression)]
    MOD                 [reduce using rule 65 (expression)]
    DIV                 [reduce using rule 65 (expression)]
    MULT                [reduce using rule 65 (expression)]
    $default            reduce using rule 65 (expression)


state 60

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression
   66           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77
    CLOSE_PAREN         shift, and go to state 99


state 61

   67 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 67 (expression)


state 62

   68 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 68 (expression)


state 63

   50 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    $default  reduce using rule 79 (argument_list)

    expression     go to state 92
    argument_list  go to state 100


state 64

   51 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 101


state 65

   52 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 102


state 66

   53 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 103


state 67

   55 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 104


state 68

   54 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 105


state 69

   59 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 106


state 70

   58 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 107


state 71

   57 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 108


state 72

   56 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 109


state 73

   61 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 110


state 74

   60 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 111


state 75

   64 expression: expression MOD . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 112


state 76

   63 expression: expression DIV . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 113


state 77

   62 expression: expression MULT . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 114


state 78

   36 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 36 (return_statement)


state 79

   69 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 115


state 80

   37 conditional_statement: IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 116


state 81

   41 condition: expression . EQUALS_EQUALS expression
   42          | expression . NOT_EQUAL expression
   43          | expression . LESS_THAN expression
   44          | expression . LESS_THAN_EQUAL expression
   45          | expression . GREATER_THAN expression
   46          | expression . GREATER_THAN_EQUAL expression
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 117
    EQUALS_EQUALS       shift, and go to state 118
    GREATER_THAN_EQUAL  shift, and go to state 119
    GREATER_THAN        shift, and go to state 120
    LESS_THAN_EQUAL     shift, and go to state 121
    LESS_THAN           shift, and go to state 122
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77


state 82

   92 while_statement: WHILE LESS_THAN condition . GREATER_THAN LBRACE while_body RBRACE

    GREATER_THAN  shift, and go to state 123


state 83

   70 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 124


state 84

   85 for_init: SEMICOLON .

    $default  reduce using rule 85 (for_init)


state 85

   84 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 125


state 86

   83 for_init: var_declaration .

    $default  reduce using rule 83 (for_init)


state 87

   82 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    SEMICOLON       shift, and go to state 126
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    condition      go to state 127
    expression     go to state 81
    for_condition  go to state 128


state 88

   35 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77
    SEMICOLON           shift, and go to state 129


state 89

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 130


state 90

  106 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 106 (increment_statement)


state 91

  107 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 107 (decrement_statement)


state 92

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression
   80 argument_list: expression .

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    $default  reduce using rule 80 (argument_list)


state 93

   78 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   81 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 131
    COMMA        shift, and go to state 132


state 94

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 133


state 95

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 134


state 96

   29 var_decl: IDENTIFIER EQUALS INTEGER .

    $default  reduce using rule 29 (var_decl)


state 97

   26 var_decl: IDENTIFIER COLON TYPE .
   27         | IDENTIFIER COLON TYPE . EQUALS value
   28         | IDENTIFIER COLON TYPE . LBRACKET INTEGER RBRACKET

    EQUALS    shift, and go to state 135
    LBRACKET  shift, and go to state 136

    $default  reduce using rule 26 (var_decl)


state 98

   24 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 24 (var_declaration_list)


state 99

   66 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 66 (expression)


state 100

   50 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   81 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 137
    COMMA        shift, and go to state 132


state 101

   51 expression: expression . EQUALS expression
   51           | expression EQUALS expression .
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    $default  reduce using rule 51 (expression)


state 102

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   52           | expression OR_OP expression .
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    $default  reduce using rule 52 (expression)


state 103

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   53           | expression AND_OP expression .
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    $default  reduce using rule 53 (expression)


state 104

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   55           | expression NOT_EQUAL expression .
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    $default  reduce using rule 55 (expression)


state 105

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   54           | expression EQUALS_EQUALS expression .
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    $default  reduce using rule 54 (expression)


state 106

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   59           | expression GREATER_THAN_EQUAL expression .
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MINUS  shift, and go to state 73
    PLUS   shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76
    MULT   shift, and go to state 77

    $default  reduce using rule 59 (expression)


state 107

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   58           | expression GREATER_THAN expression .
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MINUS  shift, and go to state 73
    PLUS   shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76
    MULT   shift, and go to state 77

    $default  reduce using rule 58 (expression)


state 108

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   57           | expression LESS_THAN_EQUAL expression .
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MINUS  shift, and go to state 73
    PLUS   shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76
    MULT   shift, and go to state 77

    $default  reduce using rule 57 (expression)


state 109

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   56           | expression LESS_THAN expression .
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MINUS  shift, and go to state 73
    PLUS   shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76
    MULT   shift, and go to state 77

    $default  reduce using rule 56 (expression)


state 110

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   61           | expression MINUS expression .
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MOD   shift, and go to state 75
    DIV   shift, and go to state 76
    MULT  shift, and go to state 77

    $default  reduce using rule 61 (expression)


state 111

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   60           | expression PLUS expression .
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MOD   shift, and go to state 75
    DIV   shift, and go to state 76
    MULT  shift, and go to state 77

    $default  reduce using rule 60 (expression)


state 112

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression
   64           | expression MOD expression .

    $default  reduce using rule 64 (expression)


state 113

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   63           | expression DIV expression .
   64           | expression . MOD expression

    $default  reduce using rule 63 (expression)


state 114

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   62           | expression MULT expression .
   63           | expression . DIV expression
   64           | expression . MOD expression

    $default  reduce using rule 62 (expression)


state 115

   69 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 138


state 116

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 139


state 117

   42 condition: expression NOT_EQUAL . expression
   55 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 140


state 118

   41 condition: expression EQUALS_EQUALS . expression
   54 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 141


state 119

   46 condition: expression GREATER_THAN_EQUAL . expression
   59 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 142


state 120

   45 condition: expression GREATER_THAN . expression
   58 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 143


state 121

   44 condition: expression LESS_THAN_EQUAL . expression
   57 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 144


state 122

   43 condition: expression LESS_THAN . expression
   56 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 145


state 123

   92 while_statement: WHILE LESS_THAN condition GREATER_THAN . LBRACE while_body RBRACE

    LBRACE  shift, and go to state 146


state 124

   70 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 147


state 125

   84 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 148


state 126

   87 for_condition: SEMICOLON .

    $default  reduce using rule 87 (for_condition)


state 127

   86 for_condition: condition . SEMICOLON

    SEMICOLON  shift, and go to state 149


state 128

   82 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 150

    $default  reduce using rule 91 (for_increment)

    for_increment  go to state 151


state 129

   35 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 35 (assignment_statement)


state 130

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 152


state 131

   78 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 153


state 132

   81 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 154


state 133

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 19 (print_statement)


state 134

   20 print_statement: PRINT OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 20 (print_statement)


state 135

   27 var_decl: IDENTIFIER COLON TYPE EQUALS . value

    DOUBLE          shift, and go to state 155
    FLOAT           shift, and go to state 156
    INTEGER         shift, and go to state 157
    CHAR_LITERAL    shift, and go to state 158
    STRING_LITERAL  shift, and go to state 159

    value  go to state 160


state 136

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 161


state 137

   50 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 50 (expression)


state 138

   69 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 162

    $default  reduce using rule 71 (param_list)

    param_list  go to state 163
    param       go to state 164


state 139

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 166
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 140

   42 condition: expression NOT_EQUAL expression .
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   55           | expression NOT_EQUAL expression .
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    CLOSE_PAREN  reduce using rule 42 (condition)
    SEMICOLON    reduce using rule 42 (condition)
    $default     reduce using rule 55 (expression)


state 141

   41 condition: expression EQUALS_EQUALS expression .
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   54           | expression EQUALS_EQUALS expression .
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    CLOSE_PAREN  reduce using rule 41 (condition)
    SEMICOLON    reduce using rule 41 (condition)
    $default     reduce using rule 54 (expression)


state 142

   46 condition: expression GREATER_THAN_EQUAL expression .
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   59           | expression GREATER_THAN_EQUAL expression .
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MINUS  shift, and go to state 73
    PLUS   shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76
    MULT   shift, and go to state 77

    GREATER_THAN  reduce using rule 46 (condition)
    GREATER_THAN  [reduce using rule 59 (expression)]
    CLOSE_PAREN   reduce using rule 46 (condition)
    SEMICOLON     reduce using rule 46 (condition)
    $default      reduce using rule 59 (expression)


state 143

   45 condition: expression GREATER_THAN expression .
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   58           | expression GREATER_THAN expression .
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MINUS  shift, and go to state 73
    PLUS   shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76
    MULT   shift, and go to state 77

    GREATER_THAN  reduce using rule 45 (condition)
    GREATER_THAN  [reduce using rule 58 (expression)]
    CLOSE_PAREN   reduce using rule 45 (condition)
    SEMICOLON     reduce using rule 45 (condition)
    $default      reduce using rule 58 (expression)


state 144

   44 condition: expression LESS_THAN_EQUAL expression .
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   57           | expression LESS_THAN_EQUAL expression .
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MINUS  shift, and go to state 73
    PLUS   shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76
    MULT   shift, and go to state 77

    GREATER_THAN  reduce using rule 44 (condition)
    GREATER_THAN  [reduce using rule 57 (expression)]
    CLOSE_PAREN   reduce using rule 44 (condition)
    SEMICOLON     reduce using rule 44 (condition)
    $default      reduce using rule 57 (expression)


state 145

   43 condition: expression LESS_THAN expression .
   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   56           | expression LESS_THAN expression .
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression

    MINUS  shift, and go to state 73
    PLUS   shift, and go to state 74
    MOD    shift, and go to state 75
    DIV    shift, and go to state 76
    MULT   shift, and go to state 77

    GREATER_THAN  reduce using rule 43 (condition)
    GREATER_THAN  [reduce using rule 56 (expression)]
    CLOSE_PAREN   reduce using rule 43 (condition)
    SEMICOLON     reduce using rule 43 (condition)
    $default      reduce using rule 56 (expression)


state 146

   92 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 167

    POST      reduce using rule 94 (pre_block)
    POST      [reduce using rule 96 (pre_block)]
    BODY      reduce using rule 94 (pre_block)
    BODY      [reduce using rule 96 (pre_block)]
    ALWAYS    reduce using rule 94 (pre_block)
    ALWAYS    [reduce using rule 96 (pre_block)]
    RBRACE    reduce using rule 94 (pre_block)
    RBRACE    [reduce using rule 96 (pre_block)]
    $default  reduce using rule 94 (pre_block)

    while_body  go to state 168
    pre_block   go to state 169


state 147

   70 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 170


state 148

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression
   84 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77
    SEMICOLON           shift, and go to state 171


state 149

   86 for_condition: condition SEMICOLON .

    $default  reduce using rule 86 (for_condition)


state 150

   88 for_increment: IDENTIFIER . EQUALS expression
   89              | IDENTIFIER . INCREMENT
   90              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 172
    INCREMENT  shift, and go to state 173
    DECREMENT  shift, and go to state 174


state 151

   82 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 175


state 152

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 176


state 153

   78 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 78 (function_call_statement)


state 154

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression
   81 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    $default  reduce using rule 81 (argument_list)


state 155

   34 value: DOUBLE .

    $default  reduce using rule 34 (value)


state 156

   31 value: FLOAT .

    $default  reduce using rule 31 (value)


state 157

   30 value: INTEGER .

    $default  reduce using rule 30 (value)


state 158

   33 value: CHAR_LITERAL .

    $default  reduce using rule 33 (value)


state 159

   32 value: STRING_LITERAL .

    $default  reduce using rule 32 (value)


state 160

   27 var_decl: IDENTIFIER COLON TYPE EQUALS value .

    $default  reduce using rule 27 (var_decl)


state 161

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 177


state 162

   74 param: IDENTIFIER . COLON TYPE

    COLON  shift, and go to state 178


state 163

   69 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   72 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 179
    COMMA        shift, and go to state 180


state 164

   73 param_list: param .

    $default  reduce using rule 73 (param_list)


state 165

   77 function_body: statement .

    $default  reduce using rule 77 (function_body)


state 166

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   76 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 181
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 167

   95 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 183


state 168

   92 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 184


state 169

   93 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 185

    POST      reduce using rule 97 (body_block)
    POST      [reduce using rule 99 (body_block)]
    ALWAYS    reduce using rule 97 (body_block)
    ALWAYS    [reduce using rule 99 (body_block)]
    RBRACE    reduce using rule 97 (body_block)
    RBRACE    [reduce using rule 99 (body_block)]
    $default  reduce using rule 97 (body_block)

    body_block  go to state 186


state 170

   70 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 187


state 171

   84 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 84 (for_init)


state 172

   88 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    expression  go to state 188


state 173

   89 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 89 (for_increment)


state 174

   90 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 90 (for_increment)


state 175

   82 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 189


state 176

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 21 (input_statement)


state 177

   28 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 28 (var_decl)


state 178

   74 param: IDENTIFIER COLON . TYPE

    TYPE  shift, and go to state 190


state 179

   69 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 191


state 180

   72 param_list: param_list COMMA . param

    IDENTIFIER  shift, and go to state 162

    param  go to state 192


state 181

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 39 (else_if_clauses)

    else_if_clauses  go to state 193


state 182

   76 function_body: function_body statement .

    $default  reduce using rule 76 (function_body)


state 183

   95 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 194
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 184

   92 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 92 (while_statement)


state 185

   98 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 195


state 186

   93 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 196

    ALWAYS    reduce using rule 100 (post_block)
    ALWAYS    [reduce using rule 102 (post_block)]
    RBRACE    reduce using rule 100 (post_block)
    RBRACE    [reduce using rule 102 (post_block)]
    $default  reduce using rule 100 (post_block)

    post_block  go to state 197


state 187

   70 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 198
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 188

   51 expression: expression . EQUALS expression
   52           | expression . OR_OP expression
   53           | expression . AND_OP expression
   54           | expression . EQUALS_EQUALS expression
   55           | expression . NOT_EQUAL expression
   56           | expression . LESS_THAN expression
   57           | expression . LESS_THAN_EQUAL expression
   58           | expression . GREATER_THAN expression
   59           | expression . GREATER_THAN_EQUAL expression
   60           | expression . PLUS expression
   61           | expression . MINUS expression
   62           | expression . MULT expression
   63           | expression . DIV expression
   64           | expression . MOD expression
   88 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 64
    OR_OP               shift, and go to state 65
    AND_OP              shift, and go to state 66
    NOT_EQUAL           shift, and go to state 67
    EQUALS_EQUALS       shift, and go to state 68
    GREATER_THAN_EQUAL  shift, and go to state 69
    GREATER_THAN        shift, and go to state 70
    LESS_THAN_EQUAL     shift, and go to state 71
    LESS_THAN           shift, and go to state 72
    MINUS               shift, and go to state 73
    PLUS                shift, and go to state 74
    MOD                 shift, and go to state 75
    DIV                 shift, and go to state 76
    MULT                shift, and go to state 77

    $default  reduce using rule 88 (for_increment)


state 189

   82 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 199
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 190

   74 param: IDENTIFIER COLON TYPE .

    $default  reduce using rule 74 (param)


state 191

   69 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 200
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 192

   72 param_list: param_list COMMA param .

    $default  reduce using rule 72 (param_list)


state 193

   37 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   38                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   40 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 201

    $default  reduce using rule 37 (conditional_statement)


state 194

   76 function_body: function_body . statement
   95 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 202
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 195

   98 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 203
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 196

  101 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 204


state 197

   93 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 205

    RBRACE    reduce using rule 103 (always_block)
    RBRACE    [reduce using rule 105 (always_block)]
    $default  reduce using rule 103 (always_block)

    always_block  go to state 206


state 198

   70 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   76 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 207
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 199

   76 function_body: function_body . statement
   82 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 208
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 200

   69 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   76 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 209
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 201

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   40 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 210
    LBRACE  shift, and go to state 211


state 202

   95 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 95 (pre_block)


state 203

   76 function_body: function_body . statement
   98 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 212
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 204

  101 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 213
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 205

  104 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 214


state 206

   93 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 93 (while_body)


state 207

   70 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 70 (function_declaration)


state 208

   82 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 82 (for_statement)


state 209

   69 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 69 (function_declaration)


state 210

   40 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 215


state 211

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 216
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 212

   98 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 98 (body_block)


state 213

   76 function_body: function_body . statement
  101 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 217
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 214

  104 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 218
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 215

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 36
    OPEN_PAREN      shift, and go to state 37
    INTEGER         shift, and go to state 38
    STRING_LITERAL  shift, and go to state 39
    IDENTIFIER      shift, and go to state 40

    condition   go to state 219
    expression  go to state 81


state 216

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   76 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 220
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 217

  101 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 101 (post_block)


state 218

   76 function_body: function_body . statement
  104 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 221
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 219

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 222


state 220

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 38 (conditional_statement)


state 221

  104 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 104 (always_block)


state 222

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 223


state 223

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 75 (function_body)]
    PRINT       [reduce using rule 75 (function_body)]
    VAR         [reduce using rule 75 (function_body)]
    RETURN      [reduce using rule 75 (function_body)]
    FUNCTION    [reduce using rule 75 (function_body)]
    IF          [reduce using rule 75 (function_body)]
    WHILE       [reduce using rule 75 (function_body)]
    MAIN        [reduce using rule 75 (function_body)]
    FOR         [reduce using rule 75 (function_body)]
    BREAK       [reduce using rule 75 (function_body)]
    IDENTIFIER  [reduce using rule 75 (function_body)]
    $default    reduce using rule 75 (function_body)

    statement                go to state 165
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_body            go to state 224
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 224

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE
   76 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 225
    IDENTIFIER  shift, and go to state 15

    statement                go to state 182
    import_statement         go to state 17
    print_statement          go to state 18
    input_statement          go to state 19
    var_declaration          go to state 20
    assignment_statement     go to state 21
    return_statement         go to state 22
    conditional_statement    go to state 23
    function_declaration     go to state 24
    function_call_statement  go to state 25
    for_statement            go to state 26
    while_statement          go to state 27
    increment_statement      go to state 28
    decrement_statement      go to state 29
    break_statement          go to state 30


state 225

   40 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 40 (else_if_clauses)
