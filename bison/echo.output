Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT


Rules useless in parser due to conflicts

  101 pre_block: /* empty */

  104 body_block: /* empty */

  107 post_block: /* empty */

  110 always_block: /* empty */


State 59 conflicts: 1 shift/reduce
State 64 conflicts: 14 shift/reduce
State 149 conflicts: 11 shift/reduce
State 152 conflicts: 1 reduce/reduce
State 153 conflicts: 1 reduce/reduce
State 154 conflicts: 1 reduce/reduce
State 155 conflicts: 1 reduce/reduce
State 156 conflicts: 4 reduce/reduce
State 174 conflicts: 3 reduce/reduce
State 188 conflicts: 11 shift/reduce
State 191 conflicts: 2 reduce/reduce
State 192 conflicts: 11 shift/reduce
State 194 conflicts: 11 shift/reduce
State 196 conflicts: 11 shift/reduce
State 200 conflicts: 11 shift/reduce
State 202 conflicts: 1 reduce/reduce
State 209 conflicts: 11 shift/reduce
State 216 conflicts: 11 shift/reduce
State 219 conflicts: 11 shift/reduce
State 228 conflicts: 11 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement
    3        | end_of_the_line

    4 statement: import_statement
    5          | print_statement
    6          | input_statement
    7          | var_declaration
    8          | assignment_statement
    9          | function_declaration
   10          | return_statement
   11          | conditional_statement
   12          | for_statement
   13          | while_statement
   14          | break_statement
   15          | increment_statement
   16          | decrement_statement
   17          | function_call_statement

   18 import_statement: IMPORT PATH

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN expression CLOSE_PAREN SEMICOLON

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   22 var_declaration: var_declaration_without_semicolon SEMICOLON

   23 var_declaration_without_semicolon: VAR var_declaration_list

   24 var_declaration_list: var_decl
   25                     | var_declaration_list COMMA var_decl

   26 var_decl: IDENTIFIER
   27         | IDENTIFIER COLON TYPE
   28         | IDENTIFIER COLON TYPE EQUALS value
   29         | IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET
   30         | IDENTIFIER EQUALS value

   31 value: INTEGER
   32      | FLOAT
   33      | STRING_LITERAL
   34      | CHAR_LITERAL
   35      | DOUBLE

   36 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON

   37 return_statement: RETURN expression SEMICOLON

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   39                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   40 else_if_clauses: /* empty */
   41                | else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

   42 condition: expression EQUALS_EQUALS expression
   43          | expression NOT_EQUAL expression
   44          | expression LESS_THAN expression
   45          | expression LESS_THAN_EQUAL expression
   46          | expression GREATER_THAN expression
   47          | expression GREATER_THAN_EQUAL expression

   48 expression: INTEGER
   49           | FLOAT
   50           | STRING_LITERAL
   51           | CHAR_LITERAL
   52           | DOUBLE
   53           | BOOL
   54           | IDENTIFIER
   55           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   56           | expression EQUALS expression
   57           | expression OR_OP expression
   58           | expression AND_OP expression
   59           | expression EQUALS_EQUALS expression
   60           | expression NOT_EQUAL expression
   61           | expression LESS_THAN expression
   62           | expression LESS_THAN_EQUAL expression
   63           | expression GREATER_THAN expression
   64           | expression GREATER_THAN_EQUAL expression
   65           | expression PLUS expression
   66           | expression MINUS expression
   67           | expression MULT expression
   68           | expression DIV expression
   69           | expression MOD expression
   70           | NOT_OP expression
   71           | OPEN_PAREN expression CLOSE_PAREN
   72           | IDENTIFIER INCREMENT
   73           | IDENTIFIER DECREMENT

   74 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   75                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   76 param_list: /* empty */
   77           | param_list COMMA param
   78           | param

   79 param: LESS_THAN var_declaration_without_semicolon GREATER_THAN

   80 function_body: /* empty */
   81              | function_body statement
   82              | statement

   83 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   84 argument_list: /* empty */
   85              | expression
   86              | argument_list COMMA expression

   87 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   88 for_init: var_declaration
   89         | IDENTIFIER EQUALS expression SEMICOLON
   90         | SEMICOLON

   91 for_condition: condition SEMICOLON
   92              | SEMICOLON

   93 for_increment: IDENTIFIER EQUALS expression
   94              | IDENTIFIER INCREMENT
   95              | IDENTIFIER DECREMENT
   96              | /* empty */

   97 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

   98 while_body: pre_block body_block post_block always_block

   99 pre_block: /* empty */
  100          | PRE LBRACE function_body RBRACE
  101          | /* empty */

  102 body_block: /* empty */
  103           | BODY LBRACE function_body RBRACE
  104           | /* empty */

  105 post_block: /* empty */
  106           | POST LBRACE function_body RBRACE
  107           | /* empty */

  108 always_block: /* empty */
  109             | ALWAYS LBRACE function_body RBRACE
  110             | /* empty */

  111 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  112 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  113 break_statement: BREAK SEMICOLON

  114 end_of_the_line: END


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 28 30 36 56 89 93
OR_OP (259) 57
AND_OP (260) 58
NOT_EQUAL (261) 43 60
EQUALS_EQUALS (262) 42 59
GREATER_THAN_EQUAL (263) 47 64
GREATER_THAN (264) 46 63 79 97
LESS_THAN_EQUAL (265) 45 62
LESS_THAN (266) 44 61 79 97
MINUS (267) 66
PLUS (268) 65
MOD (269) 69
DIV (270) 68
MULT (271) 67
IMPORT (272) 18
PRINT (273) 19 20
VAR (274) 23
RETURN (275) 37
FUNCTION (276) 74 75
IF (277) 38 39 41
ELSE (278) 39 41
WHILE (279) 97
MAIN (280) 75
END_PROGRAM (281)
FOR (282) 87
PRE (283) 100
POST (284) 106
BODY (285) 103
ALWAYS (286) 109
BREAK (287) 113
INPUT_OP (288) 21
NOT_OP (289) 70
INCREMENT (290) 72 94 111
DECREMENT (291) 73 95 112
OPEN_PAREN (292) 19 20 21 38 39 41 55 71 74 75 83 87
CLOSE_PAREN (293) 19 20 21 38 39 41 55 71 74 75 83 87
LBRACKET (294) 29
RBRACKET (295) 29
LBRACE (296) 38 39 41 74 75 87 97 100 103 106 109
RBRACE (297) 38 39 41 74 75 87 97 100 103 106 109
SEMICOLON (298) 19 20 21 22 36 37 83 89 90 91 92 111 112 113
COMMA (299) 25 77 86
INVERTED_COMMA (300)
DOUBLE_QUOTE (301)
COLON (302) 27 28 29 74 75
BODY_START (303)
BODY_END (304)
DOUBLE (305) 35 52
FLOAT (306) 32 49
INTEGER (307) 29 31 48
BOOL (308) 53
CHAR_LITERAL (309) 34 51
STRING_LITERAL (310) 19 21 33 50
IDENTIFIER (311) 21 26 27 28 29 30 36 54 55 72 73 74 83 89 93 94 95
    111 112
PATH (312) 18
TYPE (313) 27 28 29 74 75
SINGLE_LINE_COMMENT_START (314)
MULTI_LINE_COMMENT_START (315)
MULTI_LINE_COMMENT_END (316)
ARRAY_INIT (317)
END (318) 114


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1 2 3, on right: 0 2
statement (66)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 81 82
import_statement (67)
    on left: 18, on right: 4
print_statement (68)
    on left: 19 20, on right: 5
input_statement (69)
    on left: 21, on right: 6
var_declaration (70)
    on left: 22, on right: 7 88
var_declaration_without_semicolon (71)
    on left: 23, on right: 22 79
var_declaration_list (72)
    on left: 24 25, on right: 23 25
var_decl (73)
    on left: 26 27 28 29 30, on right: 24 25
value (74)
    on left: 31 32 33 34 35, on right: 28 30
assignment_statement (75)
    on left: 36, on right: 8
return_statement (76)
    on left: 37, on right: 10
conditional_statement (77)
    on left: 38 39, on right: 11
else_if_clauses (78)
    on left: 40 41, on right: 38 39 41
condition (79)
    on left: 42 43 44 45 46 47, on right: 38 39 41 91 97
expression (80)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73, on right: 20 36 37 42 43 44 45 46 47 56
    57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 85 86 89 93
function_declaration (81)
    on left: 74 75, on right: 9
param_list (82)
    on left: 76 77 78, on right: 74 77
param (83)
    on left: 79, on right: 77 78
function_body (84)
    on left: 80 81 82, on right: 38 39 41 74 75 81 87 100 103 106 109
function_call_statement (85)
    on left: 83, on right: 17
argument_list (86)
    on left: 84 85 86, on right: 55 83 86
for_statement (87)
    on left: 87, on right: 12
for_init (88)
    on left: 88 89 90, on right: 87
for_condition (89)
    on left: 91 92, on right: 87
for_increment (90)
    on left: 93 94 95 96, on right: 87
while_statement (91)
    on left: 97, on right: 13
while_body (92)
    on left: 98, on right: 97
pre_block (93)
    on left: 99 100 101, on right: 98
body_block (94)
    on left: 102 103 104, on right: 98
post_block (95)
    on left: 105 106 107, on right: 98
always_block (96)
    on left: 108 109 110, on right: 98
increment_statement (97)
    on left: 111, on right: 15
decrement_statement (98)
    on left: 112, on right: 16
break_statement (99)
    on left: 113, on right: 14
end_of_the_line (100)
    on left: 114, on right: 3


state 0

    0 $accept: . program $end

    END  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program          go to state 2
    end_of_the_line  go to state 3


state 1

  114 end_of_the_line: END .

    $default  reduce using rule 114 (end_of_the_line)


state 2

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 4
    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 16
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 3

    3 program: end_of_the_line .

    $default  reduce using rule 3 (program)


state 4

    0 $accept: program $end .

    $default  accept


state 5

   18 import_statement: IMPORT . PATH

    PATH  shift, and go to state 32


state 6

   19 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT . OPEN_PAREN expression CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 33


state 7

   23 var_declaration_without_semicolon: VAR . var_declaration_list

    IDENTIFIER  shift, and go to state 34

    var_declaration_list  go to state 35
    var_decl              go to state 36


state 8

   37 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 46


state 9

   74 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 47


state 10

   38 conditional_statement: IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   39                      | IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 48


state 11

   97 while_statement: WHILE . LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 49


state 12

   75 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 50


state 13

   87 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 51


state 14

  113 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 52


state 15

   21 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   36 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   83 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  111 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  112 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 53
    INPUT_OP    shift, and go to state 54
    INCREMENT   shift, and go to state 55
    DECREMENT   shift, and go to state 56
    OPEN_PAREN  shift, and go to state 57


state 16

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 17

    4 statement: import_statement .

    $default  reduce using rule 4 (statement)


state 18

    5 statement: print_statement .

    $default  reduce using rule 5 (statement)


state 19

    6 statement: input_statement .

    $default  reduce using rule 6 (statement)


state 20

    7 statement: var_declaration .

    $default  reduce using rule 7 (statement)


state 21

   22 var_declaration: var_declaration_without_semicolon . SEMICOLON

    SEMICOLON  shift, and go to state 58


state 22

    8 statement: assignment_statement .

    $default  reduce using rule 8 (statement)


state 23

   10 statement: return_statement .

    $default  reduce using rule 10 (statement)


state 24

   11 statement: conditional_statement .

    $default  reduce using rule 11 (statement)


state 25

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 26

   17 statement: function_call_statement .

    $default  reduce using rule 17 (statement)


state 27

   12 statement: for_statement .

    $default  reduce using rule 12 (statement)


state 28

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


state 29

   15 statement: increment_statement .

    $default  reduce using rule 15 (statement)


state 30

   16 statement: decrement_statement .

    $default  reduce using rule 16 (statement)


state 31

   14 statement: break_statement .

    $default  reduce using rule 14 (statement)


state 32

   18 import_statement: IMPORT PATH .

    $default  reduce using rule 18 (import_statement)


state 33

   19 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   20                | PRINT OPEN_PAREN . expression CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 59
    IDENTIFIER      shift, and go to state 45

    expression  go to state 60


state 34

   26 var_decl: IDENTIFIER .
   27         | IDENTIFIER . COLON TYPE
   28         | IDENTIFIER . COLON TYPE EQUALS value
   29         | IDENTIFIER . COLON TYPE LBRACKET INTEGER RBRACKET
   30         | IDENTIFIER . EQUALS value

    EQUALS  shift, and go to state 61
    COLON   shift, and go to state 62

    $default  reduce using rule 26 (var_decl)


state 35

   23 var_declaration_without_semicolon: VAR var_declaration_list .
   25 var_declaration_list: var_declaration_list . COMMA var_decl

    COMMA  shift, and go to state 63

    $default  reduce using rule 23 (var_declaration_without_semicolon)


state 36

   24 var_declaration_list: var_decl .

    $default  reduce using rule 24 (var_declaration_list)


state 37

   70 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 64


state 38

   71 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 65


state 39

   52 expression: DOUBLE .

    $default  reduce using rule 52 (expression)


state 40

   49 expression: FLOAT .

    $default  reduce using rule 49 (expression)


state 41

   48 expression: INTEGER .

    $default  reduce using rule 48 (expression)


state 42

   53 expression: BOOL .

    $default  reduce using rule 53 (expression)


state 43

   51 expression: CHAR_LITERAL .

    $default  reduce using rule 51 (expression)


state 44

   50 expression: STRING_LITERAL .

    $default  reduce using rule 50 (expression)


state 45

   54 expression: IDENTIFIER .
   55           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   72           | IDENTIFIER . INCREMENT
   73           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 66
    DECREMENT   shift, and go to state 67
    OPEN_PAREN  shift, and go to state 68

    $default  reduce using rule 54 (expression)


state 46

   37 return_statement: RETURN expression . SEMICOLON
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82
    SEMICOLON           shift, and go to state 83


state 47

   74 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 84


state 48

   38 conditional_statement: IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   39                      | IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    condition   go to state 85
    expression  go to state 86


state 49

   97 while_statement: WHILE LESS_THAN . condition GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    condition   go to state 87
    expression  go to state 86


state 50

   75 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 88


state 51

   87 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 7
    SEMICOLON   shift, and go to state 89
    IDENTIFIER  shift, and go to state 90

    var_declaration                    go to state 91
    var_declaration_without_semicolon  go to state 21
    for_init                           go to state 92


state 52

  113 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 113 (break_statement)


state 53

   36 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 93


state 54

   21 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 94


state 55

  111 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 95


state 56

  112 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 96


state 57

   83 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    $default  reduce using rule 84 (argument_list)

    expression     go to state 97
    argument_list  go to state 98


state 58

   22 var_declaration: var_declaration_without_semicolon SEMICOLON .

    $default  reduce using rule 22 (var_declaration)


state 59

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON
   50 expression: STRING_LITERAL .

    CLOSE_PAREN  shift, and go to state 99

    CLOSE_PAREN  [reduce using rule 50 (expression)]
    $default     reduce using rule 50 (expression)


state 60

   20 print_statement: PRINT OPEN_PAREN expression . CLOSE_PAREN SEMICOLON
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82
    CLOSE_PAREN         shift, and go to state 100


state 61

   30 var_decl: IDENTIFIER EQUALS . value

    DOUBLE          shift, and go to state 101
    FLOAT           shift, and go to state 102
    INTEGER         shift, and go to state 103
    CHAR_LITERAL    shift, and go to state 104
    STRING_LITERAL  shift, and go to state 105

    value  go to state 106


state 62

   27 var_decl: IDENTIFIER COLON . TYPE
   28         | IDENTIFIER COLON . TYPE EQUALS value
   29         | IDENTIFIER COLON . TYPE LBRACKET INTEGER RBRACKET

    TYPE  shift, and go to state 107


state 63

   25 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 34

    var_decl  go to state 108


state 64

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression
   70           | NOT_OP expression .

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    EQUALS              [reduce using rule 70 (expression)]
    OR_OP               [reduce using rule 70 (expression)]
    AND_OP              [reduce using rule 70 (expression)]
    NOT_EQUAL           [reduce using rule 70 (expression)]
    EQUALS_EQUALS       [reduce using rule 70 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 70 (expression)]
    GREATER_THAN        [reduce using rule 70 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 70 (expression)]
    LESS_THAN           [reduce using rule 70 (expression)]
    MINUS               [reduce using rule 70 (expression)]
    PLUS                [reduce using rule 70 (expression)]
    MOD                 [reduce using rule 70 (expression)]
    DIV                 [reduce using rule 70 (expression)]
    MULT                [reduce using rule 70 (expression)]
    $default            reduce using rule 70 (expression)


state 65

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression
   71           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82
    CLOSE_PAREN         shift, and go to state 109


state 66

   72 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 72 (expression)


state 67

   73 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 73 (expression)


state 68

   55 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    $default  reduce using rule 84 (argument_list)

    expression     go to state 97
    argument_list  go to state 110


state 69

   56 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 111


state 70

   57 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 112


state 71

   58 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 113


state 72

   60 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 114


state 73

   59 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 115


state 74

   64 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 116


state 75

   63 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 117


state 76

   62 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 118


state 77

   61 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 119


state 78

   66 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 120


state 79

   65 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 121


state 80

   69 expression: expression MOD . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 122


state 81

   68 expression: expression DIV . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 123


state 82

   67 expression: expression MULT . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 124


state 83

   37 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 37 (return_statement)


state 84

   74 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 125


state 85

   38 conditional_statement: IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   39                      | IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 126


state 86

   42 condition: expression . EQUALS_EQUALS expression
   43          | expression . NOT_EQUAL expression
   44          | expression . LESS_THAN expression
   45          | expression . LESS_THAN_EQUAL expression
   46          | expression . GREATER_THAN expression
   47          | expression . GREATER_THAN_EQUAL expression
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 127
    EQUALS_EQUALS       shift, and go to state 128
    GREATER_THAN_EQUAL  shift, and go to state 129
    GREATER_THAN        shift, and go to state 130
    LESS_THAN_EQUAL     shift, and go to state 131
    LESS_THAN           shift, and go to state 132
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82


state 87

   97 while_statement: WHILE LESS_THAN condition . GREATER_THAN LBRACE while_body RBRACE

    GREATER_THAN  shift, and go to state 133


state 88

   75 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 134


state 89

   90 for_init: SEMICOLON .

    $default  reduce using rule 90 (for_init)


state 90

   89 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 135


state 91

   88 for_init: var_declaration .

    $default  reduce using rule 88 (for_init)


state 92

   87 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    SEMICOLON       shift, and go to state 136
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    condition      go to state 137
    expression     go to state 86
    for_condition  go to state 138


state 93

   36 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82
    SEMICOLON           shift, and go to state 139


state 94

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 140


state 95

  111 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 111 (increment_statement)


state 96

  112 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 112 (decrement_statement)


state 97

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression
   85 argument_list: expression .

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    $default  reduce using rule 85 (argument_list)


state 98

   83 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   86 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 141
    COMMA        shift, and go to state 142


state 99

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 143


state 100

   20 print_statement: PRINT OPEN_PAREN expression CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 144


state 101

   35 value: DOUBLE .

    $default  reduce using rule 35 (value)


state 102

   32 value: FLOAT .

    $default  reduce using rule 32 (value)


state 103

   31 value: INTEGER .

    $default  reduce using rule 31 (value)


state 104

   34 value: CHAR_LITERAL .

    $default  reduce using rule 34 (value)


state 105

   33 value: STRING_LITERAL .

    $default  reduce using rule 33 (value)


state 106

   30 var_decl: IDENTIFIER EQUALS value .

    $default  reduce using rule 30 (var_decl)


state 107

   27 var_decl: IDENTIFIER COLON TYPE .
   28         | IDENTIFIER COLON TYPE . EQUALS value
   29         | IDENTIFIER COLON TYPE . LBRACKET INTEGER RBRACKET

    EQUALS    shift, and go to state 145
    LBRACKET  shift, and go to state 146

    $default  reduce using rule 27 (var_decl)


state 108

   25 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 25 (var_declaration_list)


state 109

   71 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 71 (expression)


state 110

   55 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   86 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 147
    COMMA        shift, and go to state 142


state 111

   56 expression: expression . EQUALS expression
   56           | expression EQUALS expression .
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    $default  reduce using rule 56 (expression)


state 112

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   57           | expression OR_OP expression .
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    $default  reduce using rule 57 (expression)


state 113

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   58           | expression AND_OP expression .
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    $default  reduce using rule 58 (expression)


state 114

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   60           | expression NOT_EQUAL expression .
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    $default  reduce using rule 60 (expression)


state 115

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   59           | expression EQUALS_EQUALS expression .
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    $default  reduce using rule 59 (expression)


state 116

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   64           | expression GREATER_THAN_EQUAL expression .
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 79
    MOD    shift, and go to state 80
    DIV    shift, and go to state 81
    MULT   shift, and go to state 82

    $default  reduce using rule 64 (expression)


state 117

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   63           | expression GREATER_THAN expression .
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 79
    MOD    shift, and go to state 80
    DIV    shift, and go to state 81
    MULT   shift, and go to state 82

    $default  reduce using rule 63 (expression)


state 118

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   62           | expression LESS_THAN_EQUAL expression .
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 79
    MOD    shift, and go to state 80
    DIV    shift, and go to state 81
    MULT   shift, and go to state 82

    $default  reduce using rule 62 (expression)


state 119

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   61           | expression LESS_THAN expression .
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 79
    MOD    shift, and go to state 80
    DIV    shift, and go to state 81
    MULT   shift, and go to state 82

    $default  reduce using rule 61 (expression)


state 120

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   66           | expression MINUS expression .
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MOD   shift, and go to state 80
    DIV   shift, and go to state 81
    MULT  shift, and go to state 82

    $default  reduce using rule 66 (expression)


state 121

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   65           | expression PLUS expression .
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MOD   shift, and go to state 80
    DIV   shift, and go to state 81
    MULT  shift, and go to state 82

    $default  reduce using rule 65 (expression)


state 122

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression
   69           | expression MOD expression .

    $default  reduce using rule 69 (expression)


state 123

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   68           | expression DIV expression .
   69           | expression . MOD expression

    $default  reduce using rule 68 (expression)


state 124

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   67           | expression MULT expression .
   68           | expression . DIV expression
   69           | expression . MOD expression

    $default  reduce using rule 67 (expression)


state 125

   74 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 148


state 126

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   39                      | IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 149


state 127

   43 condition: expression NOT_EQUAL . expression
   60 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 150


state 128

   42 condition: expression EQUALS_EQUALS . expression
   59 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 151


state 129

   47 condition: expression GREATER_THAN_EQUAL . expression
   64 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 152


state 130

   46 condition: expression GREATER_THAN . expression
   63 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 153


state 131

   45 condition: expression LESS_THAN_EQUAL . expression
   62 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 154


state 132

   44 condition: expression LESS_THAN . expression
   61 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 155


state 133

   97 while_statement: WHILE LESS_THAN condition GREATER_THAN . LBRACE while_body RBRACE

    LBRACE  shift, and go to state 156


state 134

   75 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 157


state 135

   89 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 158


state 136

   92 for_condition: SEMICOLON .

    $default  reduce using rule 92 (for_condition)


state 137

   91 for_condition: condition . SEMICOLON

    SEMICOLON  shift, and go to state 159


state 138

   87 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 160

    $default  reduce using rule 96 (for_increment)

    for_increment  go to state 161


state 139

   36 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 36 (assignment_statement)


state 140

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 162


state 141

   83 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 163


state 142

   86 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 164


state 143

   19 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 19 (print_statement)


state 144

   20 print_statement: PRINT OPEN_PAREN expression CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 20 (print_statement)


state 145

   28 var_decl: IDENTIFIER COLON TYPE EQUALS . value

    DOUBLE          shift, and go to state 101
    FLOAT           shift, and go to state 102
    INTEGER         shift, and go to state 103
    CHAR_LITERAL    shift, and go to state 104
    STRING_LITERAL  shift, and go to state 105

    value  go to state 165


state 146

   29 var_decl: IDENTIFIER COLON TYPE LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 166


state 147

   55 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 55 (expression)


state 148

   74 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    LESS_THAN  shift, and go to state 167

    $default  reduce using rule 76 (param_list)

    param_list  go to state 168
    param       go to state 169


state 149

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   39                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 171
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 150

   43 condition: expression NOT_EQUAL expression .
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   60           | expression NOT_EQUAL expression .
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    CLOSE_PAREN  reduce using rule 43 (condition)
    SEMICOLON    reduce using rule 43 (condition)
    $default     reduce using rule 60 (expression)


state 151

   42 condition: expression EQUALS_EQUALS expression .
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   59           | expression EQUALS_EQUALS expression .
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    CLOSE_PAREN  reduce using rule 42 (condition)
    SEMICOLON    reduce using rule 42 (condition)
    $default     reduce using rule 59 (expression)


state 152

   47 condition: expression GREATER_THAN_EQUAL expression .
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   64           | expression GREATER_THAN_EQUAL expression .
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 79
    MOD    shift, and go to state 80
    DIV    shift, and go to state 81
    MULT   shift, and go to state 82

    GREATER_THAN  reduce using rule 47 (condition)
    GREATER_THAN  [reduce using rule 64 (expression)]
    CLOSE_PAREN   reduce using rule 47 (condition)
    SEMICOLON     reduce using rule 47 (condition)
    $default      reduce using rule 64 (expression)


state 153

   46 condition: expression GREATER_THAN expression .
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   63           | expression GREATER_THAN expression .
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 79
    MOD    shift, and go to state 80
    DIV    shift, and go to state 81
    MULT   shift, and go to state 82

    GREATER_THAN  reduce using rule 46 (condition)
    GREATER_THAN  [reduce using rule 63 (expression)]
    CLOSE_PAREN   reduce using rule 46 (condition)
    SEMICOLON     reduce using rule 46 (condition)
    $default      reduce using rule 63 (expression)


state 154

   45 condition: expression LESS_THAN_EQUAL expression .
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   62           | expression LESS_THAN_EQUAL expression .
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 79
    MOD    shift, and go to state 80
    DIV    shift, and go to state 81
    MULT   shift, and go to state 82

    GREATER_THAN  reduce using rule 45 (condition)
    GREATER_THAN  [reduce using rule 62 (expression)]
    CLOSE_PAREN   reduce using rule 45 (condition)
    SEMICOLON     reduce using rule 45 (condition)
    $default      reduce using rule 62 (expression)


state 155

   44 condition: expression LESS_THAN expression .
   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   61           | expression LESS_THAN expression .
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression

    MINUS  shift, and go to state 78
    PLUS   shift, and go to state 79
    MOD    shift, and go to state 80
    DIV    shift, and go to state 81
    MULT   shift, and go to state 82

    GREATER_THAN  reduce using rule 44 (condition)
    GREATER_THAN  [reduce using rule 61 (expression)]
    CLOSE_PAREN   reduce using rule 44 (condition)
    SEMICOLON     reduce using rule 44 (condition)
    $default      reduce using rule 61 (expression)


state 156

   97 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 172

    POST      reduce using rule 99 (pre_block)
    POST      [reduce using rule 101 (pre_block)]
    BODY      reduce using rule 99 (pre_block)
    BODY      [reduce using rule 101 (pre_block)]
    ALWAYS    reduce using rule 99 (pre_block)
    ALWAYS    [reduce using rule 101 (pre_block)]
    RBRACE    reduce using rule 99 (pre_block)
    RBRACE    [reduce using rule 101 (pre_block)]
    $default  reduce using rule 99 (pre_block)

    while_body  go to state 173
    pre_block   go to state 174


state 157

   75 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 175


state 158

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression
   89 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82
    SEMICOLON           shift, and go to state 176


state 159

   91 for_condition: condition SEMICOLON .

    $default  reduce using rule 91 (for_condition)


state 160

   93 for_increment: IDENTIFIER . EQUALS expression
   94              | IDENTIFIER . INCREMENT
   95              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 177
    INCREMENT  shift, and go to state 178
    DECREMENT  shift, and go to state 179


state 161

   87 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 180


state 162

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 181


state 163

   83 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 83 (function_call_statement)


state 164

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression
   86 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    $default  reduce using rule 86 (argument_list)


state 165

   28 var_decl: IDENTIFIER COLON TYPE EQUALS value .

    $default  reduce using rule 28 (var_decl)


state 166

   29 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 182


state 167

   79 param: LESS_THAN . var_declaration_without_semicolon GREATER_THAN

    VAR  shift, and go to state 7

    var_declaration_without_semicolon  go to state 183


state 168

   74 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   77 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 184
    COMMA        shift, and go to state 185


state 169

   78 param_list: param .

    $default  reduce using rule 78 (param_list)


state 170

   82 function_body: statement .

    $default  reduce using rule 82 (function_body)


state 171

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   39                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   81 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 186
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 172

  100 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 188


state 173

   97 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 189


state 174

   98 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 190

    POST      reduce using rule 102 (body_block)
    POST      [reduce using rule 104 (body_block)]
    ALWAYS    reduce using rule 102 (body_block)
    ALWAYS    [reduce using rule 104 (body_block)]
    RBRACE    reduce using rule 102 (body_block)
    RBRACE    [reduce using rule 104 (body_block)]
    $default  reduce using rule 102 (body_block)

    body_block  go to state 191


state 175

   75 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 192


state 176

   89 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 89 (for_init)


state 177

   93 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    expression  go to state 193


state 178

   94 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 94 (for_increment)


state 179

   95 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 95 (for_increment)


state 180

   87 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 194


state 181

   21 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 21 (input_statement)


state 182

   29 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 29 (var_decl)


state 183

   79 param: LESS_THAN var_declaration_without_semicolon . GREATER_THAN

    GREATER_THAN  shift, and go to state 195


state 184

   74 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 196


state 185

   77 param_list: param_list COMMA . param

    LESS_THAN  shift, and go to state 167

    param  go to state 197


state 186

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   39                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 40 (else_if_clauses)

    else_if_clauses  go to state 198


state 187

   81 function_body: function_body statement .

    $default  reduce using rule 81 (function_body)


state 188

  100 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 199
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 189

   97 while_statement: WHILE LESS_THAN condition GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 97 (while_statement)


state 190

  103 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 200


state 191

   98 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 201

    ALWAYS    reduce using rule 105 (post_block)
    ALWAYS    [reduce using rule 107 (post_block)]
    RBRACE    reduce using rule 105 (post_block)
    RBRACE    [reduce using rule 107 (post_block)]
    $default  reduce using rule 105 (post_block)

    post_block  go to state 202


state 192

   75 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 203
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 193

   56 expression: expression . EQUALS expression
   57           | expression . OR_OP expression
   58           | expression . AND_OP expression
   59           | expression . EQUALS_EQUALS expression
   60           | expression . NOT_EQUAL expression
   61           | expression . LESS_THAN expression
   62           | expression . LESS_THAN_EQUAL expression
   63           | expression . GREATER_THAN expression
   64           | expression . GREATER_THAN_EQUAL expression
   65           | expression . PLUS expression
   66           | expression . MINUS expression
   67           | expression . MULT expression
   68           | expression . DIV expression
   69           | expression . MOD expression
   93 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 69
    OR_OP               shift, and go to state 70
    AND_OP              shift, and go to state 71
    NOT_EQUAL           shift, and go to state 72
    EQUALS_EQUALS       shift, and go to state 73
    GREATER_THAN_EQUAL  shift, and go to state 74
    GREATER_THAN        shift, and go to state 75
    LESS_THAN_EQUAL     shift, and go to state 76
    LESS_THAN           shift, and go to state 77
    MINUS               shift, and go to state 78
    PLUS                shift, and go to state 79
    MOD                 shift, and go to state 80
    DIV                 shift, and go to state 81
    MULT                shift, and go to state 82

    $default  reduce using rule 93 (for_increment)


state 194

   87 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 204
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 195

   79 param: LESS_THAN var_declaration_without_semicolon GREATER_THAN .

    $default  reduce using rule 79 (param)


state 196

   74 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 205
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 197

   77 param_list: param_list COMMA param .

    $default  reduce using rule 77 (param_list)


state 198

   38 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   39                      | IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   41 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 206

    $default  reduce using rule 38 (conditional_statement)


state 199

   81 function_body: function_body . statement
  100 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 207
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 200

  103 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 208
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 201

  106 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 209


state 202

   98 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 210

    RBRACE    reduce using rule 108 (always_block)
    RBRACE    [reduce using rule 110 (always_block)]
    $default  reduce using rule 108 (always_block)

    always_block  go to state 211


state 203

   75 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   81 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 212
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 204

   81 function_body: function_body . statement
   87 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 213
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 205

   74 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   81 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 214
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 206

   39 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   41 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 215
    LBRACE  shift, and go to state 216


state 207

  100 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 100 (pre_block)


state 208

   81 function_body: function_body . statement
  103 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 217
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 209

  106 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 218
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 210

  109 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 219


state 211

   98 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 98 (while_body)


state 212

   75 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 75 (function_declaration)


state 213

   87 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 87 (for_statement)


state 214

   74 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 74 (function_declaration)


state 215

   41 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 220


state 216

   39 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 221
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 217

  103 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 103 (body_block)


state 218

   81 function_body: function_body . statement
  106 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 222
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 219

  109 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 223
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 220

   41 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . condition CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 37
    OPEN_PAREN      shift, and go to state 38
    DOUBLE          shift, and go to state 39
    FLOAT           shift, and go to state 40
    INTEGER         shift, and go to state 41
    BOOL            shift, and go to state 42
    CHAR_LITERAL    shift, and go to state 43
    STRING_LITERAL  shift, and go to state 44
    IDENTIFIER      shift, and go to state 45

    condition   go to state 224
    expression  go to state 86


state 221

   39 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   81 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 225
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 222

  106 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 106 (post_block)


state 223

   81 function_body: function_body . statement
  109 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 226
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 224

   41 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 227


state 225

   39 conditional_statement: IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 39 (conditional_statement)


state 226

  109 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 109 (always_block)


state 227

   41 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 228


state 228

   41 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    IMPORT      [reduce using rule 80 (function_body)]
    PRINT       [reduce using rule 80 (function_body)]
    VAR         [reduce using rule 80 (function_body)]
    RETURN      [reduce using rule 80 (function_body)]
    FUNCTION    [reduce using rule 80 (function_body)]
    IF          [reduce using rule 80 (function_body)]
    WHILE       [reduce using rule 80 (function_body)]
    MAIN        [reduce using rule 80 (function_body)]
    FOR         [reduce using rule 80 (function_body)]
    BREAK       [reduce using rule 80 (function_body)]
    IDENTIFIER  [reduce using rule 80 (function_body)]
    $default    reduce using rule 80 (function_body)

    statement                          go to state 170
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_body                      go to state 229
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 229

   41 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body . RBRACE
   81 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    RBRACE      shift, and go to state 230
    IDENTIFIER  shift, and go to state 15

    statement                          go to state 187
    import_statement                   go to state 17
    print_statement                    go to state 18
    input_statement                    go to state 19
    var_declaration                    go to state 20
    var_declaration_without_semicolon  go to state 21
    assignment_statement               go to state 22
    return_statement                   go to state 23
    conditional_statement              go to state 24
    function_declaration               go to state 25
    function_call_statement            go to state 26
    for_statement                      go to state 27
    while_statement                    go to state 28
    increment_statement                go to state 29
    decrement_statement                go to state 30
    break_statement                    go to state 31


state 230

   41 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN condition CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 41 (else_if_clauses)
