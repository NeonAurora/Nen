Nonterminals useless in grammar

   value_list


Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT


Rules useless in grammar

  113 value_list: INTEGER
  114           | value_list COMMA INTEGER


Rules useless in parser due to conflicts

   99 pre_block: /* empty */

  102 body_block: /* empty */

  105 post_block: /* empty */

  108 always_block: /* empty */


State 62 conflicts: 1 shift/reduce
State 67 conflicts: 14 shift/reduce
State 150 conflicts: 12 shift/reduce
State 151 conflicts: 4 reduce/reduce
State 169 conflicts: 3 reduce/reduce
State 183 conflicts: 12 shift/reduce
State 186 conflicts: 2 reduce/reduce
State 187 conflicts: 12 shift/reduce
State 189 conflicts: 12 shift/reduce
State 191 conflicts: 12 shift/reduce
State 195 conflicts: 12 shift/reduce
State 197 conflicts: 1 reduce/reduce
State 204 conflicts: 12 shift/reduce
State 211 conflicts: 12 shift/reduce
State 214 conflicts: 12 shift/reduce
State 223 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement
    3        | end_of_the_line

    4 statement: import_statement
    5          | print_statement
    6          | input_statement
    7          | var_declaration
    8          | assignment_statement
    9          | function_declaration
   10          | return_statement
   11          | conditional_statement
   12          | for_statement
   13          | while_statement
   14          | break_statement
   15          | increment_statement
   16          | decrement_statement
   17          | function_call_statement
   18          | continue_statement

   19 import_statement: IMPORT PATH

   20 continue_statement: CONTINUE SEMICOLON

   21 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   22                | PRINT OPEN_PAREN expression CLOSE_PAREN SEMICOLON

   23 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   24 var_declaration: var_declaration_without_semicolon SEMICOLON

   25 var_declaration_without_semicolon: VAR var_declaration_list

   26 var_declaration_list: var_decl
   27                     | var_declaration_list COMMA var_decl

   28 var_decl: IDENTIFIER
   29         | IDENTIFIER COLON TYPE
   30         | IDENTIFIER COLON TYPE EQUALS value
   31         | IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET
   32         | IDENTIFIER EQUALS value

   33 value: INTEGER
   34      | FLOAT
   35      | STRING_LITERAL
   36      | CHAR_LITERAL
   37      | DOUBLE

   38 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON
   39                     | IDENTIFIER EQUALS ARRAY_LITERAL SEMICOLON

   40 return_statement: RETURN expression SEMICOLON

   41 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   42                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   43 else_if_clauses: /* empty */
   44                | else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

   45 expression: INTEGER
   46           | FLOAT
   47           | STRING_LITERAL
   48           | CHAR_LITERAL
   49           | DOUBLE
   50           | BOOL
   51           | IDENTIFIER
   52           | IDENTIFIER LBRACKET expression RBRACKET
   53           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   54           | expression EQUALS expression
   55           | expression OR_OP expression
   56           | expression AND_OP expression
   57           | expression EQUALS_EQUALS expression
   58           | expression NOT_EQUAL expression
   59           | expression LESS_THAN expression
   60           | expression LESS_THAN_EQUAL expression
   61           | expression GREATER_THAN expression
   62           | expression GREATER_THAN_EQUAL expression
   63           | expression PLUS expression
   64           | expression MINUS expression
   65           | expression MULT expression
   66           | expression DIV expression
   67           | expression MOD expression
   68           | NOT_OP expression
   69           | OPEN_PAREN expression CLOSE_PAREN
   70           | IDENTIFIER INCREMENT
   71           | IDENTIFIER DECREMENT

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   73                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   74 param_list: /* empty */
   75           | param_list COMMA param
   76           | param

   77 param: LESS_THAN var_declaration_without_semicolon GREATER_THAN

   78 function_body: /* empty */
   79              | function_body statement
   80              | statement

   81 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   82 argument_list: /* empty */
   83              | expression
   84              | argument_list COMMA expression

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   86 for_init: var_declaration
   87         | IDENTIFIER EQUALS expression SEMICOLON
   88         | SEMICOLON

   89 for_condition: expression SEMICOLON
   90              | SEMICOLON

   91 for_increment: IDENTIFIER EQUALS expression
   92              | IDENTIFIER INCREMENT
   93              | IDENTIFIER DECREMENT
   94              | /* empty */

   95 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE

   96 while_body: pre_block body_block post_block always_block

   97 pre_block: /* empty */
   98          | PRE LBRACE function_body RBRACE
   99          | /* empty */

  100 body_block: /* empty */
  101           | BODY LBRACE function_body RBRACE
  102           | /* empty */

  103 post_block: /* empty */
  104           | POST LBRACE function_body RBRACE
  105           | /* empty */

  106 always_block: /* empty */
  107             | ALWAYS LBRACE function_body RBRACE
  108             | /* empty */

  109 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  110 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  111 break_statement: BREAK SEMICOLON

  112 end_of_the_line: END


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 30 32 38 39 54 87 91
OR_OP (259) 55
AND_OP (260) 56
NOT_EQUAL (261) 58
EQUALS_EQUALS (262) 57
GREATER_THAN_EQUAL (263) 62
GREATER_THAN (264) 61 77 95
LESS_THAN_EQUAL (265) 60
LESS_THAN (266) 59 77 95
MINUS (267) 64
PLUS (268) 63
MOD (269) 67
DIV (270) 66
MULT (271) 65
IMPORT (272) 19
PRINT (273) 21 22
VAR (274) 25
RETURN (275) 40
FUNCTION (276) 72 73
IF (277) 41 42 44
ELSE (278) 42 44
WHILE (279) 95
MAIN (280) 73
END_PROGRAM (281)
FOR (282) 85
PRE (283) 98
POST (284) 104
BODY (285) 101
ALWAYS (286) 107
BREAK (287) 111
CONTINUE (288) 20
INPUT_OP (289) 23
NOT_OP (290) 68
INCREMENT (291) 70 92 109
DECREMENT (292) 71 93 110
OPEN_PAREN (293) 21 22 23 41 42 44 53 69 72 73 81 85
CLOSE_PAREN (294) 21 22 23 41 42 44 53 69 72 73 81 85
LBRACKET (295) 31 52
RBRACKET (296) 31 52
LBRACE (297) 41 42 44 72 73 85 95 98 101 104 107
RBRACE (298) 41 42 44 72 73 85 95 98 101 104 107
SEMICOLON (299) 20 21 22 23 24 38 39 40 81 87 88 89 90 109 110 111
COMMA (300) 27 75 84
INVERTED_COMMA (301)
DOUBLE_QUOTE (302)
COLON (303) 29 30 31 72 73
BODY_START (304)
BODY_END (305)
DOUBLE (306) 37 49
FLOAT (307) 34 46
INTEGER (308) 31 33 45
BOOL (309) 50
CHAR_LITERAL (310) 36 48
STRING_LITERAL (311) 21 23 35 47
IDENTIFIER (312) 23 28 29 30 31 32 38 39 51 52 53 70 71 72 81 87 91
    92 93 109 110
PATH (313) 19
TYPE (314) 29 30 31 72 73
ARRAY_LITERAL (315) 39
SINGLE_LINE_COMMENT_START (316)
MULTI_LINE_COMMENT_START (317)
MULTI_LINE_COMMENT_END (318)
ARRAY_INIT (319)
END (320) 112


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
program (67)
    on left: 1 2 3, on right: 0 2
statement (68)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 79
    80
import_statement (69)
    on left: 19, on right: 4
continue_statement (70)
    on left: 20, on right: 18
print_statement (71)
    on left: 21 22, on right: 5
input_statement (72)
    on left: 23, on right: 6
var_declaration (73)
    on left: 24, on right: 7 86
var_declaration_without_semicolon (74)
    on left: 25, on right: 24 77
var_declaration_list (75)
    on left: 26 27, on right: 25 27
var_decl (76)
    on left: 28 29 30 31 32, on right: 26 27
value (77)
    on left: 33 34 35 36 37, on right: 30 32
assignment_statement (78)
    on left: 38 39, on right: 8
return_statement (79)
    on left: 40, on right: 10
conditional_statement (80)
    on left: 41 42, on right: 11
else_if_clauses (81)
    on left: 43 44, on right: 41 42 44
expression (82)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70 71, on right: 22 38 40 41 42 44 52 54 55
    56 57 58 59 60 61 62 63 64 65 66 67 68 69 83 84 87 89 91 95
function_declaration (83)
    on left: 72 73, on right: 9
param_list (84)
    on left: 74 75 76, on right: 72 75
param (85)
    on left: 77, on right: 75 76
function_body (86)
    on left: 78 79 80, on right: 41 42 44 72 73 79 85 98 101 104 107
function_call_statement (87)
    on left: 81, on right: 17
argument_list (88)
    on left: 82 83 84, on right: 53 81 84
for_statement (89)
    on left: 85, on right: 12
for_init (90)
    on left: 86 87 88, on right: 85
for_condition (91)
    on left: 89 90, on right: 85
for_increment (92)
    on left: 91 92 93 94, on right: 85
while_statement (93)
    on left: 95, on right: 13
while_body (94)
    on left: 96, on right: 95
pre_block (95)
    on left: 97 98 99, on right: 96
body_block (96)
    on left: 100 101 102, on right: 96
post_block (97)
    on left: 103 104 105, on right: 96
always_block (98)
    on left: 106 107 108, on right: 96
increment_statement (99)
    on left: 109, on right: 15
decrement_statement (100)
    on left: 110, on right: 16
break_statement (101)
    on left: 111, on right: 14
end_of_the_line (102)
    on left: 112, on right: 3


state 0

    0 $accept: . program $end

    END  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program          go to state 2
    end_of_the_line  go to state 3


state 1

  112 end_of_the_line: END .

    $default  reduce using rule 112 (end_of_the_line)


state 2

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 4
    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 17
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 3

    3 program: end_of_the_line .

    $default  reduce using rule 3 (program)


state 4

    0 $accept: program $end .

    $default  accept


state 5

   19 import_statement: IMPORT . PATH

    PATH  shift, and go to state 34


state 6

   21 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   22                | PRINT . OPEN_PAREN expression CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 35


state 7

   25 var_declaration_without_semicolon: VAR . var_declaration_list

    IDENTIFIER  shift, and go to state 36

    var_declaration_list  go to state 37
    var_decl              go to state 38


state 8

   40 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 48


state 9

   72 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 49


state 10

   41 conditional_statement: IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   42                      | IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 50


state 11

   95 while_statement: WHILE . LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 51


state 12

   73 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 52


state 13

   85 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 53


state 14

  111 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 54


state 15

   20 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 55


state 16

   23 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   38 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   39                     | IDENTIFIER . EQUALS ARRAY_LITERAL SEMICOLON
   81 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  109 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  110 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 56
    INPUT_OP    shift, and go to state 57
    INCREMENT   shift, and go to state 58
    DECREMENT   shift, and go to state 59
    OPEN_PAREN  shift, and go to state 60


state 17

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 18

    4 statement: import_statement .

    $default  reduce using rule 4 (statement)


state 19

   18 statement: continue_statement .

    $default  reduce using rule 18 (statement)


state 20

    5 statement: print_statement .

    $default  reduce using rule 5 (statement)


state 21

    6 statement: input_statement .

    $default  reduce using rule 6 (statement)


state 22

    7 statement: var_declaration .

    $default  reduce using rule 7 (statement)


state 23

   24 var_declaration: var_declaration_without_semicolon . SEMICOLON

    SEMICOLON  shift, and go to state 61


state 24

    8 statement: assignment_statement .

    $default  reduce using rule 8 (statement)


state 25

   10 statement: return_statement .

    $default  reduce using rule 10 (statement)


state 26

   11 statement: conditional_statement .

    $default  reduce using rule 11 (statement)


state 27

    9 statement: function_declaration .

    $default  reduce using rule 9 (statement)


state 28

   17 statement: function_call_statement .

    $default  reduce using rule 17 (statement)


state 29

   12 statement: for_statement .

    $default  reduce using rule 12 (statement)


state 30

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


state 31

   15 statement: increment_statement .

    $default  reduce using rule 15 (statement)


state 32

   16 statement: decrement_statement .

    $default  reduce using rule 16 (statement)


state 33

   14 statement: break_statement .

    $default  reduce using rule 14 (statement)


state 34

   19 import_statement: IMPORT PATH .

    $default  reduce using rule 19 (import_statement)


state 35

   21 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   22                | PRINT OPEN_PAREN . expression CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 62
    IDENTIFIER      shift, and go to state 47

    expression  go to state 63


state 36

   28 var_decl: IDENTIFIER .
   29         | IDENTIFIER . COLON TYPE
   30         | IDENTIFIER . COLON TYPE EQUALS value
   31         | IDENTIFIER . COLON TYPE LBRACKET INTEGER RBRACKET
   32         | IDENTIFIER . EQUALS value

    EQUALS  shift, and go to state 64
    COLON   shift, and go to state 65

    $default  reduce using rule 28 (var_decl)


state 37

   25 var_declaration_without_semicolon: VAR var_declaration_list .
   27 var_declaration_list: var_declaration_list . COMMA var_decl

    COMMA  shift, and go to state 66

    $default  reduce using rule 25 (var_declaration_without_semicolon)


state 38

   26 var_declaration_list: var_decl .

    $default  reduce using rule 26 (var_declaration_list)


state 39

   68 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 67


state 40

   69 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 68


state 41

   49 expression: DOUBLE .

    $default  reduce using rule 49 (expression)


state 42

   46 expression: FLOAT .

    $default  reduce using rule 46 (expression)


state 43

   45 expression: INTEGER .

    $default  reduce using rule 45 (expression)


state 44

   50 expression: BOOL .

    $default  reduce using rule 50 (expression)


state 45

   48 expression: CHAR_LITERAL .

    $default  reduce using rule 48 (expression)


state 46

   47 expression: STRING_LITERAL .

    $default  reduce using rule 47 (expression)


state 47

   51 expression: IDENTIFIER .
   52           | IDENTIFIER . LBRACKET expression RBRACKET
   53           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   70           | IDENTIFIER . INCREMENT
   71           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 69
    DECREMENT   shift, and go to state 70
    OPEN_PAREN  shift, and go to state 71
    LBRACKET    shift, and go to state 72

    $default  reduce using rule 51 (expression)


state 48

   40 return_statement: RETURN expression . SEMICOLON
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    SEMICOLON           shift, and go to state 87


state 49

   72 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 88


state 50

   41 conditional_statement: IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   42                      | IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 89


state 51

   95 while_statement: WHILE LESS_THAN . expression GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 90


state 52

   73 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 91


state 53

   85 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 7
    SEMICOLON   shift, and go to state 92
    IDENTIFIER  shift, and go to state 93

    var_declaration                    go to state 94
    var_declaration_without_semicolon  go to state 23
    for_init                           go to state 95


state 54

  111 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 111 (break_statement)


state 55

   20 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 20 (continue_statement)


state 56

   38 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON
   39                     | IDENTIFIER EQUALS . ARRAY_LITERAL SEMICOLON

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47
    ARRAY_LITERAL   shift, and go to state 96

    expression  go to state 97


state 57

   23 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 98


state 58

  109 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 99


state 59

  110 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 100


state 60

   81 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    $default  reduce using rule 82 (argument_list)

    expression     go to state 101
    argument_list  go to state 102


state 61

   24 var_declaration: var_declaration_without_semicolon SEMICOLON .

    $default  reduce using rule 24 (var_declaration)


state 62

   21 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON
   47 expression: STRING_LITERAL .

    CLOSE_PAREN  shift, and go to state 103

    CLOSE_PAREN  [reduce using rule 47 (expression)]
    $default     reduce using rule 47 (expression)


state 63

   22 print_statement: PRINT OPEN_PAREN expression . CLOSE_PAREN SEMICOLON
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    CLOSE_PAREN         shift, and go to state 104


state 64

   32 var_decl: IDENTIFIER EQUALS . value

    DOUBLE          shift, and go to state 105
    FLOAT           shift, and go to state 106
    INTEGER         shift, and go to state 107
    CHAR_LITERAL    shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109

    value  go to state 110


state 65

   29 var_decl: IDENTIFIER COLON . TYPE
   30         | IDENTIFIER COLON . TYPE EQUALS value
   31         | IDENTIFIER COLON . TYPE LBRACKET INTEGER RBRACKET

    TYPE  shift, and go to state 111


state 66

   27 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 36

    var_decl  go to state 112


state 67

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   68           | NOT_OP expression .

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    EQUALS              [reduce using rule 68 (expression)]
    OR_OP               [reduce using rule 68 (expression)]
    AND_OP              [reduce using rule 68 (expression)]
    NOT_EQUAL           [reduce using rule 68 (expression)]
    EQUALS_EQUALS       [reduce using rule 68 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 68 (expression)]
    GREATER_THAN        [reduce using rule 68 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 68 (expression)]
    LESS_THAN           [reduce using rule 68 (expression)]
    MINUS               [reduce using rule 68 (expression)]
    PLUS                [reduce using rule 68 (expression)]
    MOD                 [reduce using rule 68 (expression)]
    DIV                 [reduce using rule 68 (expression)]
    MULT                [reduce using rule 68 (expression)]
    $default            reduce using rule 68 (expression)


state 68

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   69           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    CLOSE_PAREN         shift, and go to state 113


state 69

   70 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 70 (expression)


state 70

   71 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 71 (expression)


state 71

   53 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    $default  reduce using rule 82 (argument_list)

    expression     go to state 101
    argument_list  go to state 114


state 72

   52 expression: IDENTIFIER LBRACKET . expression RBRACKET

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 115


state 73

   54 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 116


state 74

   55 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 117


state 75

   56 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 118


state 76

   58 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 119


state 77

   57 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 120


state 78

   62 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 121


state 79

   61 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 122


state 80

   60 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 123


state 81

   59 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 124


state 82

   64 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 125


state 83

   63 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 126


state 84

   67 expression: expression MOD . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 127


state 85

   66 expression: expression DIV . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 128


state 86

   65 expression: expression MULT . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 129


state 87

   40 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 40 (return_statement)


state 88

   72 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 130


state 89

   41 conditional_statement: IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   42                      | IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    CLOSE_PAREN         shift, and go to state 131


state 90

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   95 while_statement: WHILE LESS_THAN expression . GREATER_THAN LBRACE while_body RBRACE

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 132
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86


state 91

   73 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 133


state 92

   88 for_init: SEMICOLON .

    $default  reduce using rule 88 (for_init)


state 93

   87 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 134


state 94

   86 for_init: var_declaration .

    $default  reduce using rule 86 (for_init)


state 95

   85 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    SEMICOLON       shift, and go to state 135
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression     go to state 136
    for_condition  go to state 137


state 96

   39 assignment_statement: IDENTIFIER EQUALS ARRAY_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 138


state 97

   38 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    SEMICOLON           shift, and go to state 139


state 98

   23 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 140


state 99

  109 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 109 (increment_statement)


state 100

  110 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 110 (decrement_statement)


state 101

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   83 argument_list: expression .

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    $default  reduce using rule 83 (argument_list)


state 102

   81 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   84 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 141
    COMMA        shift, and go to state 142


state 103

   21 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 143


state 104

   22 print_statement: PRINT OPEN_PAREN expression CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 144


state 105

   37 value: DOUBLE .

    $default  reduce using rule 37 (value)


state 106

   34 value: FLOAT .

    $default  reduce using rule 34 (value)


state 107

   33 value: INTEGER .

    $default  reduce using rule 33 (value)


state 108

   36 value: CHAR_LITERAL .

    $default  reduce using rule 36 (value)


state 109

   35 value: STRING_LITERAL .

    $default  reduce using rule 35 (value)


state 110

   32 var_decl: IDENTIFIER EQUALS value .

    $default  reduce using rule 32 (var_decl)


state 111

   29 var_decl: IDENTIFIER COLON TYPE .
   30         | IDENTIFIER COLON TYPE . EQUALS value
   31         | IDENTIFIER COLON TYPE . LBRACKET INTEGER RBRACKET

    EQUALS    shift, and go to state 145
    LBRACKET  shift, and go to state 146

    $default  reduce using rule 29 (var_decl)


state 112

   27 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 27 (var_declaration_list)


state 113

   69 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 69 (expression)


state 114

   53 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   84 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 147
    COMMA        shift, and go to state 142


state 115

   52 expression: IDENTIFIER LBRACKET expression . RBRACKET
   54           | expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    RBRACKET            shift, and go to state 148


state 116

   54 expression: expression . EQUALS expression
   54           | expression EQUALS expression .
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    $default  reduce using rule 54 (expression)


state 117

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   55           | expression OR_OP expression .
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    $default  reduce using rule 55 (expression)


state 118

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   56           | expression AND_OP expression .
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    $default  reduce using rule 56 (expression)


state 119

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   58           | expression NOT_EQUAL expression .
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    $default  reduce using rule 58 (expression)


state 120

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   57           | expression EQUALS_EQUALS expression .
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    $default  reduce using rule 57 (expression)


state 121

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   62           | expression GREATER_THAN_EQUAL expression .
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 82
    PLUS   shift, and go to state 83
    MOD    shift, and go to state 84
    DIV    shift, and go to state 85
    MULT   shift, and go to state 86

    $default  reduce using rule 62 (expression)


state 122

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   61           | expression GREATER_THAN expression .
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 82
    PLUS   shift, and go to state 83
    MOD    shift, and go to state 84
    DIV    shift, and go to state 85
    MULT   shift, and go to state 86

    $default  reduce using rule 61 (expression)


state 123

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   60           | expression LESS_THAN_EQUAL expression .
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 82
    PLUS   shift, and go to state 83
    MOD    shift, and go to state 84
    DIV    shift, and go to state 85
    MULT   shift, and go to state 86

    $default  reduce using rule 60 (expression)


state 124

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   59           | expression LESS_THAN expression .
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MINUS  shift, and go to state 82
    PLUS   shift, and go to state 83
    MOD    shift, and go to state 84
    DIV    shift, and go to state 85
    MULT   shift, and go to state 86

    $default  reduce using rule 59 (expression)


state 125

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   64           | expression MINUS expression .
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MOD   shift, and go to state 84
    DIV   shift, and go to state 85
    MULT  shift, and go to state 86

    $default  reduce using rule 64 (expression)


state 126

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   63           | expression PLUS expression .
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    MOD   shift, and go to state 84
    DIV   shift, and go to state 85
    MULT  shift, and go to state 86

    $default  reduce using rule 63 (expression)


state 127

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   67           | expression MOD expression .

    $default  reduce using rule 67 (expression)


state 128

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   66           | expression DIV expression .
   67           | expression . MOD expression

    $default  reduce using rule 66 (expression)


state 129

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   65           | expression MULT expression .
   66           | expression . DIV expression
   67           | expression . MOD expression

    $default  reduce using rule 65 (expression)


state 130

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 149


state 131

   41 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   42                      | IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 150


state 132

   61 expression: expression GREATER_THAN . expression
   95 while_statement: WHILE LESS_THAN expression GREATER_THAN . LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    LBRACE          shift, and go to state 151
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 122


state 133

   73 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 152


state 134

   87 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 153


state 135

   90 for_condition: SEMICOLON .

    $default  reduce using rule 90 (for_condition)


state 136

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   89 for_condition: expression . SEMICOLON

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    SEMICOLON           shift, and go to state 154


state 137

   85 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 155

    $default  reduce using rule 94 (for_increment)

    for_increment  go to state 156


state 138

   39 assignment_statement: IDENTIFIER EQUALS ARRAY_LITERAL SEMICOLON .

    $default  reduce using rule 39 (assignment_statement)


state 139

   38 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 38 (assignment_statement)


state 140

   23 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 157


state 141

   81 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 158


state 142

   84 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 159


state 143

   21 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 21 (print_statement)


state 144

   22 print_statement: PRINT OPEN_PAREN expression CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 22 (print_statement)


state 145

   30 var_decl: IDENTIFIER COLON TYPE EQUALS . value

    DOUBLE          shift, and go to state 105
    FLOAT           shift, and go to state 106
    INTEGER         shift, and go to state 107
    CHAR_LITERAL    shift, and go to state 108
    STRING_LITERAL  shift, and go to state 109

    value  go to state 160


state 146

   31 var_decl: IDENTIFIER COLON TYPE LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 161


state 147

   53 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 53 (expression)


state 148

   52 expression: IDENTIFIER LBRACKET expression RBRACKET .

    $default  reduce using rule 52 (expression)


state 149

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    LESS_THAN  shift, and go to state 162

    $default  reduce using rule 74 (param_list)

    param_list  go to state 163
    param       go to state 164


state 150

   41 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   42                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 166
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 151

   95 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 167

    POST      reduce using rule 97 (pre_block)
    POST      [reduce using rule 99 (pre_block)]
    BODY      reduce using rule 97 (pre_block)
    BODY      [reduce using rule 99 (pre_block)]
    ALWAYS    reduce using rule 97 (pre_block)
    ALWAYS    [reduce using rule 99 (pre_block)]
    RBRACE    reduce using rule 97 (pre_block)
    RBRACE    [reduce using rule 99 (pre_block)]
    $default  reduce using rule 97 (pre_block)

    while_body  go to state 168
    pre_block   go to state 169


state 152

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 170


state 153

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   87 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    SEMICOLON           shift, and go to state 171


state 154

   89 for_condition: expression SEMICOLON .

    $default  reduce using rule 89 (for_condition)


state 155

   91 for_increment: IDENTIFIER . EQUALS expression
   92              | IDENTIFIER . INCREMENT
   93              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 172
    INCREMENT  shift, and go to state 173
    DECREMENT  shift, and go to state 174


state 156

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 175


state 157

   23 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 176


state 158

   81 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 81 (function_call_statement)


state 159

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   84 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    $default  reduce using rule 84 (argument_list)


state 160

   30 var_decl: IDENTIFIER COLON TYPE EQUALS value .

    $default  reduce using rule 30 (var_decl)


state 161

   31 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 177


state 162

   77 param: LESS_THAN . var_declaration_without_semicolon GREATER_THAN

    VAR  shift, and go to state 7

    var_declaration_without_semicolon  go to state 178


state 163

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   75 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 179
    COMMA        shift, and go to state 180


state 164

   76 param_list: param .

    $default  reduce using rule 76 (param_list)


state 165

   80 function_body: statement .

    $default  reduce using rule 80 (function_body)


state 166

   41 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   42                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 181
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 167

   98 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 183


state 168

   95 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 184


state 169

   96 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 185

    POST      reduce using rule 100 (body_block)
    POST      [reduce using rule 102 (body_block)]
    ALWAYS    reduce using rule 100 (body_block)
    ALWAYS    [reduce using rule 102 (body_block)]
    RBRACE    reduce using rule 100 (body_block)
    RBRACE    [reduce using rule 102 (body_block)]
    $default  reduce using rule 100 (body_block)

    body_block  go to state 186


state 170

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 187


state 171

   87 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 87 (for_init)


state 172

   91 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 188


state 173

   92 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 92 (for_increment)


state 174

   93 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 93 (for_increment)


state 175

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 189


state 176

   23 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 23 (input_statement)


state 177

   31 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 31 (var_decl)


state 178

   77 param: LESS_THAN var_declaration_without_semicolon . GREATER_THAN

    GREATER_THAN  shift, and go to state 190


state 179

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 191


state 180

   75 param_list: param_list COMMA . param

    LESS_THAN  shift, and go to state 162

    param  go to state 192


state 181

   41 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   42                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 43 (else_if_clauses)

    else_if_clauses  go to state 193


state 182

   79 function_body: function_body statement .

    $default  reduce using rule 79 (function_body)


state 183

   98 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 194
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 184

   95 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 95 (while_statement)


state 185

  101 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 195


state 186

   96 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 196

    ALWAYS    reduce using rule 103 (post_block)
    ALWAYS    [reduce using rule 105 (post_block)]
    RBRACE    reduce using rule 103 (post_block)
    RBRACE    [reduce using rule 105 (post_block)]
    $default  reduce using rule 103 (post_block)

    post_block  go to state 197


state 187

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 198
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 188

   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression
   91 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86

    $default  reduce using rule 91 (for_increment)


state 189

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 199
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 190

   77 param: LESS_THAN var_declaration_without_semicolon GREATER_THAN .

    $default  reduce using rule 77 (param)


state 191

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 200
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 192

   75 param_list: param_list COMMA param .

    $default  reduce using rule 75 (param_list)


state 193

   41 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   42                      | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   44 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 201

    $default  reduce using rule 41 (conditional_statement)


state 194

   79 function_body: function_body . statement
   98 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 202
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 195

  101 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 203
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 196

  104 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 204


state 197

   96 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 205

    RBRACE    reduce using rule 106 (always_block)
    RBRACE    [reduce using rule 108 (always_block)]
    $default  reduce using rule 106 (always_block)

    always_block  go to state 206


state 198

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 207
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 199

   79 function_body: function_body . statement
   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 208
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 200

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 209
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 201

   42 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   44 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 210
    LBRACE  shift, and go to state 211


state 202

   98 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 98 (pre_block)


state 203

   79 function_body: function_body . statement
  101 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 212
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 204

  104 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 213
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 205

  107 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 214


state 206

   96 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 96 (while_body)


state 207

   73 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 73 (function_declaration)


state 208

   85 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 85 (for_statement)


state 209

   72 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 72 (function_declaration)


state 210

   44 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 215


state 211

   42 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 216
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 212

  101 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 101 (body_block)


state 213

   79 function_body: function_body . statement
  104 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 217
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 214

  107 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 218
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 215

   44 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 39
    OPEN_PAREN      shift, and go to state 40
    DOUBLE          shift, and go to state 41
    FLOAT           shift, and go to state 42
    INTEGER         shift, and go to state 43
    BOOL            shift, and go to state 44
    CHAR_LITERAL    shift, and go to state 45
    STRING_LITERAL  shift, and go to state 46
    IDENTIFIER      shift, and go to state 47

    expression  go to state 219


state 216

   42 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 220
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 217

  104 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 104 (post_block)


state 218

   79 function_body: function_body . statement
  107 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 221
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 219

   44 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE
   54 expression: expression . EQUALS expression
   55           | expression . OR_OP expression
   56           | expression . AND_OP expression
   57           | expression . EQUALS_EQUALS expression
   58           | expression . NOT_EQUAL expression
   59           | expression . LESS_THAN expression
   60           | expression . LESS_THAN_EQUAL expression
   61           | expression . GREATER_THAN expression
   62           | expression . GREATER_THAN_EQUAL expression
   63           | expression . PLUS expression
   64           | expression . MINUS expression
   65           | expression . MULT expression
   66           | expression . DIV expression
   67           | expression . MOD expression

    EQUALS              shift, and go to state 73
    OR_OP               shift, and go to state 74
    AND_OP              shift, and go to state 75
    NOT_EQUAL           shift, and go to state 76
    EQUALS_EQUALS       shift, and go to state 77
    GREATER_THAN_EQUAL  shift, and go to state 78
    GREATER_THAN        shift, and go to state 79
    LESS_THAN_EQUAL     shift, and go to state 80
    LESS_THAN           shift, and go to state 81
    MINUS               shift, and go to state 82
    PLUS                shift, and go to state 83
    MOD                 shift, and go to state 84
    DIV                 shift, and go to state 85
    MULT                shift, and go to state 86
    CLOSE_PAREN         shift, and go to state 222


state 220

   42 conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 42 (conditional_statement)


state 221

  107 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 107 (always_block)


state 222

   44 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 223


state 223

   44 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    IMPORT      [reduce using rule 78 (function_body)]
    PRINT       [reduce using rule 78 (function_body)]
    VAR         [reduce using rule 78 (function_body)]
    RETURN      [reduce using rule 78 (function_body)]
    FUNCTION    [reduce using rule 78 (function_body)]
    IF          [reduce using rule 78 (function_body)]
    WHILE       [reduce using rule 78 (function_body)]
    MAIN        [reduce using rule 78 (function_body)]
    FOR         [reduce using rule 78 (function_body)]
    BREAK       [reduce using rule 78 (function_body)]
    CONTINUE    [reduce using rule 78 (function_body)]
    IDENTIFIER  [reduce using rule 78 (function_body)]
    $default    reduce using rule 78 (function_body)

    statement                          go to state 165
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_body                      go to state 224
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 224

   44 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE
   79 function_body: function_body . statement

    IMPORT      shift, and go to state 5
    PRINT       shift, and go to state 6
    VAR         shift, and go to state 7
    RETURN      shift, and go to state 8
    FUNCTION    shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    MAIN        shift, and go to state 12
    FOR         shift, and go to state 13
    BREAK       shift, and go to state 14
    CONTINUE    shift, and go to state 15
    RBRACE      shift, and go to state 225
    IDENTIFIER  shift, and go to state 16

    statement                          go to state 182
    import_statement                   go to state 18
    continue_statement                 go to state 19
    print_statement                    go to state 20
    input_statement                    go to state 21
    var_declaration                    go to state 22
    var_declaration_without_semicolon  go to state 23
    assignment_statement               go to state 24
    return_statement                   go to state 25
    conditional_statement              go to state 26
    function_declaration               go to state 27
    function_call_statement            go to state 28
    for_statement                      go to state 29
    while_statement                    go to state 30
    increment_statement                go to state 31
    decrement_statement                go to state 32
    break_statement                    go to state 33


state 225

   44 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 44 (else_if_clauses)
