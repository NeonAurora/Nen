Nonterminals useless in grammar

   value_list


Terminals unused in grammar

   END_PROGRAM
   INVERTED_COMMA
   DOUBLE_QUOTE
   BODY_START
   BODY_END
   SINGLE_LINE_COMMENT_START
   MULTI_LINE_COMMENT_START
   MULTI_LINE_COMMENT_END
   ARRAY_INIT
   END


Rules useless in grammar

  123 value_list: INTEGER
  124           | value_list COMMA INTEGER


Rules useless in parser due to conflicts

   51 default_clause: /* empty */

  110 pre_block: /* empty */

  113 body_block: /* empty */

  116 post_block: /* empty */

  119 always_block: /* empty */


State 67 conflicts: 1 shift/reduce
State 72 conflicts: 14 shift/reduce
State 159 conflicts: 14 shift/reduce
State 160 conflicts: 4 reduce/reduce
State 166 conflicts: 1 shift/reduce
State 180 conflicts: 3 reduce/reduce
State 188 conflicts: 1 reduce/reduce
State 197 conflicts: 14 shift/reduce
State 200 conflicts: 2 reduce/reduce
State 201 conflicts: 14 shift/reduce
State 203 conflicts: 14 shift/reduce
State 209 conflicts: 14 shift/reduce
State 213 conflicts: 14 shift/reduce
State 215 conflicts: 1 reduce/reduce
State 218 conflicts: 14 shift/reduce
State 219 conflicts: 14 shift/reduce
State 225 conflicts: 14 shift/reduce
State 234 conflicts: 14 shift/reduce
State 237 conflicts: 14 shift/reduce
State 247 conflicts: 14 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program statement

    3 statement: import_statement
    4          | print_statement
    5          | input_statement
    6          | var_declaration
    7          | assignment_statement
    8          | function_declaration
    9          | return_statement
   10          | conditional_statement
   11          | for_statement
   12          | while_statement
   13          | break_statement
   14          | increment_statement
   15          | decrement_statement
   16          | function_call_statement
   17          | continue_statement
   18          | sort_statement

   19 sort_statement: SORT_ARRAY OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

   20 import_statement: IMPORT PATH

   21 continue_statement: CONTINUE SEMICOLON

   22 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   23                | PRINT OPEN_PAREN expression CLOSE_PAREN SEMICOLON

   24 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

   25 var_declaration: var_declaration_without_semicolon SEMICOLON

   26 var_declaration_without_semicolon: VAR var_declaration_list

   27 var_declaration_list: var_decl
   28                     | var_declaration_list COMMA var_decl

   29 var_decl: IDENTIFIER
   30         | IDENTIFIER COLON TYPE
   31         | IDENTIFIER COLON TYPE EQUALS value
   32         | IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET
   33         | IDENTIFIER EQUALS value

   34 value: INTEGER
   35      | FLOAT
   36      | STRING_LITERAL
   37      | CHAR_LITERAL
   38      | DOUBLE

   39 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON
   40                     | IDENTIFIER EQUALS ARRAY_LITERAL SEMICOLON

   41 return_statement: RETURN expression SEMICOLON

   42 conditional_statement: if_conditional_statement
   43                      | switch_conditional_statement

   44 switch_conditional_statement: SWITCH OPEN_PAREN expression CLOSE_PAREN LBRACE case_clauses default_clause RBRACE

   45 case_clauses: /* empty */
   46             | case_clauses case_clause
   47             | case_clause

   48 case_clause: CASE expression COLON function_body break_statement

   49 default_clause: /* empty */
   50               | DEFAULT COLON function_body
   51               | /* empty */

   52 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   53                         | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

   54 else_if_clauses: /* empty */
   55                | else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

   56 expression: INTEGER
   57           | FLOAT
   58           | STRING_LITERAL
   59           | CHAR_LITERAL
   60           | DOUBLE
   61           | BOOL
   62           | IDENTIFIER
   63           | IDENTIFIER LBRACKET expression RBRACKET
   64           | IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN
   65           | expression EQUALS expression
   66           | expression OR_OP expression
   67           | expression AND_OP expression
   68           | expression EQUALS_EQUALS expression
   69           | expression NOT_EQUAL expression
   70           | expression LESS_THAN expression
   71           | expression LESS_THAN_EQUAL expression
   72           | expression GREATER_THAN expression
   73           | expression GREATER_THAN_EQUAL expression
   74           | expression PLUS expression
   75           | expression MINUS expression
   76           | expression MULT expression
   77           | expression DIV expression
   78           | expression MOD expression
   79           | NOT_OP expression
   80           | OPEN_PAREN expression CLOSE_PAREN
   81           | IDENTIFIER INCREMENT
   82           | IDENTIFIER DECREMENT

   83 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE
   84                     | MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

   85 param_list: /* empty */
   86           | param_list COMMA param
   87           | param

   88 param: LESS_THAN var_declaration_without_semicolon GREATER_THAN

   89 function_body: /* empty */
   90              | function_body statement
   91              | statement

   92 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON

   93 argument_list: /* empty */
   94              | expression
   95              | argument_list COMMA expression

   96 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

   97 for_init: var_declaration
   98         | IDENTIFIER EQUALS expression SEMICOLON
   99         | SEMICOLON

  100 for_condition: expression SEMICOLON
  101              | SEMICOLON

  102 for_increment: IDENTIFIER EQUALS expression
  103              | IDENTIFIER INCREMENT
  104              | IDENTIFIER DECREMENT
  105              | /* empty */

  106 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE

  107 while_body: pre_block body_block post_block always_block

  108 pre_block: /* empty */
  109          | PRE LBRACE function_body RBRACE
  110          | /* empty */

  111 body_block: /* empty */
  112           | BODY LBRACE function_body RBRACE
  113           | /* empty */

  114 post_block: /* empty */
  115           | POST LBRACE function_body RBRACE
  116           | /* empty */

  117 always_block: /* empty */
  118             | ALWAYS LBRACE function_body RBRACE
  119             | /* empty */

  120 increment_statement: IDENTIFIER INCREMENT SEMICOLON

  121 decrement_statement: IDENTIFIER DECREMENT SEMICOLON

  122 break_statement: BREAK SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
EQUALS (258) 31 33 39 40 65 98 102
OR_OP (259) 66
AND_OP (260) 67
NOT_EQUAL (261) 69
EQUALS_EQUALS (262) 68
GREATER_THAN_EQUAL (263) 73
GREATER_THAN (264) 72 88 106
LESS_THAN_EQUAL (265) 71
LESS_THAN (266) 70 88 106
MINUS (267) 75
PLUS (268) 74
MOD (269) 78
DIV (270) 77
MULT (271) 76
IMPORT (272) 20
PRINT (273) 22 23
VAR (274) 26
RETURN (275) 41
FUNCTION (276) 83 84
IF (277) 52 53 55
ELSE (278) 53 55
WHILE (279) 106
MAIN (280) 84
END_PROGRAM (281)
FOR (282) 96
PRE (283) 109
POST (284) 115
BODY (285) 112
ALWAYS (286) 118
BREAK (287) 122
CONTINUE (288) 21
SWITCH (289) 44
CASE (290) 48
DEFAULT (291) 50
INPUT_OP (292) 24
NOT_OP (293) 79
INCREMENT (294) 81 103 120
DECREMENT (295) 82 104 121
OPEN_PAREN (296) 19 22 23 24 44 52 53 55 64 80 83 84 92 96
CLOSE_PAREN (297) 19 22 23 24 44 52 53 55 64 80 83 84 92 96
LBRACKET (298) 32 63
RBRACKET (299) 32 63
LBRACE (300) 44 52 53 55 83 84 96 106 109 112 115 118
RBRACE (301) 44 52 53 55 83 84 96 106 109 112 115 118
SEMICOLON (302) 19 21 22 23 24 25 39 40 41 92 98 99 100 101 120 121
    122
COMMA (303) 28 86 95
INVERTED_COMMA (304)
DOUBLE_QUOTE (305)
COLON (306) 30 31 32 48 50 83 84
BODY_START (307)
BODY_END (308)
DOUBLE (309) 38 60
FLOAT (310) 35 57
INTEGER (311) 32 34 56
BOOL (312) 61
CHAR_LITERAL (313) 37 59
STRING_LITERAL (314) 22 24 36 58
IDENTIFIER (315) 19 24 29 30 31 32 33 39 40 62 63 64 81 82 83 92 98
    102 103 104 120 121
PATH (316) 20
TYPE (317) 30 31 32 83 84
ARRAY_LITERAL (318) 40
SINGLE_LINE_COMMENT_START (319)
MULTI_LINE_COMMENT_START (320)
MULTI_LINE_COMMENT_END (321)
ARRAY_INIT (322)
END (323)
SORT_ARRAY (324) 19


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
program (71)
    on left: 1 2, on right: 0 2
statement (72)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2
    90 91
sort_statement (73)
    on left: 19, on right: 18
import_statement (74)
    on left: 20, on right: 3
continue_statement (75)
    on left: 21, on right: 17
print_statement (76)
    on left: 22 23, on right: 4
input_statement (77)
    on left: 24, on right: 5
var_declaration (78)
    on left: 25, on right: 6 97
var_declaration_without_semicolon (79)
    on left: 26, on right: 25 88
var_declaration_list (80)
    on left: 27 28, on right: 26 28
var_decl (81)
    on left: 29 30 31 32 33, on right: 27 28
value (82)
    on left: 34 35 36 37 38, on right: 31 33
assignment_statement (83)
    on left: 39 40, on right: 7
return_statement (84)
    on left: 41, on right: 9
conditional_statement (85)
    on left: 42 43, on right: 10
switch_conditional_statement (86)
    on left: 44, on right: 43
case_clauses (87)
    on left: 45 46 47, on right: 44 46
case_clause (88)
    on left: 48, on right: 46 47
default_clause (89)
    on left: 49 50 51, on right: 44
if_conditional_statement (90)
    on left: 52 53, on right: 42
else_if_clauses (91)
    on left: 54 55, on right: 52 53 55
expression (92)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
    74 75 76 77 78 79 80 81 82, on right: 23 39 41 44 48 52 53 55 63
    65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 94 95 98 100 102
    106
function_declaration (93)
    on left: 83 84, on right: 8
param_list (94)
    on left: 85 86 87, on right: 83 86
param (95)
    on left: 88, on right: 86 87
function_body (96)
    on left: 89 90 91, on right: 48 50 52 53 55 83 84 90 96 109 112
    115 118
function_call_statement (97)
    on left: 92, on right: 16
argument_list (98)
    on left: 93 94 95, on right: 64 92 95
for_statement (99)
    on left: 96, on right: 11
for_init (100)
    on left: 97 98 99, on right: 96
for_condition (101)
    on left: 100 101, on right: 96
for_increment (102)
    on left: 102 103 104 105, on right: 96
while_statement (103)
    on left: 106, on right: 12
while_body (104)
    on left: 107, on right: 106
pre_block (105)
    on left: 108 109 110, on right: 107
body_block (106)
    on left: 111 112 113, on right: 107
post_block (107)
    on left: 114 115 116, on right: 107
always_block (108)
    on left: 117 118 119, on right: 107
increment_statement (109)
    on left: 120, on right: 14
decrement_statement (110)
    on left: 121, on right: 15
break_statement (111)
    on left: 122, on right: 13 48


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 2
    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 17
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 2

    0 $accept: program $end .

    $default  accept


state 3

   20 import_statement: IMPORT . PATH

    PATH  shift, and go to state 37


state 4

   22 print_statement: PRINT . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   23                | PRINT . OPEN_PAREN expression CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 38


state 5

   26 var_declaration_without_semicolon: VAR . var_declaration_list

    IDENTIFIER  shift, and go to state 39

    var_declaration_list  go to state 40
    var_decl              go to state 41


state 6

   41 return_statement: RETURN . expression SEMICOLON

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 51


state 7

   83 function_declaration: FUNCTION . IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 52


state 8

   52 if_conditional_statement: IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   53                         | IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 53


state 9

  106 while_statement: WHILE . LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE

    LESS_THAN  shift, and go to state 54


state 10

   84 function_declaration: MAIN . FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    FUNCTION  shift, and go to state 55


state 11

   96 for_statement: FOR . OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 56


state 12

  122 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 57


state 13

   21 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 58


state 14

   44 switch_conditional_statement: SWITCH . OPEN_PAREN expression CLOSE_PAREN LBRACE case_clauses default_clause RBRACE

    OPEN_PAREN  shift, and go to state 59


state 15

   24 input_statement: IDENTIFIER . INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON
   39 assignment_statement: IDENTIFIER . EQUALS expression SEMICOLON
   40                     | IDENTIFIER . EQUALS ARRAY_LITERAL SEMICOLON
   92 function_call_statement: IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON
  120 increment_statement: IDENTIFIER . INCREMENT SEMICOLON
  121 decrement_statement: IDENTIFIER . DECREMENT SEMICOLON

    EQUALS      shift, and go to state 60
    INPUT_OP    shift, and go to state 61
    INCREMENT   shift, and go to state 62
    DECREMENT   shift, and go to state 63
    OPEN_PAREN  shift, and go to state 64


state 16

   19 sort_statement: SORT_ARRAY . OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 65


state 17

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 18

   18 statement: sort_statement .

    $default  reduce using rule 18 (statement)


state 19

    3 statement: import_statement .

    $default  reduce using rule 3 (statement)


state 20

   17 statement: continue_statement .

    $default  reduce using rule 17 (statement)


state 21

    4 statement: print_statement .

    $default  reduce using rule 4 (statement)


state 22

    5 statement: input_statement .

    $default  reduce using rule 5 (statement)


state 23

    6 statement: var_declaration .

    $default  reduce using rule 6 (statement)


state 24

   25 var_declaration: var_declaration_without_semicolon . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 25

    7 statement: assignment_statement .

    $default  reduce using rule 7 (statement)


state 26

    9 statement: return_statement .

    $default  reduce using rule 9 (statement)


state 27

   10 statement: conditional_statement .

    $default  reduce using rule 10 (statement)


state 28

   43 conditional_statement: switch_conditional_statement .

    $default  reduce using rule 43 (conditional_statement)


state 29

   42 conditional_statement: if_conditional_statement .

    $default  reduce using rule 42 (conditional_statement)


state 30

    8 statement: function_declaration .

    $default  reduce using rule 8 (statement)


state 31

   16 statement: function_call_statement .

    $default  reduce using rule 16 (statement)


state 32

   11 statement: for_statement .

    $default  reduce using rule 11 (statement)


state 33

   12 statement: while_statement .

    $default  reduce using rule 12 (statement)


state 34

   14 statement: increment_statement .

    $default  reduce using rule 14 (statement)


state 35

   15 statement: decrement_statement .

    $default  reduce using rule 15 (statement)


state 36

   13 statement: break_statement .

    $default  reduce using rule 13 (statement)


state 37

   20 import_statement: IMPORT PATH .

    $default  reduce using rule 20 (import_statement)


state 38

   22 print_statement: PRINT OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON
   23                | PRINT OPEN_PAREN . expression CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 50

    expression  go to state 68


state 39

   29 var_decl: IDENTIFIER .
   30         | IDENTIFIER . COLON TYPE
   31         | IDENTIFIER . COLON TYPE EQUALS value
   32         | IDENTIFIER . COLON TYPE LBRACKET INTEGER RBRACKET
   33         | IDENTIFIER . EQUALS value

    EQUALS  shift, and go to state 69
    COLON   shift, and go to state 70

    $default  reduce using rule 29 (var_decl)


state 40

   26 var_declaration_without_semicolon: VAR var_declaration_list .
   28 var_declaration_list: var_declaration_list . COMMA var_decl

    COMMA  shift, and go to state 71

    $default  reduce using rule 26 (var_declaration_without_semicolon)


state 41

   27 var_declaration_list: var_decl .

    $default  reduce using rule 27 (var_declaration_list)


state 42

   79 expression: NOT_OP . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 72


state 43

   80 expression: OPEN_PAREN . expression CLOSE_PAREN

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 73


state 44

   60 expression: DOUBLE .

    $default  reduce using rule 60 (expression)


state 45

   57 expression: FLOAT .

    $default  reduce using rule 57 (expression)


state 46

   56 expression: INTEGER .

    $default  reduce using rule 56 (expression)


state 47

   61 expression: BOOL .

    $default  reduce using rule 61 (expression)


state 48

   59 expression: CHAR_LITERAL .

    $default  reduce using rule 59 (expression)


state 49

   58 expression: STRING_LITERAL .

    $default  reduce using rule 58 (expression)


state 50

   62 expression: IDENTIFIER .
   63           | IDENTIFIER . LBRACKET expression RBRACKET
   64           | IDENTIFIER . OPEN_PAREN argument_list CLOSE_PAREN
   81           | IDENTIFIER . INCREMENT
   82           | IDENTIFIER . DECREMENT

    INCREMENT   shift, and go to state 74
    DECREMENT   shift, and go to state 75
    OPEN_PAREN  shift, and go to state 76
    LBRACKET    shift, and go to state 77

    $default  reduce using rule 62 (expression)


state 51

   41 return_statement: RETURN expression . SEMICOLON
   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    SEMICOLON           shift, and go to state 92


state 52

   83 function_declaration: FUNCTION IDENTIFIER . COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 93


state 53

   52 if_conditional_statement: IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   53                         | IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 94


state 54

  106 while_statement: WHILE LESS_THAN . expression GREATER_THAN LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 95


state 55

   84 function_declaration: MAIN FUNCTION . COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    COLON  shift, and go to state 96


state 56

   96 for_statement: FOR OPEN_PAREN . for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    VAR         shift, and go to state 5
    SEMICOLON   shift, and go to state 97
    IDENTIFIER  shift, and go to state 98

    var_declaration                    go to state 99
    var_declaration_without_semicolon  go to state 24
    for_init                           go to state 100


state 57

  122 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 122 (break_statement)


state 58

   21 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 21 (continue_statement)


state 59

   44 switch_conditional_statement: SWITCH OPEN_PAREN . expression CLOSE_PAREN LBRACE case_clauses default_clause RBRACE

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 101


state 60

   39 assignment_statement: IDENTIFIER EQUALS . expression SEMICOLON
   40                     | IDENTIFIER EQUALS . ARRAY_LITERAL SEMICOLON

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50
    ARRAY_LITERAL   shift, and go to state 102

    expression  go to state 103


state 61

   24 input_statement: IDENTIFIER INPUT_OP . OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON

    OPEN_PAREN  shift, and go to state 104


state 62

  120 increment_statement: IDENTIFIER INCREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 105


state 63

  121 decrement_statement: IDENTIFIER DECREMENT . SEMICOLON

    SEMICOLON  shift, and go to state 106


state 64

   92 function_call_statement: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN SEMICOLON

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    $default  reduce using rule 93 (argument_list)

    expression     go to state 107
    argument_list  go to state 108


state 65

   19 sort_statement: SORT_ARRAY OPEN_PAREN . IDENTIFIER CLOSE_PAREN SEMICOLON

    IDENTIFIER  shift, and go to state 109


state 66

   25 var_declaration: var_declaration_without_semicolon SEMICOLON .

    $default  reduce using rule 25 (var_declaration)


state 67

   22 print_statement: PRINT OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON
   58 expression: STRING_LITERAL .

    CLOSE_PAREN  shift, and go to state 110

    CLOSE_PAREN  [reduce using rule 58 (expression)]
    $default     reduce using rule 58 (expression)


state 68

   23 print_statement: PRINT OPEN_PAREN expression . CLOSE_PAREN SEMICOLON
   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    CLOSE_PAREN         shift, and go to state 111


state 69

   33 var_decl: IDENTIFIER EQUALS . value

    DOUBLE          shift, and go to state 112
    FLOAT           shift, and go to state 113
    INTEGER         shift, and go to state 114
    CHAR_LITERAL    shift, and go to state 115
    STRING_LITERAL  shift, and go to state 116

    value  go to state 117


state 70

   30 var_decl: IDENTIFIER COLON . TYPE
   31         | IDENTIFIER COLON . TYPE EQUALS value
   32         | IDENTIFIER COLON . TYPE LBRACKET INTEGER RBRACKET

    TYPE  shift, and go to state 118


state 71

   28 var_declaration_list: var_declaration_list COMMA . var_decl

    IDENTIFIER  shift, and go to state 39

    var_decl  go to state 119


state 72

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
   79           | NOT_OP expression .

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    EQUALS              [reduce using rule 79 (expression)]
    OR_OP               [reduce using rule 79 (expression)]
    AND_OP              [reduce using rule 79 (expression)]
    NOT_EQUAL           [reduce using rule 79 (expression)]
    EQUALS_EQUALS       [reduce using rule 79 (expression)]
    GREATER_THAN_EQUAL  [reduce using rule 79 (expression)]
    GREATER_THAN        [reduce using rule 79 (expression)]
    LESS_THAN_EQUAL     [reduce using rule 79 (expression)]
    LESS_THAN           [reduce using rule 79 (expression)]
    MINUS               [reduce using rule 79 (expression)]
    PLUS                [reduce using rule 79 (expression)]
    MOD                 [reduce using rule 79 (expression)]
    DIV                 [reduce using rule 79 (expression)]
    MULT                [reduce using rule 79 (expression)]
    $default            reduce using rule 79 (expression)


state 73

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
   80           | OPEN_PAREN expression . CLOSE_PAREN

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    CLOSE_PAREN         shift, and go to state 120


state 74

   81 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 81 (expression)


state 75

   82 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 82 (expression)


state 76

   64 expression: IDENTIFIER OPEN_PAREN . argument_list CLOSE_PAREN

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    $default  reduce using rule 93 (argument_list)

    expression     go to state 107
    argument_list  go to state 121


state 77

   63 expression: IDENTIFIER LBRACKET . expression RBRACKET

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 122


state 78

   65 expression: expression EQUALS . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 123


state 79

   66 expression: expression OR_OP . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 124


state 80

   67 expression: expression AND_OP . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 125


state 81

   69 expression: expression NOT_EQUAL . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 126


state 82

   68 expression: expression EQUALS_EQUALS . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 127


state 83

   73 expression: expression GREATER_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 128


state 84

   72 expression: expression GREATER_THAN . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 129


state 85

   71 expression: expression LESS_THAN_EQUAL . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 130


state 86

   70 expression: expression LESS_THAN . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 131


state 87

   75 expression: expression MINUS . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 132


state 88

   74 expression: expression PLUS . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 133


state 89

   78 expression: expression MOD . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 134


state 90

   77 expression: expression DIV . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 135


state 91

   76 expression: expression MULT . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 136


state 92

   41 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 41 (return_statement)


state 93

   83 function_declaration: FUNCTION IDENTIFIER COLON . TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 137


state 94

   52 if_conditional_statement: IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses
   53                         | IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    CLOSE_PAREN         shift, and go to state 138


state 95

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
  106 while_statement: WHILE LESS_THAN expression . GREATER_THAN LBRACE while_body RBRACE

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 139
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91


state 96

   84 function_declaration: MAIN FUNCTION COLON . TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    TYPE  shift, and go to state 140


state 97

   99 for_init: SEMICOLON .

    $default  reduce using rule 99 (for_init)


state 98

   98 for_init: IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 141


state 99

   97 for_init: var_declaration .

    $default  reduce using rule 97 (for_init)


state 100

   96 for_statement: FOR OPEN_PAREN for_init . for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    SEMICOLON       shift, and go to state 142
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression     go to state 143
    for_condition  go to state 144


state 101

   44 switch_conditional_statement: SWITCH OPEN_PAREN expression . CLOSE_PAREN LBRACE case_clauses default_clause RBRACE
   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    CLOSE_PAREN         shift, and go to state 145


state 102

   40 assignment_statement: IDENTIFIER EQUALS ARRAY_LITERAL . SEMICOLON

    SEMICOLON  shift, and go to state 146


state 103

   39 assignment_statement: IDENTIFIER EQUALS expression . SEMICOLON
   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    SEMICOLON           shift, and go to state 147


state 104

   24 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN . STRING_LITERAL CLOSE_PAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 148


state 105

  120 increment_statement: IDENTIFIER INCREMENT SEMICOLON .

    $default  reduce using rule 120 (increment_statement)


state 106

  121 decrement_statement: IDENTIFIER DECREMENT SEMICOLON .

    $default  reduce using rule 121 (decrement_statement)


state 107

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
   94 argument_list: expression .

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    $default  reduce using rule 94 (argument_list)


state 108

   92 function_call_statement: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN SEMICOLON
   95 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 149
    COMMA        shift, and go to state 150


state 109

   19 sort_statement: SORT_ARRAY OPEN_PAREN IDENTIFIER . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 151


state 110

   22 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 152


state 111

   23 print_statement: PRINT OPEN_PAREN expression CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 153


state 112

   38 value: DOUBLE .

    $default  reduce using rule 38 (value)


state 113

   35 value: FLOAT .

    $default  reduce using rule 35 (value)


state 114

   34 value: INTEGER .

    $default  reduce using rule 34 (value)


state 115

   37 value: CHAR_LITERAL .

    $default  reduce using rule 37 (value)


state 116

   36 value: STRING_LITERAL .

    $default  reduce using rule 36 (value)


state 117

   33 var_decl: IDENTIFIER EQUALS value .

    $default  reduce using rule 33 (var_decl)


state 118

   30 var_decl: IDENTIFIER COLON TYPE .
   31         | IDENTIFIER COLON TYPE . EQUALS value
   32         | IDENTIFIER COLON TYPE . LBRACKET INTEGER RBRACKET

    EQUALS    shift, and go to state 154
    LBRACKET  shift, and go to state 155

    $default  reduce using rule 30 (var_decl)


state 119

   28 var_declaration_list: var_declaration_list COMMA var_decl .

    $default  reduce using rule 28 (var_declaration_list)


state 120

   80 expression: OPEN_PAREN expression CLOSE_PAREN .

    $default  reduce using rule 80 (expression)


state 121

   64 expression: IDENTIFIER OPEN_PAREN argument_list . CLOSE_PAREN
   95 argument_list: argument_list . COMMA expression

    CLOSE_PAREN  shift, and go to state 156
    COMMA        shift, and go to state 150


state 122

   63 expression: IDENTIFIER LBRACKET expression . RBRACKET
   65           | expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    RBRACKET            shift, and go to state 157


state 123

   65 expression: expression . EQUALS expression
   65           | expression EQUALS expression .
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    $default  reduce using rule 65 (expression)


state 124

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   66           | expression OR_OP expression .
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    $default  reduce using rule 66 (expression)


state 125

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   67           | expression AND_OP expression .
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    $default  reduce using rule 67 (expression)


state 126

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   69           | expression NOT_EQUAL expression .
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    $default  reduce using rule 69 (expression)


state 127

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   68           | expression EQUALS_EQUALS expression .
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    $default  reduce using rule 68 (expression)


state 128

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   73           | expression GREATER_THAN_EQUAL expression .
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    MINUS  shift, and go to state 87
    PLUS   shift, and go to state 88
    MOD    shift, and go to state 89
    DIV    shift, and go to state 90
    MULT   shift, and go to state 91

    $default  reduce using rule 73 (expression)


state 129

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   72           | expression GREATER_THAN expression .
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    MINUS  shift, and go to state 87
    PLUS   shift, and go to state 88
    MOD    shift, and go to state 89
    DIV    shift, and go to state 90
    MULT   shift, and go to state 91

    $default  reduce using rule 72 (expression)


state 130

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   71           | expression LESS_THAN_EQUAL expression .
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    MINUS  shift, and go to state 87
    PLUS   shift, and go to state 88
    MOD    shift, and go to state 89
    DIV    shift, and go to state 90
    MULT   shift, and go to state 91

    $default  reduce using rule 71 (expression)


state 131

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   70           | expression LESS_THAN expression .
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    MINUS  shift, and go to state 87
    PLUS   shift, and go to state 88
    MOD    shift, and go to state 89
    DIV    shift, and go to state 90
    MULT   shift, and go to state 91

    $default  reduce using rule 70 (expression)


state 132

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   75           | expression MINUS expression .
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    MOD   shift, and go to state 89
    DIV   shift, and go to state 90
    MULT  shift, and go to state 91

    $default  reduce using rule 75 (expression)


state 133

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   74           | expression PLUS expression .
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    MOD   shift, and go to state 89
    DIV   shift, and go to state 90
    MULT  shift, and go to state 91

    $default  reduce using rule 74 (expression)


state 134

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
   78           | expression MOD expression .

    $default  reduce using rule 78 (expression)


state 135

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   77           | expression DIV expression .
   78           | expression . MOD expression

    $default  reduce using rule 77 (expression)


state 136

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   76           | expression MULT expression .
   77           | expression . DIV expression
   78           | expression . MOD expression

    $default  reduce using rule 76 (expression)


state 137

   83 function_declaration: FUNCTION IDENTIFIER COLON TYPE . OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 158


state 138

   52 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses
   53                         | IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    LBRACE  shift, and go to state 159


state 139

   72 expression: expression GREATER_THAN . expression
  106 while_statement: WHILE LESS_THAN expression GREATER_THAN . LBRACE while_body RBRACE

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    LBRACE          shift, and go to state 160
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 129


state 140

   84 function_declaration: MAIN FUNCTION COLON TYPE . OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 161


state 141

   98 for_init: IDENTIFIER EQUALS . expression SEMICOLON

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 162


state 142

  101 for_condition: SEMICOLON .

    $default  reduce using rule 101 (for_condition)


state 143

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
  100 for_condition: expression . SEMICOLON

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    SEMICOLON           shift, and go to state 163


state 144

   96 for_statement: FOR OPEN_PAREN for_init for_condition . for_increment CLOSE_PAREN LBRACE function_body RBRACE

    IDENTIFIER  shift, and go to state 164

    $default  reduce using rule 105 (for_increment)

    for_increment  go to state 165


state 145

   44 switch_conditional_statement: SWITCH OPEN_PAREN expression CLOSE_PAREN . LBRACE case_clauses default_clause RBRACE

    LBRACE  shift, and go to state 166


state 146

   40 assignment_statement: IDENTIFIER EQUALS ARRAY_LITERAL SEMICOLON .

    $default  reduce using rule 40 (assignment_statement)


state 147

   39 assignment_statement: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 39 (assignment_statement)


state 148

   24 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL . CLOSE_PAREN SEMICOLON

    CLOSE_PAREN  shift, and go to state 167


state 149

   92 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 168


state 150

   95 argument_list: argument_list COMMA . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 169


state 151

   19 sort_statement: SORT_ARRAY OPEN_PAREN IDENTIFIER CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 170


state 152

   22 print_statement: PRINT OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 22 (print_statement)


state 153

   23 print_statement: PRINT OPEN_PAREN expression CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 23 (print_statement)


state 154

   31 var_decl: IDENTIFIER COLON TYPE EQUALS . value

    DOUBLE          shift, and go to state 112
    FLOAT           shift, and go to state 113
    INTEGER         shift, and go to state 114
    CHAR_LITERAL    shift, and go to state 115
    STRING_LITERAL  shift, and go to state 116

    value  go to state 171


state 155

   32 var_decl: IDENTIFIER COLON TYPE LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 172


state 156

   64 expression: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN .

    $default  reduce using rule 64 (expression)


state 157

   63 expression: IDENTIFIER LBRACKET expression RBRACKET .

    $default  reduce using rule 63 (expression)


state 158

   83 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN . param_list CLOSE_PAREN LBRACE function_body RBRACE

    LESS_THAN  shift, and go to state 173

    $default  reduce using rule 85 (param_list)

    param_list  go to state 174
    param       go to state 175


state 159

   52 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses
   53                         | IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 177
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 160

  106 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE . while_body RBRACE

    PRE  shift, and go to state 178

    POST      reduce using rule 108 (pre_block)
    POST      [reduce using rule 110 (pre_block)]
    BODY      reduce using rule 108 (pre_block)
    BODY      [reduce using rule 110 (pre_block)]
    ALWAYS    reduce using rule 108 (pre_block)
    ALWAYS    [reduce using rule 110 (pre_block)]
    RBRACE    reduce using rule 108 (pre_block)
    RBRACE    [reduce using rule 110 (pre_block)]
    $default  reduce using rule 108 (pre_block)

    while_body  go to state 179
    pre_block   go to state 180


state 161

   84 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 181


state 162

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
   98 for_init: IDENTIFIER EQUALS expression . SEMICOLON

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    SEMICOLON           shift, and go to state 182


state 163

  100 for_condition: expression SEMICOLON .

    $default  reduce using rule 100 (for_condition)


state 164

  102 for_increment: IDENTIFIER . EQUALS expression
  103              | IDENTIFIER . INCREMENT
  104              | IDENTIFIER . DECREMENT

    EQUALS     shift, and go to state 183
    INCREMENT  shift, and go to state 184
    DECREMENT  shift, and go to state 185


state 165

   96 for_statement: FOR OPEN_PAREN for_init for_condition for_increment . CLOSE_PAREN LBRACE function_body RBRACE

    CLOSE_PAREN  shift, and go to state 186


state 166

   44 switch_conditional_statement: SWITCH OPEN_PAREN expression CLOSE_PAREN LBRACE . case_clauses default_clause RBRACE

    CASE  shift, and go to state 187

    CASE      [reduce using rule 45 (case_clauses)]
    $default  reduce using rule 45 (case_clauses)

    case_clauses  go to state 188
    case_clause   go to state 189


state 167

   24 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 190


state 168

   92 function_call_statement: IDENTIFIER OPEN_PAREN argument_list CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 92 (function_call_statement)


state 169

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
   95 argument_list: argument_list COMMA expression .

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    $default  reduce using rule 95 (argument_list)


state 170

   19 sort_statement: SORT_ARRAY OPEN_PAREN IDENTIFIER CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 19 (sort_statement)


state 171

   31 var_decl: IDENTIFIER COLON TYPE EQUALS value .

    $default  reduce using rule 31 (var_decl)


state 172

   32 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 191


state 173

   88 param: LESS_THAN . var_declaration_without_semicolon GREATER_THAN

    VAR  shift, and go to state 5

    var_declaration_without_semicolon  go to state 192


state 174

   83 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list . CLOSE_PAREN LBRACE function_body RBRACE
   86 param_list: param_list . COMMA param

    CLOSE_PAREN  shift, and go to state 193
    COMMA        shift, and go to state 194


state 175

   87 param_list: param .

    $default  reduce using rule 87 (param_list)


state 176

   91 function_body: statement .

    $default  reduce using rule 91 (function_body)


state 177

   52 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses
   53                         | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE else_if_clauses ELSE LBRACE function_body RBRACE
   90 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 195
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 178

  109 pre_block: PRE . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 197


state 179

  106 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body . RBRACE

    RBRACE  shift, and go to state 198


state 180

  107 while_body: pre_block . body_block post_block always_block

    BODY  shift, and go to state 199

    POST      reduce using rule 111 (body_block)
    POST      [reduce using rule 113 (body_block)]
    ALWAYS    reduce using rule 111 (body_block)
    ALWAYS    [reduce using rule 113 (body_block)]
    RBRACE    reduce using rule 111 (body_block)
    RBRACE    [reduce using rule 113 (body_block)]
    $default  reduce using rule 111 (body_block)

    body_block  go to state 200


state 181

   84 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 201


state 182

   98 for_init: IDENTIFIER EQUALS expression SEMICOLON .

    $default  reduce using rule 98 (for_init)


state 183

  102 for_increment: IDENTIFIER EQUALS . expression

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 202


state 184

  103 for_increment: IDENTIFIER INCREMENT .

    $default  reduce using rule 103 (for_increment)


state 185

  104 for_increment: IDENTIFIER DECREMENT .

    $default  reduce using rule 104 (for_increment)


state 186

   96 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 203


state 187

   48 case_clause: CASE . expression COLON function_body break_statement

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 204


state 188

   44 switch_conditional_statement: SWITCH OPEN_PAREN expression CLOSE_PAREN LBRACE case_clauses . default_clause RBRACE
   46 case_clauses: case_clauses . case_clause

    CASE     shift, and go to state 187
    DEFAULT  shift, and go to state 205

    RBRACE    reduce using rule 49 (default_clause)
    RBRACE    [reduce using rule 51 (default_clause)]
    $default  reduce using rule 49 (default_clause)

    case_clause     go to state 206
    default_clause  go to state 207


state 189

   47 case_clauses: case_clause .

    $default  reduce using rule 47 (case_clauses)


state 190

   24 input_statement: IDENTIFIER INPUT_OP OPEN_PAREN STRING_LITERAL CLOSE_PAREN SEMICOLON .

    $default  reduce using rule 24 (input_statement)


state 191

   32 var_decl: IDENTIFIER COLON TYPE LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 32 (var_decl)


state 192

   88 param: LESS_THAN var_declaration_without_semicolon . GREATER_THAN

    GREATER_THAN  shift, and go to state 208


state 193

   83 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 209


state 194

   86 param_list: param_list COMMA . param

    LESS_THAN  shift, and go to state 173

    param  go to state 210


state 195

   52 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses
   53                         | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE . else_if_clauses ELSE LBRACE function_body RBRACE

    $default  reduce using rule 54 (else_if_clauses)

    else_if_clauses  go to state 211


state 196

   90 function_body: function_body statement .

    $default  reduce using rule 90 (function_body)


state 197

  109 pre_block: PRE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 212
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 198

  106 while_statement: WHILE LESS_THAN expression GREATER_THAN LBRACE while_body RBRACE .

    $default  reduce using rule 106 (while_statement)


state 199

  112 body_block: BODY . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 213


state 200

  107 while_body: pre_block body_block . post_block always_block

    POST  shift, and go to state 214

    ALWAYS    reduce using rule 114 (post_block)
    ALWAYS    [reduce using rule 116 (post_block)]
    RBRACE    reduce using rule 114 (post_block)
    RBRACE    [reduce using rule 116 (post_block)]
    $default  reduce using rule 114 (post_block)

    post_block  go to state 215


state 201

   84 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 216
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 202

   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression
  102 for_increment: IDENTIFIER EQUALS expression .

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91

    $default  reduce using rule 102 (for_increment)


state 203

   96 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 217
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 204

   48 case_clause: CASE expression . COLON function_body break_statement
   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    COLON               shift, and go to state 218


state 205

   50 default_clause: DEFAULT . COLON function_body

    COLON  shift, and go to state 219


state 206

   46 case_clauses: case_clauses case_clause .

    $default  reduce using rule 46 (case_clauses)


state 207

   44 switch_conditional_statement: SWITCH OPEN_PAREN expression CLOSE_PAREN LBRACE case_clauses default_clause . RBRACE

    RBRACE  shift, and go to state 220


state 208

   88 param: LESS_THAN var_declaration_without_semicolon GREATER_THAN .

    $default  reduce using rule 88 (param)


state 209

   83 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 221
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 210

   86 param_list: param_list COMMA param .

    $default  reduce using rule 86 (param_list)


state 211

   52 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses .
   53                         | IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses . ELSE LBRACE function_body RBRACE
   55 else_if_clauses: else_if_clauses . ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    ELSE  shift, and go to state 222

    $default  reduce using rule 52 (if_conditional_statement)


state 212

   90 function_body: function_body . statement
  109 pre_block: PRE LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 223
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 213

  112 body_block: BODY LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 224
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 214

  115 post_block: POST . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 225


state 215

  107 while_body: pre_block body_block post_block . always_block

    ALWAYS  shift, and go to state 226

    RBRACE    reduce using rule 117 (always_block)
    RBRACE    [reduce using rule 119 (always_block)]
    $default  reduce using rule 117 (always_block)

    always_block  go to state 227


state 216

   84 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body . RBRACE
   90 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 228
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 217

   90 function_body: function_body . statement
   96 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 229
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 218

   48 case_clause: CASE expression COLON . function_body break_statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 230
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 219

   50 default_clause: DEFAULT COLON . function_body

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 231
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 220

   44 switch_conditional_statement: SWITCH OPEN_PAREN expression CLOSE_PAREN LBRACE case_clauses default_clause RBRACE .

    $default  reduce using rule 44 (switch_conditional_statement)


state 221

   83 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body . RBRACE
   90 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 232
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 222

   53 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE . LBRACE function_body RBRACE
   55 else_if_clauses: else_if_clauses ELSE . IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    IF      shift, and go to state 233
    LBRACE  shift, and go to state 234


state 223

  109 pre_block: PRE LBRACE function_body RBRACE .

    $default  reduce using rule 109 (pre_block)


state 224

   90 function_body: function_body . statement
  112 body_block: BODY LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 235
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 225

  115 post_block: POST LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 236
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 226

  118 always_block: ALWAYS . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 237


state 227

  107 while_body: pre_block body_block post_block always_block .

    $default  reduce using rule 107 (while_body)


state 228

   84 function_declaration: MAIN FUNCTION COLON TYPE OPEN_PAREN CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 84 (function_declaration)


state 229

   96 for_statement: FOR OPEN_PAREN for_init for_condition for_increment CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 96 (for_statement)


state 230

   48 case_clause: CASE expression COLON function_body . break_statement
   90 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 238


state 231

   50 default_clause: DEFAULT COLON function_body .
   90 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    $default  reduce using rule 50 (default_clause)

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 232

   83 function_declaration: FUNCTION IDENTIFIER COLON TYPE OPEN_PAREN param_list CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 83 (function_declaration)


state 233

   55 else_if_clauses: else_if_clauses ELSE IF . OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE

    OPEN_PAREN  shift, and go to state 239


state 234

   53 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 240
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 235

  112 body_block: BODY LBRACE function_body RBRACE .

    $default  reduce using rule 112 (body_block)


state 236

   90 function_body: function_body . statement
  115 post_block: POST LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 241
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 237

  118 always_block: ALWAYS LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 242
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 238

   13 statement: break_statement .
   48 case_clause: CASE expression COLON function_body break_statement .

    CASE      reduce using rule 48 (case_clause)
    DEFAULT   reduce using rule 48 (case_clause)
    RBRACE    reduce using rule 48 (case_clause)
    $default  reduce using rule 13 (statement)


state 239

   55 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN . expression CLOSE_PAREN LBRACE function_body RBRACE

    NOT_OP          shift, and go to state 42
    OPEN_PAREN      shift, and go to state 43
    DOUBLE          shift, and go to state 44
    FLOAT           shift, and go to state 45
    INTEGER         shift, and go to state 46
    BOOL            shift, and go to state 47
    CHAR_LITERAL    shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    IDENTIFIER      shift, and go to state 50

    expression  go to state 243


state 240

   53 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body . RBRACE
   90 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 244
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 241

  115 post_block: POST LBRACE function_body RBRACE .

    $default  reduce using rule 115 (post_block)


state 242

   90 function_body: function_body . statement
  118 always_block: ALWAYS LBRACE function_body . RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 245
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 243

   55 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression . CLOSE_PAREN LBRACE function_body RBRACE
   65 expression: expression . EQUALS expression
   66           | expression . OR_OP expression
   67           | expression . AND_OP expression
   68           | expression . EQUALS_EQUALS expression
   69           | expression . NOT_EQUAL expression
   70           | expression . LESS_THAN expression
   71           | expression . LESS_THAN_EQUAL expression
   72           | expression . GREATER_THAN expression
   73           | expression . GREATER_THAN_EQUAL expression
   74           | expression . PLUS expression
   75           | expression . MINUS expression
   76           | expression . MULT expression
   77           | expression . DIV expression
   78           | expression . MOD expression

    EQUALS              shift, and go to state 78
    OR_OP               shift, and go to state 79
    AND_OP              shift, and go to state 80
    NOT_EQUAL           shift, and go to state 81
    EQUALS_EQUALS       shift, and go to state 82
    GREATER_THAN_EQUAL  shift, and go to state 83
    GREATER_THAN        shift, and go to state 84
    LESS_THAN_EQUAL     shift, and go to state 85
    LESS_THAN           shift, and go to state 86
    MINUS               shift, and go to state 87
    PLUS                shift, and go to state 88
    MOD                 shift, and go to state 89
    DIV                 shift, and go to state 90
    MULT                shift, and go to state 91
    CLOSE_PAREN         shift, and go to state 246


state 244

   53 if_conditional_statement: IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE else_if_clauses ELSE LBRACE function_body RBRACE .

    $default  reduce using rule 53 (if_conditional_statement)


state 245

  118 always_block: ALWAYS LBRACE function_body RBRACE .

    $default  reduce using rule 118 (always_block)


state 246

   55 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN . LBRACE function_body RBRACE

    LBRACE  shift, and go to state 247


state 247

   55 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE . function_body RBRACE

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    IMPORT      [reduce using rule 89 (function_body)]
    PRINT       [reduce using rule 89 (function_body)]
    VAR         [reduce using rule 89 (function_body)]
    RETURN      [reduce using rule 89 (function_body)]
    FUNCTION    [reduce using rule 89 (function_body)]
    IF          [reduce using rule 89 (function_body)]
    WHILE       [reduce using rule 89 (function_body)]
    MAIN        [reduce using rule 89 (function_body)]
    FOR         [reduce using rule 89 (function_body)]
    BREAK       [reduce using rule 89 (function_body)]
    CONTINUE    [reduce using rule 89 (function_body)]
    SWITCH      [reduce using rule 89 (function_body)]
    IDENTIFIER  [reduce using rule 89 (function_body)]
    SORT_ARRAY  [reduce using rule 89 (function_body)]
    $default    reduce using rule 89 (function_body)

    statement                          go to state 176
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_body                      go to state 248
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 248

   55 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body . RBRACE
   90 function_body: function_body . statement

    IMPORT      shift, and go to state 3
    PRINT       shift, and go to state 4
    VAR         shift, and go to state 5
    RETURN      shift, and go to state 6
    FUNCTION    shift, and go to state 7
    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    MAIN        shift, and go to state 10
    FOR         shift, and go to state 11
    BREAK       shift, and go to state 12
    CONTINUE    shift, and go to state 13
    SWITCH      shift, and go to state 14
    RBRACE      shift, and go to state 249
    IDENTIFIER  shift, and go to state 15
    SORT_ARRAY  shift, and go to state 16

    statement                          go to state 196
    sort_statement                     go to state 18
    import_statement                   go to state 19
    continue_statement                 go to state 20
    print_statement                    go to state 21
    input_statement                    go to state 22
    var_declaration                    go to state 23
    var_declaration_without_semicolon  go to state 24
    assignment_statement               go to state 25
    return_statement                   go to state 26
    conditional_statement              go to state 27
    switch_conditional_statement       go to state 28
    if_conditional_statement           go to state 29
    function_declaration               go to state 30
    function_call_statement            go to state 31
    for_statement                      go to state 32
    while_statement                    go to state 33
    increment_statement                go to state 34
    decrement_statement                go to state 35
    break_statement                    go to state 36


state 249

   55 else_if_clauses: else_if_clauses ELSE IF OPEN_PAREN expression CLOSE_PAREN LBRACE function_body RBRACE .

    $default  reduce using rule 55 (else_if_clauses)
